{
	"id": 0,
	"name": "@akarui/aoi.db",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 7,
			"name": "CacheType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 12,
					"name": "FIFO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 6,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L6"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 13,
					"name": "FILO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 7,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L7"
						}
					],
					"type": {
						"type": "literal",
						"value": 5
					}
				},
				{
					"id": 10,
					"name": "LFU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 4,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L4"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 8,
					"name": "LRU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 2,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L2"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 11,
					"name": "MFU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 5,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L5"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 9,
					"name": "MRU",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 3,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L3"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						12,
						13,
						10,
						8,
						11,
						9
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/typings/enum.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L1"
				}
			]
		},
		{
			"id": 32,
			"name": "DatabaseEvents",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 41,
					"name": "Backup",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 41,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L41"
						}
					],
					"type": {
						"type": "literal",
						"value": "backup"
					}
				},
				{
					"id": 39,
					"name": "Clear",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L39"
						}
					],
					"type": {
						"type": "literal",
						"value": "clear"
					}
				},
				{
					"id": 33,
					"name": "Connect",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L33"
						}
					],
					"type": {
						"type": "literal",
						"value": "connect"
					}
				},
				{
					"id": 46,
					"name": "Connection",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 46,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L46"
						}
					],
					"type": {
						"type": "literal",
						"value": "connection"
					}
				},
				{
					"id": 47,
					"name": "Data",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L47"
						}
					],
					"type": {
						"type": "literal",
						"value": "data"
					}
				},
				{
					"id": 45,
					"name": "Debug",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L45"
						}
					],
					"type": {
						"type": "literal",
						"value": "debug"
					}
				},
				{
					"id": 37,
					"name": "Delete",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L37"
						}
					],
					"type": {
						"type": "literal",
						"value": "delete"
					}
				},
				{
					"id": 43,
					"name": "Disconnect",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L43"
						}
					],
					"type": {
						"type": "literal",
						"value": "disconnect"
					}
				},
				{
					"id": 34,
					"name": "Error",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 34,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L34"
						}
					],
					"type": {
						"type": "literal",
						"value": "error"
					}
				},
				{
					"id": 38,
					"name": "Flush",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L38"
						}
					],
					"type": {
						"type": "literal",
						"value": "flush"
					}
				},
				{
					"id": 36,
					"name": "Get",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 36,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L36"
						}
					],
					"type": {
						"type": "literal",
						"value": "get"
					}
				},
				{
					"id": 40,
					"name": "Replicate",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L40"
						}
					],
					"type": {
						"type": "literal",
						"value": "replicate"
					}
				},
				{
					"id": 42,
					"name": "Restore",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L42"
						}
					],
					"type": {
						"type": "literal",
						"value": "restore"
					}
				},
				{
					"id": 35,
					"name": "Set",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L35"
						}
					],
					"type": {
						"type": "literal",
						"value": "set"
					}
				},
				{
					"id": 44,
					"name": "TableReady",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L44"
						}
					],
					"type": {
						"type": "literal",
						"value": "tableReady"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						41,
						39,
						33,
						46,
						47,
						45,
						37,
						43,
						34,
						38,
						36,
						40,
						42,
						35,
						44
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/typings/enum.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L32"
				}
			]
		},
		{
			"id": 14,
			"name": "DatabaseMethod",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 25,
					"name": "All",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L23"
						}
					],
					"type": {
						"type": "literal",
						"value": 10
					}
				},
				{
					"id": 31,
					"name": "Analyze",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L29"
						}
					],
					"type": {
						"type": "literal",
						"value": 16
					}
				},
				{
					"id": 20,
					"name": "Backup",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L18"
						}
					],
					"type": {
						"type": "literal",
						"value": 5
					}
				},
				{
					"id": 18,
					"name": "Clear",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L16"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 16,
					"name": "Delete",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 14,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L14"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 30,
					"name": "DeleteMany",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L28"
						}
					],
					"type": {
						"type": "literal",
						"value": 15
					}
				},
				{
					"id": 29,
					"name": "FindMany",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L27"
						}
					],
					"type": {
						"type": "literal",
						"value": 14
					}
				},
				{
					"id": 28,
					"name": "FindOne",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 26,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L26"
						}
					],
					"type": {
						"type": "literal",
						"value": 13
					}
				},
				{
					"id": 17,
					"name": "Flush",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L15"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 24,
					"name": "Get",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L22"
						}
					],
					"type": {
						"type": "literal",
						"value": 9
					}
				},
				{
					"id": 26,
					"name": "Has",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 24,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L24"
						}
					],
					"type": {
						"type": "literal",
						"value": 11
					}
				},
				{
					"id": 27,
					"name": "NOOP",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L25"
						}
					],
					"type": {
						"type": "literal",
						"value": 12
					}
				},
				{
					"id": 22,
					"name": "NewFile",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L20"
						}
					],
					"type": {
						"type": "literal",
						"value": 7
					}
				},
				{
					"id": 23,
					"name": "Ping",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L21"
						}
					],
					"type": {
						"type": "literal",
						"value": 8
					}
				},
				{
					"id": 19,
					"name": "Replicate",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L17"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 21,
					"name": "Restore",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L19"
						}
					],
					"type": {
						"type": "literal",
						"value": 6
					}
				},
				{
					"id": 15,
					"name": "Set",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L12"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						25,
						31,
						20,
						18,
						16,
						30,
						29,
						28,
						17,
						24,
						26,
						27,
						22,
						23,
						19,
						21,
						15
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/typings/enum.ts",
					"line": 10,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L10"
				}
			]
		},
		{
			"id": 2699,
			"name": "Permissions",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 2704,
					"name": "Admin",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L23"
						}
					],
					"type": {
						"type": "literal",
						"value": 16
					}
				},
				{
					"id": 2703,
					"name": "Manage",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L22"
						}
					],
					"type": {
						"type": "literal",
						"value": 8
					}
				},
				{
					"id": 2700,
					"name": "ROnly",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L19"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 2702,
					"name": "RW",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L21"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 2701,
					"name": "WOnly",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L20"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						2704,
						2703,
						2700,
						2702,
						2701
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/typings/enum.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L18"
				}
			]
		},
		{
			"id": 2692,
			"name": "ReceiverOpCodes",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 2697,
					"name": "AckAnalyze",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 14,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L14"
						}
					],
					"type": {
						"type": "literal",
						"value": 16
					}
				},
				{
					"id": 2693,
					"name": "AckConnect",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L10"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 2698,
					"name": "AckDisconnect",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L15"
						}
					],
					"type": {
						"type": "literal",
						"value": 32
					}
				},
				{
					"id": 2696,
					"name": "AckOperation",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L13"
						}
					],
					"type": {
						"type": "literal",
						"value": 8
					}
				},
				{
					"id": 2695,
					"name": "ConnectionDenied",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L12"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 2694,
					"name": "Pong",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 11,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L11"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						2697,
						2693,
						2698,
						2696,
						2695,
						2694
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/typings/enum.ts",
					"line": 9,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L9"
				}
			]
		},
		{
			"id": 48,
			"name": "ReferenceType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 49,
					"name": "Cache",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 51,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L51"
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 50,
					"name": "File",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/enum.ts",
							"line": 52,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L52"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						49,
						50
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/typings/enum.ts",
					"line": 50,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/enum.ts#L50"
				}
			]
		},
		{
			"id": 2686,
			"name": "TransmitterOpCodes",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 2690,
					"name": "Analyze",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 5,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L5"
						}
					],
					"type": {
						"type": "literal",
						"value": 16
					}
				},
				{
					"id": 2687,
					"name": "Connect",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 2,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L2"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 2691,
					"name": "Disconnect",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 6,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L6"
						}
					],
					"type": {
						"type": "literal",
						"value": 32
					}
				},
				{
					"id": 2689,
					"name": "Operation",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 4,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L4"
						}
					],
					"type": {
						"type": "literal",
						"value": 8
					}
				},
				{
					"id": 2688,
					"name": "Ping",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/enum.ts",
							"line": 3,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L3"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						2690,
						2687,
						2691,
						2689,
						2688
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/typings/enum.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/enum.ts#L1"
				}
			]
		},
		{
			"id": 312,
			"name": "KeyValue",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 355,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 49,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L49"
						}
					],
					"signatures": [
						{
							"id": 356,
							"name": "new KeyValue",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "create a new database"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\nconst db = new KeyValue({\n dataConfig:{\n path:\"./database\",\n },\n encryptionConfig:{\n encriptData:true,\n securityKey:\"a-32-characters-long-string-here\"\n }\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 49,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L49"
								}
							],
							"parameters": [
								{
									"id": 357,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "options to create database"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 582,
										"name": "KeyValueOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 358,
					"name": "#options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L22"
						}
					],
					"type": {
						"type": "reference",
						"target": 637,
						"typeArguments": [
							{
								"type": "reference",
								"target": 582,
								"name": "KeyValueOptions",
								"package": "@akarui/aoi.db"
							}
						],
						"name": "DeepRequired",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 363,
					"name": "readyAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 359,
					"name": "tables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L23"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 360,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 362,
											"name": "ready",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/database.ts",
													"line": 27,
													"character": 12,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L27"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 361,
											"name": "table",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/database.ts",
													"line": 26,
													"character": 12,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L26"
												}
											],
											"type": {
												"type": "reference",
												"target": 105,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												362,
												361
											]
										}
									],
									"sources": [
										{
											"fileName": "lib/KeyValue/src/database.ts",
											"line": 25,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L25"
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				},
				{
					"id": 352,
					"name": "captureRejectionSymbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: "
							},
							{
								"kind": "code",
								"text": "`Symbol.for('nodejs.rejection')`"
							},
							{
								"kind": "text",
								"text": "\n\nSee how to write a custom "
							},
							{
								"kind": "code",
								"text": "`rejection handler`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 402,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 143,
							"name": "captureRejectionSymbol",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.captureRejectionSymbol"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejectionSymbol"
					}
				},
				{
					"id": 353,
					"name": "captureRejections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
							},
							{
								"kind": "code",
								"text": "`captureRejections`"
							},
							{
								"kind": "text",
								"text": " option on all new "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " objects."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 409,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejections"
					}
				},
				{
					"id": 354,
					"name": "defaultMaxListeners",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "By default, a maximum of "
							},
							{
								"kind": "code",
								"text": "`10`"
							},
							{
								"kind": "text",
								"text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances\nusing the "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " method. To change the default\nfor _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": "property can be used. If this value is not a positive number, a "
							},
							{
								"kind": "code",
								"text": "`RangeError`"
							},
							{
								"kind": "text",
								"text": "is thrown.\n\nTake caution when setting the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": " because the\nchange affects _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, including those created before\nthe change is made. However, calling "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " still has\nprecedence over "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": ".\n\nThis is not a hard limit. The "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": ", the "
							},
							{
								"kind": "code",
								"text": "`emitter.getMaxListeners()`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners()`"
							},
							{
								"kind": "text",
								"text": "methods can be used to\ntemporarily avoid this warning:\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThe "
							},
							{
								"kind": "code",
								"text": "`--trace-warnings`"
							},
							{
								"kind": "text",
								"text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
							},
							{
								"kind": "code",
								"text": "`process.on('warning')`"
							},
							{
								"kind": "text",
								"text": " and will\nhave the additional "
							},
							{
								"kind": "code",
								"text": "`emitter`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`count`"
							},
							{
								"kind": "text",
								"text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is set to "
							},
							{
								"kind": "code",
								"text": "`'MaxListenersExceededWarning'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.11.2"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 446,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.defaultMaxListeners"
					}
				},
				{
					"id": 351,
					"name": "errorMonitor",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This symbol shall be used to install a listener for only monitoring "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": "events. Listeners installed using this symbol are called before the regular"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " event is emitted. Therefore, the process will still crash if no\nregular "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listener is installed."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.6.0, v12.17.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 395,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 142,
							"name": "errorMonitor",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.errorMonitor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.errorMonitor"
					}
				},
				{
					"id": 369,
					"name": "options",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 287,
							"character": 8,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L287"
						}
					],
					"getSignature": {
						"id": 370,
						"name": "options",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/KeyValue/src/database.ts",
								"line": 287,
								"character": 4,
								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L287"
							}
						],
						"type": {
							"type": "reference",
							"target": 637,
							"typeArguments": [
								{
									"type": "reference",
									"target": 582,
									"name": "KeyValueOptions",
									"package": "@akarui/aoi.db"
								}
							],
							"name": "DeepRequired",
							"package": "@akarui/aoi.db"
						}
					}
				},
				{
					"id": 364,
					"name": "#finalizeOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 98,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L98"
						}
					],
					"signatures": [
						{
							"id": 365,
							"name": "#finalizeOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "finalize options"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 98,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L98"
								}
							],
							"parameters": [
								{
									"id": 366,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "options to finalize"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 582,
										"name": "KeyValueOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 637,
								"typeArguments": [
									{
										"type": "reference",
										"target": 582,
										"name": "KeyValueOptions",
										"package": "@akarui/aoi.db"
									}
								],
								"name": "DeepRequired",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 430,
					"name": "[captureRejectionSymbol]",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 112,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 431,
							"name": "[captureRejectionSymbol]",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 112,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 432,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								},
								{
									"id": 433,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 434,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.[captureRejectionSymbol]"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.[captureRejectionSymbol]"
					}
				},
				{
					"id": 435,
					"name": "addListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 545,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 436,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.on(eventName, listener)`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 545,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 437,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 438,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 439,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 545,
													"character": 66
												}
											],
											"signatures": [
												{
													"id": 440,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 545,
															"character": 66
														}
													],
													"parameters": [
														{
															"id": 441,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addListener"
					}
				},
				{
					"id": 407,
					"name": "all",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 469,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L469"
						}
					],
					"signatures": [
						{
							"id": 408,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get all data from table"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.all(\"main\",(value,index)=>{\n  return value.key === \"key\" && value.value === \"value\";\n},10)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 469,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L469"
								}
							],
							"parameters": [
								{
									"id": 409,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to get"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 410,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "query to match"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 411,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/database.ts",
													"line": 471,
													"character": 16,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L471"
												}
											],
											"signatures": [
												{
													"id": 412,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/database.ts",
															"line": 471,
															"character": 16,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L471"
														}
													],
													"parameters": [
														{
															"id": 413,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 414,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "limit of data to get"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 415,
									"name": "order",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "desc"
											},
											{
												"type": "literal",
												"value": "firstN"
											},
											{
												"type": "literal",
												"value": "asc"
											}
										]
									},
									"defaultValue": "'firstN'"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 428,
					"name": "avgPing",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 564,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L564"
						}
					],
					"signatures": [
						{
							"id": 429,
							"name": "avgPing",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 564,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L564"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 416,
					"name": "backup",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 492,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L492"
						}
					],
					"signatures": [
						{
							"id": 417,
							"name": "backup",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "perform a backup of database"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\nsetInterval(()=>{\n<KeyValue>.backup();\n},1000 * 60 * 60 * 24) // backup every 24 hours\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 492,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L492"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 384,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 365,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L365"
						}
					],
					"signatures": [
						{
							"id": 385,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "clear table"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.clear(\"main\");\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 365,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L365"
								}
							],
							"parameters": [
								{
									"id": 386,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to clear"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 391,
					"name": "clearAll",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 401,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L401"
						}
					],
					"signatures": [
						{
							"id": 392,
							"name": "clearAll",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "clear all tables"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.clearAll();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 401,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L401"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 367,
					"name": "connect",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 172,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L172"
						}
					],
					"signatures": [
						{
							"id": 368,
							"name": "connect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "connect to database"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.connect()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 172,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L172"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 380,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 347,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L347"
						}
					],
					"signatures": [
						{
							"id": 381,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "delete data from database"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.delete(\"main\",\"key\");\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 347,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L347"
								}
							],
							"parameters": [
								{
									"id": 382,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table where data is saved"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 383,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to delete"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 418,
					"name": "deleteMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 547,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L547"
						}
					],
					"signatures": [
						{
							"id": 419,
							"name": "deleteMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "deletes all data that matches the query"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "list of deleted data if query is provided else boolean to indicate if table is cleared"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.deleteMany(\"main\",(value,index)=>{\n   return value.key === \"key\" && value.value === \"value\";\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 547,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L547"
								}
							],
							"parameters": [
								{
									"id": 420,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to delete"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 421,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "query to match"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 422,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/database.ts",
													"line": 549,
													"character": 16,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L549"
												}
											],
											"signatures": [
												{
													"id": 423,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/database.ts",
															"line": 549,
															"character": 16,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L549"
														}
													],
													"parameters": [
														{
															"id": 424,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 484,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 807,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 485,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously calls each of the listeners registered for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the event had listeners, "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " otherwise.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 807,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 486,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 487,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.emit"
					}
				},
				{
					"id": 506,
					"name": "eventNames",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 870,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 507,
							"name": "eventNames",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
									},
									{
										"kind": "code",
										"text": "`Symbol`"
									},
									{
										"kind": "text",
										"text": "s.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 870,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.eventNames"
					}
				},
				{
					"id": 400,
					"name": "findMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 444,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L444"
						}
					],
					"signatures": [
						{
							"id": 401,
							"name": "findMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "find all data that matches the query"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.findMany(\"main\",(value,index)=>{\n   return value.key === \"key\" && value.value === \"value\";\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 444,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L444"
								}
							],
							"parameters": [
								{
									"id": 402,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to find"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 403,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "query to match"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 404,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/database.ts",
													"line": 446,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L446"
												}
											],
											"signatures": [
												{
													"id": 405,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/database.ts",
															"line": 446,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L446"
														}
													],
													"parameters": [
														{
															"id": 406,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 393,
					"name": "findOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 420,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L420"
						}
					],
					"signatures": [
						{
							"id": 394,
							"name": "findOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "find the first data that matches the query"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.findOne(\"main\",(value,index)=>{\n    return value.key === \"key\" && value.value === \"value\";\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 420,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L420"
								}
							],
							"parameters": [
								{
									"id": 395,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to find"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 396,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "query to match"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 397,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/database.ts",
													"line": 422,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L422"
												}
											],
											"signatures": [
												{
													"id": 398,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/database.ts",
															"line": 422,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L422"
														}
													],
													"parameters": [
														{
															"id": 399,
															"name": "value",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 85,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 376,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 328,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L328"
						}
					],
					"signatures": [
						{
							"id": 377,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get data from database"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.get(\"main\",\"key\");\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 328,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L328"
								}
							],
							"parameters": [
								{
									"id": 378,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table where data is saved"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 379,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to get"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 476,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 722,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 477,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current max listener value for the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " which is either\nset by "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " or defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "defaultMaxListeners",
										"target": 354
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v1.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 722,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 387,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 384,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L384"
						}
					],
					"signatures": [
						{
							"id": 388,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "check if data exists in database"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.has(\"main\",\"key\");\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 384,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L384"
								}
							],
							"parameters": [
								{
									"id": 389,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table to check"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 390,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to check"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 488,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 816,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 489,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of listeners listening for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\nIf "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v3.2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 816,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 490,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 491,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event handler function"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 478,
					"name": "listeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 735,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 479,
							"name": "listeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 735,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 480,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listeners"
					}
				},
				{
					"id": 463,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 695,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 464,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.removeListener()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v10.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 695,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 465,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 466,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 467,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 695,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 468,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 695,
															"character": 58
														}
													],
													"parameters": [
														{
															"id": 469,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.off"
					}
				},
				{
					"id": 442,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 577,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 443,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the end of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.101"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 577,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 444,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 445,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 446,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 577,
													"character": 57
												}
											],
											"signatures": [
												{
													"id": 447,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 577,
															"character": 57
														}
													],
													"parameters": [
														{
															"id": 448,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 449,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 607,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 450,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". The\nnext time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this listener is removed and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependOnceListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 607,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 451,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 452,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 453,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 607,
													"character": 59
												}
											],
											"signatures": [
												{
													"id": 454,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 607,
															"character": 59
														}
													],
													"parameters": [
														{
															"id": 455,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 425,
					"name": "ping",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 557,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L557"
						}
					],
					"signatures": [
						{
							"id": 426,
							"name": "ping",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 557,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L557"
								}
							],
							"parameters": [
								{
									"id": 427,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 492,
					"name": "prependListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 834,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 493,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the _beginning_ of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 834,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 494,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 495,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 496,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 834,
													"character": 70
												}
											],
											"signatures": [
												{
													"id": 497,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 834,
															"character": 70
														}
													],
													"parameters": [
														{
															"id": 498,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependListener"
					}
				},
				{
					"id": 499,
					"name": "prependOnceListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 850,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 500,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " to the _beginning_ of the listeners array. The next time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 850,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 501,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 502,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 503,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 850,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 504,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 850,
															"character": 74
														}
													],
													"parameters": [
														{
															"id": 505,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependOnceListener"
					}
				},
				{
					"id": 481,
					"name": "rawListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 766,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 482,
							"name": "rawListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ",\nincluding any wrappers (such as those created by "
									},
									{
										"kind": "code",
										"text": "`.once()`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 766,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 483,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.rawListeners"
					}
				},
				{
					"id": 470,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 706,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 471,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes all listeners, or those of the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 706,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 472,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeAllListeners"
					}
				},
				{
					"id": 456,
					"name": "removeListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 690,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 457,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the specified "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " from the listener array for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", then "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`removeAllListeners()`"
									},
									{
										"kind": "text",
										"text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
									},
									{
										"kind": "code",
										"text": "`emit()`"
									},
									{
										"kind": "text",
										"text": " in progress. Subsequent events behave as expected.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
									},
									{
										"kind": "code",
										"text": "`emitter.listeners()`"
									},
									{
										"kind": "text",
										"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove the most\nrecently added instance. In the example the "
									},
									{
										"kind": "code",
										"text": "`once('ping')`"
									},
									{
										"kind": "text",
										"text": "listener is removed:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 690,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 458,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 459,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 460,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 690,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 461,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 690,
															"character": 69
														}
													],
													"parameters": [
														{
															"id": 462,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeListener"
					}
				},
				{
					"id": 371,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 305,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L305"
						}
					],
					"signatures": [
						{
							"id": 372,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "set data to database"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValue>.set(\"main\",\"key\",{\n     value:\"value\",\n});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 305,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L305"
								}
							],
							"parameters": [
								{
									"id": 373,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "table where data will be saved"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 374,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to set"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 375,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "value to set"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 614,
												"name": "KeyValueDataInterface",
												"package": "@akarui/aoi.db"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 473,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 716,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 474,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s will print a warning if more than "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " method allows the limit to be\nmodified for this specific "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance. The value can be set to"
									},
									{
										"kind": "code",
										"text": "`Infinity`"
									},
									{
										"kind": "text",
										"text": " (or "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.5"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 716,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 475,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				},
				{
					"id": 344,
					"name": "addAbortListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 387,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 345,
							"name": "addAbortListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Listens once to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on the provided "
									},
									{
										"kind": "code",
										"text": "`signal`"
									},
									{
										"kind": "text",
										"text": ".\n\nListening to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall "
									},
									{
										"kind": "code",
										"text": "`e.stopImmediatePropagation()`"
									},
									{
										"kind": "text",
										"text": ". Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": "s in Node.js APIs by solving these\ntwo issues by listening to the event such that "
									},
									{
										"kind": "code",
										"text": "`stopImmediatePropagation`"
									},
									{
										"kind": "text",
										"text": " does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v20.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Disposable that removes the "
											},
											{
												"kind": "code",
												"text": "`abort`"
											},
											{
												"kind": "text",
												"text": " listener."
											}
										]
									}
								],
								"modifierTags": [
									"@experimental"
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 387,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 346,
									"name": "signal",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "AbortSignal"
										},
										"name": "AbortSignal",
										"package": "typescript"
									}
								},
								{
									"id": 347,
									"name": "resource",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 348,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 387,
													"character": 63
												}
											],
											"signatures": [
												{
													"id": 349,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 387,
															"character": 63
														}
													],
													"parameters": [
														{
															"id": 350,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Event"
																},
																"name": "Event",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/globals.d.ts",
									"qualifiedName": "__global.Disposable"
								},
								"name": "Disposable",
								"package": "@types/node",
								"qualifiedName": "__global.Disposable"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addAbortListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addAbortListener"
					}
				},
				{
					"id": 313,
					"name": "defaultOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/database.ts",
							"line": 59,
							"character": 11,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L59"
						}
					],
					"signatures": [
						{
							"id": 314,
							"name": "defaultOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get default options"
											}
										]
									},
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "default options"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/database.ts",
									"line": 59,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L59"
								}
							],
							"type": {
								"type": "reference",
								"target": 637,
								"typeArguments": [
									{
										"type": "reference",
										"target": 582,
										"name": "KeyValueOptions",
										"package": "@akarui/aoi.db"
									}
								],
								"name": "DeepRequired",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 333,
					"name": "getEventListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 308,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 334,
							"name": "getEventListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.listeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.2.0, v14.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 308,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 335,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 336,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getEventListeners"
					}
				},
				{
					"id": 337,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 337,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 338,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the currently set max amount of listeners.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.getMaxListeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v19.9.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 337,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 339,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 329,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 280,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 330,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A class method that returns the number of listeners for the given "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "registered on the given "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.12"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v3.2.0 - Use "
											},
											{
												"kind": "code",
												"text": "`listenerCount`"
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 280,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 331,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The emitter to query"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 332,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 324,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 258,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 325,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns an "
									},
									{
										"kind": "code",
										"text": "`AsyncIterator`"
									},
									{
										"kind": "text",
										"text": " that iterates "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " events. It will throw\nif the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": ". It removes all listeners when\nexiting the loop. The "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting on events:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.16.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events emitted by the "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 258,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 326,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 327,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 328,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
									"qualifiedName": "AsyncIterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 315,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 193,
							"character": 15
						},
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 198,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 316,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " that is fulfilled when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits the given\nevent or that is rejected if the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " while waiting.\nThe "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event\nsemantics and does not listen to the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe special handling of the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is only used when "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": "is used to wait for another event. If "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": " is used to wait for the\n'"
									},
									{
										"kind": "code",
										"text": "`error'`"
									},
									{
										"kind": "text",
										"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting for the event:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.13.0, v10.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 193,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 317,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_NodeEventTarget"
										},
										"name": "_NodeEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 318,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 319,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 320,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 198,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 321,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_DOMEventTarget"
										},
										"name": "_DOMEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 322,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 323,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 340,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 352,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 341,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 352,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 342,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative number. The maximum number of listeners per "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": " event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 343,
									"name": "eventTargets",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													"name": "EventEmitter",
													"package": "@types/node",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "_DOMEventTarget"
													},
													"name": "_DOMEventTarget",
													"package": "@types/node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						355
					]
				},
				{
					"title": "Properties",
					"children": [
						358,
						363,
						359,
						352,
						353,
						354,
						351
					]
				},
				{
					"title": "Accessors",
					"children": [
						369
					]
				},
				{
					"title": "Methods",
					"children": [
						364,
						430,
						435,
						407,
						428,
						416,
						384,
						391,
						367,
						380,
						418,
						484,
						506,
						400,
						393,
						376,
						476,
						387,
						488,
						478,
						463,
						442,
						449,
						425,
						492,
						499,
						481,
						470,
						456,
						371,
						473,
						344,
						313,
						333,
						337,
						329,
						324,
						315,
						340
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/src/database.ts",
					"line": 21,
					"character": 21,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/database.ts#L21"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 51,
			"name": "KeyValueCacher",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 52,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/LRUcache.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 53,
							"name": "new KeyValueCacher",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/LRUcache.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 54,
									"name": "capacity",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 51,
								"name": "LRUCache",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 56,
					"name": "cache",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/LRUcache.ts",
							"line": 6,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L6"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 85,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 55,
					"name": "capacity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/LRUcache.ts",
							"line": 5,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L5"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 57,
					"name": "queue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/LRUcache.ts",
							"line": 7,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L7"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@akarui/structures/src/PriorityQueue/index.ts",
							"qualifiedName": "default"
						},
						"name": "default",
						"package": "@akarui/structures"
					}
				},
				{
					"id": 77,
					"name": "all",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/LRUcache.ts",
							"line": 64,
							"character": 2,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L64"
						}
					],
					"signatures": [
						{
							"id": 78,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/LRUcache.ts",
									"line": 64,
									"character": 2,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L64"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 85,
									"name": "default",
									"package": "@akarui/aoi.db"
								}
							}
						}
					]
				},
				{
					"id": 75,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/LRUcache.ts",
							"line": 59,
							"character": 2,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L59"
						}
					],
					"signatures": [
						{
							"id": 76,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/LRUcache.ts",
									"line": 59,
									"character": 2,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L59"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 79,
					"name": "findOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/LRUcache.ts",
							"line": 67,
							"character": 2,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L67"
						}
					],
					"signatures": [
						{
							"id": 80,
							"name": "findOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/LRUcache.ts",
									"line": 67,
									"character": 2,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L67"
								}
							],
							"parameters": [
								{
									"id": 81,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 82,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/LRUcache.ts",
													"line": 67,
													"character": 17,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L67"
												}
											],
											"signatures": [
												{
													"id": 83,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/LRUcache.ts",
															"line": 67,
															"character": 17,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L67"
														}
													],
													"parameters": [
														{
															"id": 84,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 85,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								]
							}
						}
					]
				},
				{
					"id": 58,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/LRUcache.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L15"
						}
					],
					"signatures": [
						{
							"id": 59,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/LRUcache.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 60,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 85,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								]
							}
						}
					]
				},
				{
					"id": 65,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/LRUcache.ts",
							"line": 39,
							"character": 2,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L39"
						}
					],
					"signatures": [
						{
							"id": 66,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/LRUcache.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L39"
								}
							],
							"parameters": [
								{
									"id": 67,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 61,
					"name": "put",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/LRUcache.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L25"
						}
					],
					"signatures": [
						{
							"id": 62,
							"name": "put",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/LRUcache.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L25"
								}
							],
							"parameters": [
								{
									"id": 63,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 64,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 85,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 72,
					"name": "remove",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/LRUcache.ts",
							"line": 55,
							"character": 2,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 73,
							"name": "remove",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/LRUcache.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L55"
								}
							],
							"parameters": [
								{
									"id": 74,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 68,
					"name": "updatePriority",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/LRUcache.ts",
							"line": 43,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 69,
							"name": "updatePriority",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/LRUcache.ts",
									"line": 43,
									"character": 2,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L43"
								}
							],
							"parameters": [
								{
									"id": 70,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 71,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						52
					]
				},
				{
					"title": "Properties",
					"children": [
						56,
						55,
						57
					]
				},
				{
					"title": "Methods",
					"children": [
						77,
						75,
						79,
						58,
						65,
						61,
						72,
						68
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/src/LRUcache.ts",
					"line": 4,
					"character": 6,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/LRUcache.ts#L4"
				}
			]
		},
		{
			"id": 85,
			"name": "KeyValueData",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 88,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 31,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 89,
							"name": "new KeyValueData",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "create data"
											}
										]
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Data"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\nconst data = new Data({\nfile:\"file\",\nkey:\"key\",\nvalue:\"value\",\ntype:\"string\"\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/data.ts",
									"line": 31,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L31"
								}
							],
							"parameters": [
								{
									"id": 90,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "data to create"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4,
										"typeArguments": [
											{
												"type": "reference",
												"target": 614,
												"name": "KeyValueDataInterface",
												"package": "@akarui/aoi.db"
											},
											{
												"type": "literal",
												"value": "type"
											}
										],
										"name": "Optional",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 85,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 91,
					"name": "file",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 9,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 92,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 10,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 94,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 12,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L12"
						}
					],
					"type": {
						"type": "reference",
						"target": 639,
						"name": "KeyValueTypeList",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 93,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 11,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 103,
					"name": "size",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 92,
							"character": 5,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L92"
						}
					],
					"getSignature": {
						"id": 104,
						"name": "size",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/KeyValue/src/data.ts",
								"line": 92,
								"character": 1,
								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L92"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 95,
					"name": "#getType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 43,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 96,
							"name": "#getType",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get type of value"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/data.ts",
									"line": 43,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L43"
								}
							],
							"parameters": [
								{
									"id": 97,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "value to get type"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 639,
								"name": "KeyValueTypeList",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 98,
					"name": "#parseValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 52,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L52"
						}
					],
					"signatures": [
						{
							"id": 99,
							"name": "#parseValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "parse value to correct type"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/data.ts",
									"line": 52,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L52"
								}
							],
							"parameters": [
								{
									"id": 100,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "data to parse"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4,
										"typeArguments": [
											{
												"type": "reference",
												"target": 614,
												"name": "KeyValueDataInterface",
												"package": "@akarui/aoi.db"
											},
											{
												"type": "literal",
												"value": "type"
											}
										],
										"name": "Optional",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 101,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 80,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L80"
						}
					],
					"signatures": [
						{
							"id": 102,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "convert data to json"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									},
									{
										"tag": "@memberof",
										"content": [
											{
												"kind": "text",
												"text": "Data"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<KeyValueData>.toJSON()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/data.ts",
									"line": 80,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L80"
								}
							],
							"type": {
								"type": "reference",
								"target": 624,
								"name": "KeyValueJSONOption",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 86,
					"name": "emptyData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/data.ts",
							"line": 100,
							"character": 8,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L100"
						}
					],
					"signatures": [
						{
							"id": 87,
							"name": "emptyData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "create empty data"
											}
										]
									},
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/data.ts",
									"line": 100,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L100"
								}
							],
							"type": {
								"type": "reference",
								"target": 85,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						88
					]
				},
				{
					"title": "Properties",
					"children": [
						91,
						92,
						94,
						93
					]
				},
				{
					"title": "Accessors",
					"children": [
						103
					]
				},
				{
					"title": "Methods",
					"children": [
						95,
						98,
						101,
						86
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/src/data.ts",
					"line": 8,
					"character": 21,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/data.ts#L8"
				}
			]
		},
		{
			"id": 508,
			"name": "KeyValueFileManager",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 509,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 14,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 510,
							"name": "new KeyValueFileManager",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 14,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L14"
								}
							],
							"parameters": [
								{
									"id": 511,
									"name": "maxSize",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 512,
									"name": "hashSize",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "20"
								},
								{
									"id": 513,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 105,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 508,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 516,
					"name": "#array",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 11,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L11"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "lib/KeyValue/src/File.ts",
								"qualifiedName": "default"
							},
							"name": "default",
							"package": "@akarui/aoi.db"
						}
					}
				},
				{
					"id": 515,
					"name": "#hashSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 10,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 514,
					"name": "#maxSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 9,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 518,
					"name": "#rehashing",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 13,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 517,
					"name": "#table",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 12,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L12"
						}
					],
					"type": {
						"type": "reference",
						"target": 105,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 523,
					"name": "hashSize",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 61,
							"character": 5,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L61"
						}
					],
					"getSignature": {
						"id": 524,
						"name": "hashSize",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/KeyValue/src/FileManager.ts",
								"line": 61,
								"character": 1,
								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L61"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 521,
					"name": "maxHashArraySize",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 57,
							"character": 5,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L57"
						}
					],
					"getSignature": {
						"id": 522,
						"name": "maxHashArraySize",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/KeyValue/src/FileManager.ts",
								"line": 57,
								"character": 1,
								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L57"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 531,
					"name": "#getHashIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 100,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L100"
						}
					],
					"signatures": [
						{
							"id": 532,
							"name": "#getHashIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 100,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L100"
								}
							],
							"parameters": [
								{
									"id": 533,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 525,
					"name": "#hash",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 65,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L65"
						}
					],
					"signatures": [
						{
							"id": 526,
							"name": "#hash",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 65,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L65"
								}
							],
							"parameters": [
								{
									"id": 527,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 534,
					"name": "#rehash",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 105,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L105"
						}
					],
					"signatures": [
						{
							"id": 535,
							"name": "#rehash",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 105,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L105"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 528,
					"name": "add",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 73,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 529,
							"name": "add",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 73,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L73"
								}
							],
							"parameters": [
								{
									"id": 530,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 85,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 547,
					"name": "all",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 237,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L237"
						}
					],
					"signatures": [
						{
							"id": 548,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 237,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L237"
								}
							],
							"parameters": [
								{
									"id": 549,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 550,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/FileManager.ts",
													"line": 238,
													"character": 9,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L238"
												}
											],
											"signatures": [
												{
													"id": 551,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/FileManager.ts",
															"line": 238,
															"character": 9,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L238"
														}
													],
													"parameters": [
														{
															"id": 552,
															"name": "d",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 553,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 554,
									"name": "order",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "desc"
											},
											{
												"type": "literal",
												"value": "firstN"
											},
											{
												"type": "literal",
												"value": "asc"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 542,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 195,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L195"
						}
					],
					"signatures": [
						{
							"id": 543,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 195,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L195"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 561,
					"name": "findMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 317,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L317"
						}
					],
					"signatures": [
						{
							"id": 562,
							"name": "findMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 317,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L317"
								}
							],
							"parameters": [
								{
									"id": 563,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 564,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/FileManager.ts",
													"line": 317,
													"character": 23,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L317"
												}
											],
											"signatures": [
												{
													"id": 565,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/FileManager.ts",
															"line": 317,
															"character": 23,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L317"
														}
													],
													"parameters": [
														{
															"id": 566,
															"name": "d",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 555,
					"name": "findOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 295,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L295"
						}
					],
					"signatures": [
						{
							"id": 556,
							"name": "findOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 295,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L295"
								}
							],
							"parameters": [
								{
									"id": 557,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 558,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/FileManager.ts",
													"line": 295,
													"character": 22,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L295"
												}
											],
											"signatures": [
												{
													"id": 559,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/FileManager.ts",
															"line": 295,
															"character": 22,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L295"
														}
													],
													"parameters": [
														{
															"id": 560,
															"name": "d",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 85,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 539,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 175,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L175"
						}
					],
					"signatures": [
						{
							"id": 540,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 175,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L175"
								}
							],
							"parameters": [
								{
									"id": 541,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 567,
					"name": "getFirstN",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 343,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L343"
						}
					],
					"signatures": [
						{
							"id": 568,
							"name": "getFirstN",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 343,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L343"
								}
							],
							"parameters": [
								{
									"id": 569,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 570,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/FileManager.ts",
													"line": 343,
													"character": 24,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L343"
												}
											],
											"signatures": [
												{
													"id": 571,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/FileManager.ts",
															"line": 343,
															"character": 24,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L343"
														}
													],
													"parameters": [
														{
															"id": 572,
															"name": "d",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 573,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 544,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 216,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L216"
						}
					],
					"signatures": [
						{
							"id": 545,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 216,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L216"
								}
							],
							"parameters": [
								{
									"id": 546,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 519,
					"name": "initialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 21,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L21"
						}
					],
					"signatures": [
						{
							"id": 520,
							"name": "initialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 21,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L21"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 580,
					"name": "ping",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 391,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L391"
						}
					],
					"signatures": [
						{
							"id": 581,
							"name": "ping",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 391,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L391"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 536,
					"name": "remove",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 155,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L155"
						}
					],
					"signatures": [
						{
							"id": 537,
							"name": "remove",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 155,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L155"
								}
							],
							"parameters": [
								{
									"id": 538,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 574,
					"name": "removeMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/FileManager.ts",
							"line": 370,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L370"
						}
					],
					"signatures": [
						{
							"id": 575,
							"name": "removeMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/FileManager.ts",
									"line": 370,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L370"
								}
							],
							"parameters": [
								{
									"id": 576,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 577,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/FileManager.ts",
													"line": 370,
													"character": 25,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L370"
												}
											],
											"signatures": [
												{
													"id": 578,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/FileManager.ts",
															"line": 370,
															"character": 25,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L370"
														}
													],
													"parameters": [
														{
															"id": 579,
															"name": "d",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						509
					]
				},
				{
					"title": "Properties",
					"children": [
						516,
						515,
						514,
						518,
						517
					]
				},
				{
					"title": "Accessors",
					"children": [
						523,
						521
					]
				},
				{
					"title": "Methods",
					"children": [
						531,
						525,
						534,
						528,
						547,
						542,
						561,
						555,
						539,
						567,
						544,
						519,
						580,
						536,
						574
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/src/FileManager.ts",
					"line": 8,
					"character": 21,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/FileManager.ts#L8"
				}
			]
		},
		{
			"id": 105,
			"name": "KeyValueTable",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 146,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 36,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 147,
							"name": "new KeyValueTable",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 36,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L36"
								}
							],
							"parameters": [
								{
									"id": 148,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 612,
										"name": "KeyValueTableOptions",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 149,
									"name": "db",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 312,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 105,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 151,
					"name": "#db",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 20,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L20"
						}
					],
					"type": {
						"type": "reference",
						"target": 312,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 152,
					"name": "#fileManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 21,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L21"
						}
					],
					"type": {
						"type": "reference",
						"target": 508,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 150,
					"name": "#options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 19,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L19"
						}
					],
					"type": {
						"type": "reference",
						"target": 612,
						"name": "KeyValueTableOptions",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 154,
					"name": "isFlushing",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 23,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 153,
					"name": "locked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 22,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L22"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 159,
					"name": "logData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 28,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L28"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 160,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 161,
									"name": "fd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/Table.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L29"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/fs/promises.d.ts",
											"qualifiedName": "\"fs/promises\".FileHandle"
										},
										"name": "FileHandle",
										"package": "@types/node",
										"qualifiedName": "\"fs/promises\".FileHandle"
									}
								},
								{
									"id": 163,
									"name": "fileSize",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/Table.ts",
											"line": 31,
											"character": 2,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L31"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 164,
									"name": "logIV",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/Table.ts",
											"line": 32,
											"character": 2,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L32"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 162,
									"name": "size",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/Table.ts",
											"line": 30,
											"character": 2,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L30"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										161,
										163,
										164,
										162
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 28,
									"character": 11,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L28"
								}
							]
						}
					}
				},
				{
					"id": 155,
					"name": "paths",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 24,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L24"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 156,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 157,
									"name": "log",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/Table.ts",
											"line": 25,
											"character": 2,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L25"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 158,
									"name": "table",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/src/Table.ts",
											"line": 26,
											"character": 2,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L26"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										157,
										158
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 24,
									"character": 9,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L24"
								}
							]
						}
					}
				},
				{
					"id": 165,
					"name": "readyAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 34,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L34"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "-1"
				},
				{
					"id": 143,
					"name": "captureRejectionSymbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: "
							},
							{
								"kind": "code",
								"text": "`Symbol.for('nodejs.rejection')`"
							},
							{
								"kind": "text",
								"text": "\n\nSee how to write a custom "
							},
							{
								"kind": "code",
								"text": "`rejection handler`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 402,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 143,
							"name": "captureRejectionSymbol",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.captureRejectionSymbol"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejectionSymbol"
					}
				},
				{
					"id": 144,
					"name": "captureRejections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
							},
							{
								"kind": "code",
								"text": "`captureRejections`"
							},
							{
								"kind": "text",
								"text": " option on all new "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " objects."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 409,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejections"
					}
				},
				{
					"id": 145,
					"name": "defaultMaxListeners",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "By default, a maximum of "
							},
							{
								"kind": "code",
								"text": "`10`"
							},
							{
								"kind": "text",
								"text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances\nusing the "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " method. To change the default\nfor _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": "property can be used. If this value is not a positive number, a "
							},
							{
								"kind": "code",
								"text": "`RangeError`"
							},
							{
								"kind": "text",
								"text": "is thrown.\n\nTake caution when setting the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": " because the\nchange affects _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, including those created before\nthe change is made. However, calling "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " still has\nprecedence over "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": ".\n\nThis is not a hard limit. The "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": ", the "
							},
							{
								"kind": "code",
								"text": "`emitter.getMaxListeners()`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners()`"
							},
							{
								"kind": "text",
								"text": "methods can be used to\ntemporarily avoid this warning:\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThe "
							},
							{
								"kind": "code",
								"text": "`--trace-warnings`"
							},
							{
								"kind": "text",
								"text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
							},
							{
								"kind": "code",
								"text": "`process.on('warning')`"
							},
							{
								"kind": "text",
								"text": " and will\nhave the additional "
							},
							{
								"kind": "code",
								"text": "`emitter`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`count`"
							},
							{
								"kind": "text",
								"text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is set to "
							},
							{
								"kind": "code",
								"text": "`'MaxListenersExceededWarning'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.11.2"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 446,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.defaultMaxListeners"
					}
				},
				{
					"id": 142,
					"name": "errorMonitor",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This symbol shall be used to install a listener for only monitoring "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": "events. Listeners installed using this symbol are called before the regular"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " event is emitted. Therefore, the process will still crash if no\nregular "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listener is installed."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.6.0, v12.17.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 395,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 142,
							"name": "errorMonitor",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.errorMonitor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.errorMonitor"
					}
				},
				{
					"id": 168,
					"name": "db",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 51,
							"character": 5,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L51"
						}
					],
					"getSignature": {
						"id": 169,
						"name": "db",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/KeyValue/src/Table.ts",
								"line": 51,
								"character": 1,
								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L51"
							}
						],
						"type": {
							"type": "reference",
							"target": 312,
							"name": "default",
							"package": "@akarui/aoi.db"
						}
					}
				},
				{
					"id": 170,
					"name": "fileManager",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 55,
							"character": 5,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L55"
						}
					],
					"getSignature": {
						"id": 171,
						"name": "fileManager",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/KeyValue/src/Table.ts",
								"line": 55,
								"character": 1,
								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L55"
							}
						],
						"type": {
							"type": "reference",
							"target": 508,
							"name": "default",
							"package": "@akarui/aoi.db"
						}
					}
				},
				{
					"id": 166,
					"name": "options",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 47,
							"character": 5,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L47"
						}
					],
					"getSignature": {
						"id": 167,
						"name": "options",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/KeyValue/src/Table.ts",
								"line": 47,
								"character": 1,
								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L47"
							}
						],
						"type": {
							"type": "reference",
							"target": 612,
							"name": "KeyValueTableOptions",
							"package": "@akarui/aoi.db"
						}
					}
				},
				{
					"id": 176,
					"name": "#getLogData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 80,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L80"
						}
					],
					"signatures": [
						{
							"id": 177,
							"name": "#getLogData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 80,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L80"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 174,
					"name": "#getPaths",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 69,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L69"
						}
					],
					"signatures": [
						{
							"id": 175,
							"name": "#getPaths",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 69,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L69"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 180,
					"name": "#syncWithLog",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 133,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L133"
						}
					],
					"signatures": [
						{
							"id": 181,
							"name": "#syncWithLog",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 133,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L133"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 182,
					"name": "#wal",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 160,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L160"
						}
					],
					"signatures": [
						{
							"id": 183,
							"name": "#wal",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 160,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L160"
								}
							],
							"parameters": [
								{
									"id": 184,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 85,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 185,
									"name": "method",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 14,
										"name": "DatabaseMethod",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 234,
					"name": "[captureRejectionSymbol]",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 112,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 235,
							"name": "[captureRejectionSymbol]",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 112,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 236,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								},
								{
									"id": 237,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 238,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.[captureRejectionSymbol]"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.[captureRejectionSymbol]"
					}
				},
				{
					"id": 239,
					"name": "addListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 545,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 240,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.on(eventName, listener)`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 545,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 241,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 242,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 243,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 545,
													"character": 66
												}
											],
											"signatures": [
												{
													"id": 244,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 545,
															"character": 66
														}
													],
													"parameters": [
														{
															"id": 245,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 105,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addListener"
					}
				},
				{
					"id": 206,
					"name": "all",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 222,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L222"
						}
					],
					"signatures": [
						{
							"id": 207,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 222,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L222"
								}
							],
							"parameters": [
								{
									"id": 208,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 209,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/Table.ts",
													"line": 223,
													"character": 9,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L223"
												}
											],
											"signatures": [
												{
													"id": 210,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/Table.ts",
															"line": 223,
															"character": 9,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L223"
														}
													],
													"parameters": [
														{
															"id": 211,
															"name": "d",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 212,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 213,
									"name": "order",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "desc"
											},
											{
												"type": "literal",
												"value": "firstN"
											},
											{
												"type": "literal",
												"value": "asc"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 201,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 213,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L213"
						}
					],
					"signatures": [
						{
							"id": 202,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 213,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L213"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 198,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 208,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L208"
						}
					],
					"signatures": [
						{
							"id": 199,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 208,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L208"
								}
							],
							"parameters": [
								{
									"id": 200,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 288,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 807,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 289,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously calls each of the listeners registered for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the event had listeners, "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " otherwise.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 807,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 290,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 291,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.emit"
					}
				},
				{
					"id": 310,
					"name": "eventNames",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 870,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 311,
							"name": "eventNames",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
									},
									{
										"kind": "code",
										"text": "`Symbol`"
									},
									{
										"kind": "text",
										"text": "s.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 870,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.eventNames"
					}
				},
				{
					"id": 220,
					"name": "findMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 234,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L234"
						}
					],
					"signatures": [
						{
							"id": 221,
							"name": "findMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 234,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L234"
								}
							],
							"parameters": [
								{
									"id": 222,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 223,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/Table.ts",
													"line": 234,
													"character": 23,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L234"
												}
											],
											"signatures": [
												{
													"id": 224,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/Table.ts",
															"line": 234,
															"character": 23,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L234"
														}
													],
													"parameters": [
														{
															"id": 225,
															"name": "d",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 214,
					"name": "findOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 230,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L230"
						}
					],
					"signatures": [
						{
							"id": 215,
							"name": "findOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 230,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L230"
								}
							],
							"parameters": [
								{
									"id": 216,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 217,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/Table.ts",
													"line": 230,
													"character": 22,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L230"
												}
											],
											"signatures": [
												{
													"id": 218,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/Table.ts",
															"line": 230,
															"character": 22,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L230"
														}
													],
													"parameters": [
														{
															"id": 219,
															"name": "d",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 85,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 195,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 204,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L204"
						}
					],
					"signatures": [
						{
							"id": 196,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 204,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L204"
								}
							],
							"parameters": [
								{
									"id": 197,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 178,
					"name": "getLogs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 104,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L104"
						}
					],
					"signatures": [
						{
							"id": 179,
							"name": "getLogs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 104,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L104"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 619,
											"name": "LogBlock",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 280,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 722,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 281,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current max listener value for the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " which is either\nset by "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " or defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "defaultMaxListeners",
										"target": 145
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v1.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 722,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 203,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 218,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L218"
						}
					],
					"signatures": [
						{
							"id": 204,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 218,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L218"
								}
							],
							"parameters": [
								{
									"id": 205,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 172,
					"name": "initialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 59,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L59"
						}
					],
					"signatures": [
						{
							"id": 173,
							"name": "initialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 59,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L59"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 292,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 816,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 293,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of listeners listening for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\nIf "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v3.2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 816,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 294,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 295,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event handler function"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 282,
					"name": "listeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 735,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 283,
							"name": "listeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 735,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 284,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listeners"
					}
				},
				{
					"id": 267,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 695,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 268,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.removeListener()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v10.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 695,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 269,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 270,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 271,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 695,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 272,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 695,
															"character": 58
														}
													],
													"parameters": [
														{
															"id": 273,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 105,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.off"
					}
				},
				{
					"id": 246,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 577,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 247,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the end of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.101"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 577,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 248,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 249,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 250,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 577,
													"character": 57
												}
											],
											"signatures": [
												{
													"id": 251,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 577,
															"character": 57
														}
													],
													"parameters": [
														{
															"id": 252,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 105,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 253,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 607,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 254,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". The\nnext time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this listener is removed and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependOnceListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 607,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 255,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 256,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 257,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 607,
													"character": 59
												}
											],
											"signatures": [
												{
													"id": 258,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 607,
															"character": 59
														}
													],
													"parameters": [
														{
															"id": 259,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 105,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 232,
					"name": "ping",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 240,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L240"
						}
					],
					"signatures": [
						{
							"id": 233,
							"name": "ping",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 240,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L240"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 296,
					"name": "prependListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 834,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 297,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the _beginning_ of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 834,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 298,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 299,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 300,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 834,
													"character": 70
												}
											],
											"signatures": [
												{
													"id": 301,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 834,
															"character": 70
														}
													],
													"parameters": [
														{
															"id": 302,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 105,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependListener"
					}
				},
				{
					"id": 303,
					"name": "prependOnceListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 850,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 304,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " to the _beginning_ of the listeners array. The next time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 850,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 305,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 306,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 307,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 850,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 308,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 850,
															"character": 74
														}
													],
													"parameters": [
														{
															"id": 309,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 105,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependOnceListener"
					}
				},
				{
					"id": 285,
					"name": "rawListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 766,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 286,
							"name": "rawListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ",\nincluding any wrappers (such as those created by "
									},
									{
										"kind": "code",
										"text": "`.once()`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 766,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 287,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.rawListeners"
					}
				},
				{
					"id": 274,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 706,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 275,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes all listeners, or those of the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 706,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 276,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 105,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeAllListeners"
					}
				},
				{
					"id": 260,
					"name": "removeListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 690,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 261,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the specified "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " from the listener array for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", then "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`removeAllListeners()`"
									},
									{
										"kind": "text",
										"text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
									},
									{
										"kind": "code",
										"text": "`emit()`"
									},
									{
										"kind": "text",
										"text": " in progress. Subsequent events behave as expected.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
									},
									{
										"kind": "code",
										"text": "`emitter.listeners()`"
									},
									{
										"kind": "text",
										"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove the most\nrecently added instance. In the example the "
									},
									{
										"kind": "code",
										"text": "`once('ping')`"
									},
									{
										"kind": "text",
										"text": "listener is removed:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 690,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 262,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 263,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 264,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 690,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 265,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 690,
															"character": 69
														}
													],
													"parameters": [
														{
															"id": 266,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 105,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeListener"
					}
				},
				{
					"id": 226,
					"name": "removeMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 237,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L237"
						}
					],
					"signatures": [
						{
							"id": 227,
							"name": "removeMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 237,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L237"
								}
							],
							"parameters": [
								{
									"id": 228,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 229,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/KeyValue/src/Table.ts",
													"line": 237,
													"character": 25,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L237"
												}
											],
											"signatures": [
												{
													"id": 230,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/KeyValue/src/Table.ts",
															"line": 237,
															"character": 25,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L237"
														}
													],
													"parameters": [
														{
															"id": 231,
															"name": "d",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 190,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 194,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L194"
						}
					],
					"signatures": [
						{
							"id": 191,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 194,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L194"
								}
							],
							"parameters": [
								{
									"id": 192,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 193,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 640,
										"name": "KeyValueDataValueType",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 194,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 639,
										"name": "KeyValueTypeList",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 277,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 716,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 278,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s will print a warning if more than "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " method allows the limit to be\nmodified for this specific "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance. The value can be set to"
									},
									{
										"kind": "code",
										"text": "`Infinity`"
									},
									{
										"kind": "text",
										"text": " (or "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.5"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 716,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 279,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 105,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				},
				{
					"id": 186,
					"name": "wal",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/src/Table.ts",
							"line": 190,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L190"
						}
					],
					"signatures": [
						{
							"id": 187,
							"name": "wal",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/src/Table.ts",
									"line": 190,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L190"
								}
							],
							"parameters": [
								{
									"id": 188,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 85,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 189,
									"name": "method",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 14,
										"name": "DatabaseMethod",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 135,
					"name": "addAbortListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 387,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 136,
							"name": "addAbortListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Listens once to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on the provided "
									},
									{
										"kind": "code",
										"text": "`signal`"
									},
									{
										"kind": "text",
										"text": ".\n\nListening to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall "
									},
									{
										"kind": "code",
										"text": "`e.stopImmediatePropagation()`"
									},
									{
										"kind": "text",
										"text": ". Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": "s in Node.js APIs by solving these\ntwo issues by listening to the event such that "
									},
									{
										"kind": "code",
										"text": "`stopImmediatePropagation`"
									},
									{
										"kind": "text",
										"text": " does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v20.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Disposable that removes the "
											},
											{
												"kind": "code",
												"text": "`abort`"
											},
											{
												"kind": "text",
												"text": " listener."
											}
										]
									}
								],
								"modifierTags": [
									"@experimental"
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 387,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 137,
									"name": "signal",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "AbortSignal"
										},
										"name": "AbortSignal",
										"package": "typescript"
									}
								},
								{
									"id": 138,
									"name": "resource",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 139,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 387,
													"character": 63
												}
											],
											"signatures": [
												{
													"id": 140,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 387,
															"character": 63
														}
													],
													"parameters": [
														{
															"id": 141,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Event"
																},
																"name": "Event",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/globals.d.ts",
									"qualifiedName": "__global.Disposable"
								},
								"name": "Disposable",
								"package": "@types/node",
								"qualifiedName": "__global.Disposable"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addAbortListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addAbortListener"
					}
				},
				{
					"id": 124,
					"name": "getEventListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 308,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 125,
							"name": "getEventListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.listeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.2.0, v14.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 308,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 126,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 127,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getEventListeners"
					}
				},
				{
					"id": 128,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 337,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 129,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the currently set max amount of listeners.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.getMaxListeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v19.9.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 337,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 130,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 120,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 280,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 121,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A class method that returns the number of listeners for the given "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "registered on the given "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.12"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v3.2.0 - Use "
											},
											{
												"kind": "code",
												"text": "`listenerCount`"
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 280,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 122,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The emitter to query"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 123,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 115,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 258,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 116,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns an "
									},
									{
										"kind": "code",
										"text": "`AsyncIterator`"
									},
									{
										"kind": "text",
										"text": " that iterates "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " events. It will throw\nif the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": ". It removes all listeners when\nexiting the loop. The "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting on events:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.16.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events emitted by the "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 258,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 117,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 118,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 119,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
									"qualifiedName": "AsyncIterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 106,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 193,
							"character": 15
						},
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 198,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 107,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " that is fulfilled when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits the given\nevent or that is rejected if the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " while waiting.\nThe "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event\nsemantics and does not listen to the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe special handling of the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is only used when "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": "is used to wait for another event. If "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": " is used to wait for the\n'"
									},
									{
										"kind": "code",
										"text": "`error'`"
									},
									{
										"kind": "text",
										"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting for the event:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.13.0, v10.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 193,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 108,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_NodeEventTarget"
										},
										"name": "_NodeEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 109,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 110,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 111,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 198,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 112,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_DOMEventTarget"
										},
										"name": "_DOMEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 113,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 114,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 131,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 352,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 132,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 352,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 133,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative number. The maximum number of listeners per "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": " event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 134,
									"name": "eventTargets",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													"name": "EventEmitter",
													"package": "@types/node",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "_DOMEventTarget"
													},
													"name": "_DOMEventTarget",
													"package": "@types/node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						146
					]
				},
				{
					"title": "Properties",
					"children": [
						151,
						152,
						150,
						154,
						153,
						159,
						155,
						165,
						143,
						144,
						145,
						142
					]
				},
				{
					"title": "Accessors",
					"children": [
						168,
						170,
						166
					]
				},
				{
					"title": "Methods",
					"children": [
						176,
						174,
						180,
						182,
						234,
						239,
						206,
						201,
						198,
						288,
						310,
						220,
						214,
						195,
						178,
						280,
						203,
						172,
						292,
						282,
						267,
						246,
						253,
						232,
						296,
						303,
						285,
						274,
						260,
						226,
						190,
						277,
						186,
						135,
						124,
						128,
						120,
						115,
						106,
						131
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/src/Table.ts",
					"line": 18,
					"character": 21,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/src/Table.ts#L18"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 1284,
			"name": "MemMap",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1285,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L12"
						}
					],
					"signatures": [
						{
							"id": 1286,
							"name": "new MemMap",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/MemMap.ts",
									"line": 12,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L12"
								}
							],
							"parameters": [
								{
									"id": 1287,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1329,
										"name": "MemMapOptions",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1288,
									"name": "Column",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 940,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1284,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 1291,
					"name": "#column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 11,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": 940,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1290,
					"name": "#options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L10"
						}
					],
					"type": {
						"type": "reference",
						"target": 1329,
						"name": "MemMapOptions",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1289,
					"name": "heap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 9,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L9"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@akarui/structures/src/Group/index.ts",
							"qualifiedName": "default"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1370,
								"name": "WideColumnarDataType",
								"package": "@akarui/aoi.db"
							},
							{
								"type": "reference",
								"target": 1071,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						],
						"name": "default",
						"package": "@akarui/structures"
					}
				},
				{
					"id": 1301,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L30"
						}
					],
					"signatures": [
						{
							"id": 1302,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/MemMap.ts",
									"line": 30,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 1303,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1318,
					"name": "findMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 55,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 1319,
							"name": "findMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/MemMap.ts",
									"line": 55,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L55"
								}
							],
							"parameters": [
								{
									"id": 1320,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1321,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/MemMap.ts",
													"line": 55,
													"character": 20,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L55"
												}
											],
											"signatures": [
												{
													"id": 1322,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/MemMap.ts",
															"line": 55,
															"character": 20,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L55"
														}
													],
													"parameters": [
														{
															"id": 1323,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@akarui/structures/src/Group/index.ts",
									"qualifiedName": "default"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									},
									{
										"type": "reference",
										"target": 1071,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								],
								"name": "default",
								"package": "@akarui/structures"
							}
						}
					]
				},
				{
					"id": 1312,
					"name": "findOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 51,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L51"
						}
					],
					"signatures": [
						{
							"id": 1313,
							"name": "findOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/MemMap.ts",
									"line": 51,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L51"
								}
							],
							"parameters": [
								{
									"id": 1314,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1315,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/MemMap.ts",
													"line": 51,
													"character": 19,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L51"
												}
											],
											"signatures": [
												{
													"id": 1316,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/MemMap.ts",
															"line": 51,
															"character": 19,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L51"
														}
													],
													"parameters": [
														{
															"id": 1317,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 1071,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								]
							}
						}
					]
				},
				{
					"id": 1310,
					"name": "flush",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 46,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L46"
						}
					],
					"signatures": [
						{
							"id": 1311,
							"name": "flush",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/MemMap.ts",
									"line": 46,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L46"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1295,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 24,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L24"
						}
					],
					"signatures": [
						{
							"id": 1296,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/MemMap.ts",
									"line": 24,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L24"
								}
							],
							"parameters": [
								{
									"id": 1297,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 1071,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								]
							}
						}
					]
				},
				{
					"id": 1304,
					"name": "getHeap",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 1305,
							"name": "getHeap",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/MemMap.ts",
									"line": 33,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L33"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@akarui/structures/src/Group/index.ts",
									"qualifiedName": "default"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									},
									{
										"type": "reference",
										"target": 1071,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								],
								"name": "default",
								"package": "@akarui/structures"
							}
						}
					]
				},
				{
					"id": 1306,
					"name": "getOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L37"
						}
					],
					"signatures": [
						{
							"id": 1307,
							"name": "getOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/MemMap.ts",
									"line": 37,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L37"
								}
							],
							"type": {
								"type": "reference",
								"target": 1329,
								"name": "MemMapOptions",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 1308,
					"name": "getSize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 41,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L41"
						}
					],
					"signatures": [
						{
							"id": 1309,
							"name": "getSize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/MemMap.ts",
									"line": 41,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L41"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1298,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L27"
						}
					],
					"signatures": [
						{
							"id": 1299,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/MemMap.ts",
									"line": 27,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L27"
								}
							],
							"parameters": [
								{
									"id": 1300,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1292,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/MemMap.ts",
							"line": 17,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L17"
						}
					],
					"signatures": [
						{
							"id": 1293,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/MemMap.ts",
									"line": 17,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L17"
								}
							],
							"parameters": [
								{
									"id": 1294,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1071,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1285
					]
				},
				{
					"title": "Properties",
					"children": [
						1291,
						1290,
						1289
					]
				},
				{
					"title": "Methods",
					"children": [
						1301,
						1318,
						1312,
						1310,
						1295,
						1304,
						1306,
						1308,
						1298,
						1292
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/src/MemMap.ts",
					"line": 8,
					"character": 21,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/MemMap.ts#L8"
				}
			]
		},
		{
			"id": 1371,
			"name": "Receiver",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1412,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 31,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 1413,
							"name": "new Receiver",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 31,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L31"
								}
							],
							"parameters": [
								{
									"id": 1414,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1904,
										"name": "ReceiverOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1371,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 1416,
					"name": "#options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 27,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L27"
						}
					],
					"type": {
						"type": "reference",
						"target": 1904,
						"name": "ReceiverOptions",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1417,
					"name": "allowList",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 28,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 1418,
					"name": "clients",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 29,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L29"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@akarui/structures/src/Group/index.ts",
							"qualifiedName": "default"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/net.d.ts",
									"qualifiedName": "\"net\".Socket"
								},
								"name": "Socket",
								"package": "@types/node",
								"qualifiedName": "\"net\".Socket"
							}
						],
						"name": "default",
						"package": "@akarui/structures"
					},
					"defaultValue": "..."
				},
				{
					"id": 1415,
					"name": "server",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 26,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L26"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@types/node/net.d.ts",
							"qualifiedName": "\"net\".Server"
						},
						"name": "Server",
						"package": "@types/node",
						"qualifiedName": "\"net\".Server"
					}
				},
				{
					"id": 1419,
					"name": "usersMap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 30,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L30"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@akarui/structures/src/Group/index.ts",
							"qualifiedName": "default"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						],
						"name": "default",
						"package": "@akarui/structures"
					},
					"defaultValue": "..."
				},
				{
					"id": 1409,
					"name": "captureRejectionSymbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: "
							},
							{
								"kind": "code",
								"text": "`Symbol.for('nodejs.rejection')`"
							},
							{
								"kind": "text",
								"text": "\n\nSee how to write a custom "
							},
							{
								"kind": "code",
								"text": "`rejection handler`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 402,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 143,
							"name": "captureRejectionSymbol",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.captureRejectionSymbol"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejectionSymbol"
					}
				},
				{
					"id": 1410,
					"name": "captureRejections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
							},
							{
								"kind": "code",
								"text": "`captureRejections`"
							},
							{
								"kind": "text",
								"text": " option on all new "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " objects."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 409,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejections"
					}
				},
				{
					"id": 1411,
					"name": "defaultMaxListeners",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "By default, a maximum of "
							},
							{
								"kind": "code",
								"text": "`10`"
							},
							{
								"kind": "text",
								"text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances\nusing the "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " method. To change the default\nfor _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": "property can be used. If this value is not a positive number, a "
							},
							{
								"kind": "code",
								"text": "`RangeError`"
							},
							{
								"kind": "text",
								"text": "is thrown.\n\nTake caution when setting the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": " because the\nchange affects _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, including those created before\nthe change is made. However, calling "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " still has\nprecedence over "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": ".\n\nThis is not a hard limit. The "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": ", the "
							},
							{
								"kind": "code",
								"text": "`emitter.getMaxListeners()`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners()`"
							},
							{
								"kind": "text",
								"text": "methods can be used to\ntemporarily avoid this warning:\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThe "
							},
							{
								"kind": "code",
								"text": "`--trace-warnings`"
							},
							{
								"kind": "text",
								"text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
							},
							{
								"kind": "code",
								"text": "`process.on('warning')`"
							},
							{
								"kind": "text",
								"text": " and will\nhave the additional "
							},
							{
								"kind": "code",
								"text": "`emitter`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`count`"
							},
							{
								"kind": "text",
								"text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is set to "
							},
							{
								"kind": "code",
								"text": "`'MaxListenersExceededWarning'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.11.2"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 446,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.defaultMaxListeners"
					}
				},
				{
					"id": 1408,
					"name": "errorMonitor",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This symbol shall be used to install a listener for only monitoring "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": "events. Listeners installed using this symbol are called before the regular"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " event is emitted. Therefore, the process will still crash if no\nregular "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listener is installed."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.6.0, v12.17.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 395,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 142,
							"name": "errorMonitor",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.errorMonitor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.errorMonitor"
					}
				},
				{
					"id": 1432,
					"name": "#bindEvents",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 74,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L74"
						}
					],
					"signatures": [
						{
							"id": 1433,
							"name": "#bindEvents",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 74,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L74"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1527,
					"name": "#createData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 707,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L707"
						}
					],
					"signatures": [
						{
							"id": 1528,
							"name": "#createData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 707,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L707"
								}
							],
							"parameters": [
								{
									"id": 1529,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1516,
					"name": "#createDebug",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 692,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L692"
						}
					],
					"signatures": [
						{
							"id": 1517,
							"name": "#createDebug",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 692,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L692"
								}
							],
							"parameters": [
								{
									"id": 1518,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1519,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1524,
													"name": "cost",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 697,
															"character": 8,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L697"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1523,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 696,
															"character": 8,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L696"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1525,
													"name": "hash",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 698,
															"character": 8,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L698"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1521,
													"name": "method",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 694,
															"character": 8,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L694"
														}
													],
													"type": {
														"type": "reference",
														"target": 14,
														"name": "DatabaseMethod",
														"package": "@akarui/aoi.db"
													}
												},
												{
													"id": 1520,
													"name": "op",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 693,
															"character": 8,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L693"
														}
													],
													"type": {
														"type": "reference",
														"target": 2692,
														"name": "ReceiverOpCodes",
														"package": "@akarui/aoi.db"
													}
												},
												{
													"id": 1522,
													"name": "seq",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 695,
															"character": 8,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L695"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1526,
													"name": "session",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 699,
															"character": 8,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L699"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1524,
														1523,
														1525,
														1521,
														1520,
														1522,
														1526
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/Remote/src/receiver.ts",
													"line": 692,
													"character": 23,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L692"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1426,
					"name": "#createKeyValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 63,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L63"
						}
					],
					"signatures": [
						{
							"id": 1427,
							"name": "#createKeyValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 63,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L63"
								}
							],
							"parameters": [
								{
									"id": 1428,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 582,
										"name": "KeyValueOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 1434,
					"name": "#handleClose",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 86,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L86"
						}
					],
					"signatures": [
						{
							"id": 1435,
							"name": "#handleClose",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 86,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L86"
								}
							],
							"parameters": [
								{
									"id": 1436,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1441,
					"name": "#handleConnect",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 94,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L94"
						}
					],
					"signatures": [
						{
							"id": 1442,
							"name": "#handleConnect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 94,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L94"
								}
							],
							"parameters": [
								{
									"id": 1443,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/net.d.ts",
											"qualifiedName": "\"net\".Socket"
										},
										"name": "Socket",
										"package": "@types/node",
										"qualifiedName": "\"net\".Socket"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1448,
					"name": "#handleConnectRequest",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 123,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L123"
						}
					],
					"signatures": [
						{
							"id": 1449,
							"name": "#handleConnectRequest",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 123,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L123"
								}
							],
							"parameters": [
								{
									"id": 1450,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1451,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1444,
					"name": "#handleData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 98,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L98"
						}
					],
					"signatures": [
						{
							"id": 1445,
							"name": "#handleData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 98,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L98"
								}
							],
							"parameters": [
								{
									"id": 1446,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.Buffer"
										},
										"name": "Buffer",
										"package": "@types/node",
										"qualifiedName": "__global.Buffer"
									}
								},
								{
									"id": 1447,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1456,
					"name": "#handleDisconnectRequest",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 218,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L218"
						}
					],
					"signatures": [
						{
							"id": 1457,
							"name": "#handleDisconnectRequest",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 218,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L218"
								}
							],
							"parameters": [
								{
									"id": 1458,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1459,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1437,
					"name": "#handleError",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 90,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L90"
						}
					],
					"signatures": [
						{
							"id": 1438,
							"name": "#handleError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 90,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L90"
								}
							],
							"parameters": [
								{
									"id": 1439,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								},
								{
									"id": 1440,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1480,
					"name": "#handleOperationAll",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 443,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L443"
						}
					],
					"signatures": [
						{
							"id": 1481,
							"name": "#handleOperationAll",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 443,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L443"
								}
							],
							"parameters": [
								{
									"id": 1482,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1483,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1500,
					"name": "#handleOperationClear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 637,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L637"
						}
					],
					"signatures": [
						{
							"id": 1501,
							"name": "#handleOperationClear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 637,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L637"
								}
							],
							"parameters": [
								{
									"id": 1502,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1503,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1476,
					"name": "#handleOperationDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 401,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L401"
						}
					],
					"signatures": [
						{
							"id": 1477,
							"name": "#handleOperationDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 401,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L401"
								}
							],
							"parameters": [
								{
									"id": 1478,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1479,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1496,
					"name": "#handleOperationDeleteMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 599,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L599"
						}
					],
					"signatures": [
						{
							"id": 1497,
							"name": "#handleOperationDeleteMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 599,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L599"
								}
							],
							"parameters": [
								{
									"id": 1498,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1499,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1484,
					"name": "#handleOperationFindMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 484,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L484"
						}
					],
					"signatures": [
						{
							"id": 1485,
							"name": "#handleOperationFindMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 484,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L484"
								}
							],
							"parameters": [
								{
									"id": 1486,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1487,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1488,
					"name": "#handleOperationFindOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 523,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L523"
						}
					],
					"signatures": [
						{
							"id": 1489,
							"name": "#handleOperationFindOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 523,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L523"
								}
							],
							"parameters": [
								{
									"id": 1490,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1491,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1472,
					"name": "#handleOperationGet",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 360,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L360"
						}
					],
					"signatures": [
						{
							"id": 1473,
							"name": "#handleOperationGet",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 360,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L360"
								}
							],
							"parameters": [
								{
									"id": 1474,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1475,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1492,
					"name": "#handleOperationHas",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 561,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L561"
						}
					],
					"signatures": [
						{
							"id": 1493,
							"name": "#handleOperationHas",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 561,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L561"
								}
							],
							"parameters": [
								{
									"id": 1494,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1495,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1460,
					"name": "#handleOperationRequest",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 238,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L238"
						}
					],
					"signatures": [
						{
							"id": 1461,
							"name": "#handleOperationRequest",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 238,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L238"
								}
							],
							"parameters": [
								{
									"id": 1462,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1463,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1468,
					"name": "#handleOperationSet",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 318,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L318"
						}
					],
					"signatures": [
						{
							"id": 1469,
							"name": "#handleOperationSet",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 318,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L318"
								}
							],
							"parameters": [
								{
									"id": 1470,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1471,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1452,
					"name": "#handlePingRequest",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 202,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L202"
						}
					],
					"signatures": [
						{
							"id": 1453,
							"name": "#handlePingRequest",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 202,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L202"
								}
							],
							"parameters": [
								{
									"id": 1454,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1455,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1464,
					"name": "#handleUnknownRequest",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 302,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L302"
						}
					],
					"signatures": [
						{
							"id": 1465,
							"name": "#handleUnknownRequest",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 302,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L302"
								}
							],
							"parameters": [
								{
									"id": 1466,
									"name": "dataFormat",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1467,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1942,
										"name": "ISocket",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1423,
					"name": "#init",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 46,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L46"
						}
					],
					"signatures": [
						{
							"id": 1424,
							"name": "#init",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 46,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L46"
								}
							],
							"parameters": [
								{
									"id": 1425,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1904,
										"name": "ReceiverOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1504,
					"name": "#sendResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 675,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L675"
						}
					],
					"signatures": [
						{
							"id": 1505,
							"name": "#sendResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 675,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L675"
								}
							],
							"parameters": [
								{
									"id": 1506,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1507,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1512,
													"name": "cost",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 681,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L681"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1511,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 680,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L680"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1513,
													"name": "hash",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 682,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L682"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1509,
													"name": "method",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 678,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L678"
														}
													],
													"type": {
														"type": "reference",
														"target": 14,
														"name": "DatabaseMethod",
														"package": "@akarui/aoi.db"
													}
												},
												{
													"id": 1508,
													"name": "op",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 677,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L677"
														}
													],
													"type": {
														"type": "reference",
														"target": 2692,
														"name": "ReceiverOpCodes",
														"package": "@akarui/aoi.db"
													}
												},
												{
													"id": 1510,
													"name": "seq",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 679,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L679"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1514,
													"name": "session",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 683,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L683"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1512,
														1511,
														1513,
														1509,
														1508,
														1510,
														1514
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/Remote/src/receiver.ts",
													"line": 676,
													"character": 8,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L676"
												}
											]
										}
									}
								},
								{
									"id": 1515,
									"name": "socket",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/net.d.ts",
											"qualifiedName": "\"net\".Socket"
										},
										"name": "Socket",
										"package": "@types/node",
										"qualifiedName": "\"net\".Socket"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1546,
					"name": "[captureRejectionSymbol]",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 112,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 1547,
							"name": "[captureRejectionSymbol]",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 112,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1548,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								},
								{
									"id": 1549,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1550,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.[captureRejectionSymbol]"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.[captureRejectionSymbol]"
					}
				},
				{
					"id": 1551,
					"name": "addListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 545,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1552,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.on(eventName, listener)`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 545,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1553,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1554,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1555,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 545,
													"character": 66
												}
											],
											"signatures": [
												{
													"id": 1556,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 545,
															"character": 66
														}
													],
													"parameters": [
														{
															"id": 1557,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1371,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addListener"
					}
				},
				{
					"id": 1420,
					"name": "allowAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 41,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L41"
						}
					],
					"signatures": [
						{
							"id": 1421,
							"name": "allowAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 41,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L41"
								}
							],
							"parameters": [
								{
									"id": 1422,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1544,
					"name": "connect",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 747,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L747"
						}
					],
					"signatures": [
						{
							"id": 1545,
							"name": "connect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 747,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L747"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1600,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 807,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1601,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously calls each of the listeners registered for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the event had listeners, "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " otherwise.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 807,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1602,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1603,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.emit"
					}
				},
				{
					"id": 1622,
					"name": "eventNames",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 870,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1623,
							"name": "eventNames",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
									},
									{
										"kind": "code",
										"text": "`Symbol`"
									},
									{
										"kind": "text",
										"text": "s.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 870,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.eventNames"
					}
				},
				{
					"id": 1592,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 722,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1593,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current max listener value for the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " which is either\nset by "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " or defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "defaultMaxListeners",
										"target": 1411
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v1.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 722,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 1429,
					"name": "isAllowed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 69,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L69"
						}
					],
					"signatures": [
						{
							"id": 1430,
							"name": "isAllowed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 69,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L69"
								}
							],
							"parameters": [
								{
									"id": 1431,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1604,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 816,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1605,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of listeners listening for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\nIf "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v3.2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 816,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1606,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1607,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event handler function"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 1594,
					"name": "listeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 735,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1595,
							"name": "listeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 735,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1596,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listeners"
					}
				},
				{
					"id": 1579,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 695,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1580,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.removeListener()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v10.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 695,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1581,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1582,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1583,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 695,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 1584,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 695,
															"character": 58
														}
													],
													"parameters": [
														{
															"id": 1585,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1371,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.off"
					}
				},
				{
					"id": 1558,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 577,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1559,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the end of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.101"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 577,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1560,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1561,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1562,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 577,
													"character": 57
												}
											],
											"signatures": [
												{
													"id": 1563,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 577,
															"character": 57
														}
													],
													"parameters": [
														{
															"id": 1564,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1371,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 1565,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 607,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1566,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". The\nnext time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this listener is removed and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependOnceListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 607,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1567,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1568,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1569,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 607,
													"character": 59
												}
											],
											"signatures": [
												{
													"id": 1570,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 607,
															"character": 59
														}
													],
													"parameters": [
														{
															"id": 1571,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1371,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 1608,
					"name": "prependListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 834,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1609,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the _beginning_ of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 834,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1610,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1611,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1612,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 834,
													"character": 70
												}
											],
											"signatures": [
												{
													"id": 1613,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 834,
															"character": 70
														}
													],
													"parameters": [
														{
															"id": 1614,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1371,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependListener"
					}
				},
				{
					"id": 1615,
					"name": "prependOnceListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 850,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1616,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " to the _beginning_ of the listeners array. The next time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 850,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1617,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1618,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1619,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 850,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 1620,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 850,
															"character": 74
														}
													],
													"parameters": [
														{
															"id": 1621,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1371,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependOnceListener"
					}
				},
				{
					"id": 1597,
					"name": "rawListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 766,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1598,
							"name": "rawListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ",\nincluding any wrappers (such as those created by "
									},
									{
										"kind": "code",
										"text": "`.once()`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 766,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1599,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.rawListeners"
					}
				},
				{
					"id": 1586,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 706,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1587,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes all listeners, or those of the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 706,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1588,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1371,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeAllListeners"
					}
				},
				{
					"id": 1572,
					"name": "removeListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 690,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1573,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the specified "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " from the listener array for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", then "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`removeAllListeners()`"
									},
									{
										"kind": "text",
										"text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
									},
									{
										"kind": "code",
										"text": "`emit()`"
									},
									{
										"kind": "text",
										"text": " in progress. Subsequent events behave as expected.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
									},
									{
										"kind": "code",
										"text": "`emitter.listeners()`"
									},
									{
										"kind": "text",
										"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove the most\nrecently added instance. In the example the "
									},
									{
										"kind": "code",
										"text": "`once('ping')`"
									},
									{
										"kind": "text",
										"text": "listener is removed:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 690,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1574,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1575,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1576,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 690,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 1577,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 690,
															"character": 69
														}
													],
													"parameters": [
														{
															"id": 1578,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1371,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeListener"
					}
				},
				{
					"id": 1530,
					"name": "sendDataFormat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 714,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L714"
						}
					],
					"signatures": [
						{
							"id": 1531,
							"name": "sendDataFormat",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 714,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L714"
								}
							],
							"parameters": [
								{
									"id": 1532,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1533,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1538,
													"name": "cost",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 727,
															"character": 2,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L727"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1537,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 726,
															"character": 2,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L726"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1539,
													"name": "hash",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 728,
															"character": 2,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L728"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1535,
													"name": "method",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 724,
															"character": 2,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L724"
														}
													],
													"type": {
														"type": "reference",
														"target": 14,
														"name": "DatabaseMethod",
														"package": "@akarui/aoi.db"
													}
												},
												{
													"id": 1534,
													"name": "op",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 723,
															"character": 2,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L723"
														}
													],
													"type": {
														"type": "reference",
														"target": 2692,
														"name": "ReceiverOpCodes",
														"package": "@akarui/aoi.db"
													}
												},
												{
													"id": 1536,
													"name": "seq",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 725,
															"character": 2,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L725"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1540,
													"name": "session",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/receiver.ts",
															"line": 729,
															"character": 2,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L729"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1538,
														1537,
														1539,
														1535,
														1534,
														1536,
														1540
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/Remote/src/receiver.ts",
													"line": 722,
													"character": 4,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L722"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/buffer.d.ts",
									"qualifiedName": "__global.Buffer"
								},
								"name": "Buffer",
								"package": "@types/node",
								"qualifiedName": "__global.Buffer"
							}
						}
					]
				},
				{
					"id": 1589,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 716,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1590,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s will print a warning if more than "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " method allows the limit to be\nmodified for this specific "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance. The value can be set to"
									},
									{
										"kind": "code",
										"text": "`Infinity`"
									},
									{
										"kind": "text",
										"text": " (or "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.5"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 716,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1591,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1371,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				},
				{
					"id": 1541,
					"name": "transmitterDataFormat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/receiver.ts",
							"line": 743,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L743"
						}
					],
					"signatures": [
						{
							"id": 1542,
							"name": "transmitterDataFormat",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/receiver.ts",
									"line": 743,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L743"
								}
							],
							"parameters": [
								{
									"id": 1543,
									"name": "buffer",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.Buffer"
										},
										"name": "Buffer",
										"package": "@types/node",
										"qualifiedName": "__global.Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1931,
								"name": "TransmitterDataFormat",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 1401,
					"name": "addAbortListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 387,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1402,
							"name": "addAbortListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Listens once to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on the provided "
									},
									{
										"kind": "code",
										"text": "`signal`"
									},
									{
										"kind": "text",
										"text": ".\n\nListening to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall "
									},
									{
										"kind": "code",
										"text": "`e.stopImmediatePropagation()`"
									},
									{
										"kind": "text",
										"text": ". Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": "s in Node.js APIs by solving these\ntwo issues by listening to the event such that "
									},
									{
										"kind": "code",
										"text": "`stopImmediatePropagation`"
									},
									{
										"kind": "text",
										"text": " does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v20.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Disposable that removes the "
											},
											{
												"kind": "code",
												"text": "`abort`"
											},
											{
												"kind": "text",
												"text": " listener."
											}
										]
									}
								],
								"modifierTags": [
									"@experimental"
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 387,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1403,
									"name": "signal",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "AbortSignal"
										},
										"name": "AbortSignal",
										"package": "typescript"
									}
								},
								{
									"id": 1404,
									"name": "resource",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1405,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 387,
													"character": 63
												}
											],
											"signatures": [
												{
													"id": 1406,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 387,
															"character": 63
														}
													],
													"parameters": [
														{
															"id": 1407,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Event"
																},
																"name": "Event",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/globals.d.ts",
									"qualifiedName": "__global.Disposable"
								},
								"name": "Disposable",
								"package": "@types/node",
								"qualifiedName": "__global.Disposable"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addAbortListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addAbortListener"
					}
				},
				{
					"id": 1390,
					"name": "getEventListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 308,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1391,
							"name": "getEventListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.listeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.2.0, v14.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 308,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1392,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1393,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getEventListeners"
					}
				},
				{
					"id": 1394,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 337,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1395,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the currently set max amount of listeners.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.getMaxListeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v19.9.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 337,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1396,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 1386,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 280,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1387,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A class method that returns the number of listeners for the given "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "registered on the given "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.12"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v3.2.0 - Use "
											},
											{
												"kind": "code",
												"text": "`listenerCount`"
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 280,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1388,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The emitter to query"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 1389,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 1381,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 258,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1382,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns an "
									},
									{
										"kind": "code",
										"text": "`AsyncIterator`"
									},
									{
										"kind": "text",
										"text": " that iterates "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " events. It will throw\nif the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": ". It removes all listeners when\nexiting the loop. The "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting on events:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.16.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events emitted by the "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 258,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1383,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 1384,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1385,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
									"qualifiedName": "AsyncIterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 1372,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 193,
							"character": 15
						},
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 198,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1373,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " that is fulfilled when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits the given\nevent or that is rejected if the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " while waiting.\nThe "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event\nsemantics and does not listen to the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe special handling of the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is only used when "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": "is used to wait for another event. If "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": " is used to wait for the\n'"
									},
									{
										"kind": "code",
										"text": "`error'`"
									},
									{
										"kind": "text",
										"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting for the event:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.13.0, v10.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 193,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1374,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_NodeEventTarget"
										},
										"name": "_NodeEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 1375,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1376,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 1377,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 198,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1378,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_DOMEventTarget"
										},
										"name": "_DOMEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 1379,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1380,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 1397,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 352,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1398,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 352,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1399,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative number. The maximum number of listeners per "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": " event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1400,
									"name": "eventTargets",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													"name": "EventEmitter",
													"package": "@types/node",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "_DOMEventTarget"
													},
													"name": "_DOMEventTarget",
													"package": "@types/node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1412
					]
				},
				{
					"title": "Properties",
					"children": [
						1416,
						1417,
						1418,
						1415,
						1419,
						1409,
						1410,
						1411,
						1408
					]
				},
				{
					"title": "Methods",
					"children": [
						1432,
						1527,
						1516,
						1426,
						1434,
						1441,
						1448,
						1444,
						1456,
						1437,
						1480,
						1500,
						1476,
						1496,
						1484,
						1488,
						1472,
						1492,
						1460,
						1468,
						1452,
						1464,
						1423,
						1504,
						1546,
						1551,
						1420,
						1544,
						1600,
						1622,
						1592,
						1429,
						1604,
						1594,
						1579,
						1558,
						1565,
						1608,
						1615,
						1597,
						1586,
						1572,
						1530,
						1589,
						1541,
						1401,
						1390,
						1394,
						1386,
						1381,
						1372,
						1397
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/src/receiver.ts",
					"line": 25,
					"character": 21,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/receiver.ts#L25"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 1176,
			"name": "Referencer",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1177,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L27"
						}
					],
					"signatures": [
						{
							"id": 1178,
							"name": "new Referencer",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Referencer.ts",
									"line": 27,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L27"
								}
							],
							"parameters": [
								{
									"id": 1179,
									"name": "path",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1180,
									"name": "maxSize",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1181,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 48,
										"name": "ReferenceType",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1182,
									"name": "column",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 940,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1176,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.constructor"
					}
				},
				{
					"id": 1194,
					"name": "#column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 26,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L26"
						}
					],
					"type": {
						"type": "reference",
						"target": 940,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1232,
					"name": "#path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.#path"
					}
				},
				{
					"id": 1183,
					"name": "cache",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L16"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1184,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1185,
											"name": "file",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Referencer.ts",
													"line": 18,
													"character": 10,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L18"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1187,
											"name": "index",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Referencer.ts",
													"line": 18,
													"character": 47,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L18"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1186,
											"name": "referenceFile",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Referencer.ts",
													"line": 18,
													"character": 24,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L18"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1185,
												1187,
												1186
											]
										}
									],
									"sources": [
										{
											"fileName": "lib/WideColumnar/src/Referencer.ts",
											"line": 18,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L18"
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.cache"
					}
				},
				{
					"id": 1231,
					"name": "cacheSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L16"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "-1",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.cacheSize"
					}
				},
				{
					"id": 1188,
					"name": "files",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L20"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 1189,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 1193,
										"name": "index",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/WideColumnar/src/Referencer.ts",
												"line": 24,
												"character": 8,
												"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L24"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"id": 1190,
										"name": "name",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/WideColumnar/src/Referencer.ts",
												"line": 21,
												"character": 8,
												"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L21"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 1191,
										"name": "size",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/WideColumnar/src/Referencer.ts",
												"line": 22,
												"character": 8,
												"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L22"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"id": 1192,
										"name": "writer",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/WideColumnar/src/Referencer.ts",
												"line": 23,
												"character": 8,
												"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L23"
											}
										],
										"type": {
											"type": "reference",
											"target": {
												"sourceFileName": "node_modules/@types/node/fs.d.ts",
												"qualifiedName": "\"fs\".WriteStream"
											},
											"name": "WriteStream",
											"package": "@types/node",
											"qualifiedName": "\"fs\".WriteStream"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											1193,
											1190,
											1191,
											1192
										]
									}
								],
								"sources": [
									{
										"fileName": "lib/WideColumnar/src/Referencer.ts",
										"line": 20,
										"character": 11,
										"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L20"
									}
								]
							}
						}
					},
					"defaultValue": "[]",
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.files"
					}
				},
				{
					"id": 1233,
					"name": "maxSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.maxSize"
					}
				},
				{
					"id": 1234,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 24,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L24"
						}
					],
					"type": {
						"type": "reference",
						"target": 48,
						"name": "ReferenceType",
						"package": "@akarui/aoi.db"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.type"
					}
				},
				{
					"id": 1235,
					"name": "path",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 50,
							"character": 8,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L50"
						}
					],
					"getSignature": {
						"id": 1236,
						"name": "path",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/global/referencer.ts",
								"line": 50,
								"character": 4,
								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L50"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "Referencer.path"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.path"
					}
				},
				{
					"id": 1271,
					"name": "#bulkDeleteReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 352,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L352"
						}
					],
					"signatures": [
						{
							"id": 1272,
							"name": "#bulkDeleteReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 352,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L352"
								}
							],
							"parameters": [
								{
									"id": 1273,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1274,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.#bulkDeleteReference"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.#bulkDeleteReference"
					}
				},
				{
					"id": 1223,
					"name": "#createFile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 133,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L133"
						}
					],
					"signatures": [
						{
							"id": 1224,
							"name": "#createFile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Referencer.ts",
									"line": 133,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L133"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1252,
					"name": "#createFile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 162,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L162"
						}
					],
					"signatures": [
						{
							"id": 1253,
							"name": "#createFile",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "create file"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 162,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L162"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.#createFile"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.#createFile"
					}
				},
				{
					"id": 1216,
					"name": "#currentFile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 129,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L129"
						}
					],
					"signatures": [
						{
							"id": 1217,
							"name": "#currentFile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Referencer.ts",
									"line": 129,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L129"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1218,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1222,
											"name": "index",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Referencer.ts",
													"line": 24,
													"character": 8,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L24"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1219,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Referencer.ts",
													"line": 21,
													"character": 8,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L21"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1220,
											"name": "size",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Referencer.ts",
													"line": 22,
													"character": 8,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L22"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1221,
											"name": "writer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Referencer.ts",
													"line": 23,
													"character": 8,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L23"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/fs.d.ts",
													"qualifiedName": "\"fs\".WriteStream"
												},
												"name": "WriteStream",
												"package": "@types/node",
												"qualifiedName": "\"fs\".WriteStream"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1222,
												1219,
												1220,
												1221
											]
										}
									],
									"sources": [
										{
											"fileName": "lib/WideColumnar/src/Referencer.ts",
											"line": 20,
											"character": 11,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L20"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1246,
					"name": "#currentFile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 148,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L148"
						}
					],
					"signatures": [
						{
							"id": 1247,
							"name": "#currentFile",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get current file"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "current file"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 148,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L148"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1248,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1249,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/global/referencer.ts",
													"line": 150,
													"character": 12,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L150"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1250,
											"name": "size",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/global/referencer.ts",
													"line": 151,
													"character": 12,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L151"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1251,
											"name": "writer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/global/referencer.ts",
													"line": 152,
													"character": 12,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L152"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/fs.d.ts",
													"qualifiedName": "\"fs\".WriteStream"
												},
												"name": "WriteStream",
												"package": "@types/node",
												"qualifiedName": "\"fs\".WriteStream"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1249,
												1250,
												1251
											]
										}
									],
									"sources": [
										{
											"fileName": "lib/global/referencer.ts",
											"line": 149,
											"character": 36,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L149"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.#currentFile"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.#currentFile"
					}
				},
				{
					"id": 1257,
					"name": "#deleteReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 230,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L230"
						}
					],
					"signatures": [
						{
							"id": 1258,
							"name": "#deleteReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "delete reference"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 230,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L230"
								}
							],
							"parameters": [
								{
									"id": 1259,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to delete"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1260,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file to delete"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.#deleteReference"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.#deleteReference"
					}
				},
				{
					"id": 1261,
					"name": "#getFileReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 249,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L249"
						}
					],
					"signatures": [
						{
							"id": 1262,
							"name": "#getFileReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get all references from file"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 249,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L249"
								}
							],
							"parameters": [
								{
									"id": 1263,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file to get reference"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.#getFileReference"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.#getFileReference"
					}
				},
				{
					"id": 1205,
					"name": "#getIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 96,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L96"
						}
					],
					"signatures": [
						{
							"id": 1206,
							"name": "#getIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Referencer.ts",
									"line": 96,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L96"
								}
							],
							"parameters": [
								{
									"id": 1207,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1199,
					"name": "#getReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 62,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L62"
						}
					],
					"signatures": [
						{
							"id": 1200,
							"name": "#getReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Referencer.ts",
									"line": 62,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L62"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1201,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1202,
															"name": "file",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Referencer.ts",
																	"line": 66,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L66"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1204,
															"name": "index",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Referencer.ts",
																	"line": 68,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L68"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1203,
															"name": "referenceFile",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Referencer.ts",
																	"line": 67,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L67"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1202,
																1204,
																1203
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Referencer.ts",
															"line": 65,
															"character": 12,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L65"
														}
													]
												}
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1237,
					"name": "#getReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 60,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L60"
						}
					],
					"signatures": [
						{
							"id": 1238,
							"name": "#getReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "get reference from files"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 60,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L60"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1239,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1240,
															"name": "file",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/global/referencer.ts",
																	"line": 64,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L64"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1241,
															"name": "referenceFile",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/global/referencer.ts",
																	"line": 65,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L65"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1240,
																1241
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/global/referencer.ts",
															"line": 63,
															"character": 12,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L63"
														}
													]
												}
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.#getReference"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.#getReference"
					}
				},
				{
					"id": 1208,
					"name": "#saveReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 102,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L102"
						}
					],
					"signatures": [
						{
							"id": 1209,
							"name": "#saveReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Referencer.ts",
									"line": 102,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L102"
								}
							],
							"parameters": [
								{
									"id": 1210,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1211,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1242,
					"name": "#saveReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 121,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L121"
						}
					],
					"signatures": [
						{
							"id": 1243,
							"name": "#saveReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "save reference to file"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 121,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L121"
								}
							],
							"parameters": [
								{
									"id": 1244,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to save"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1245,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file to save"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.#saveReference"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.#saveReference"
					}
				},
				{
					"id": 1197,
					"name": "#syncReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 40,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L40"
						}
					],
					"signatures": [
						{
							"id": 1198,
							"name": "#syncReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Referencer.ts",
									"line": 40,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L40"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1268,
					"name": "bulkDeleteReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 320,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L320"
						}
					],
					"signatures": [
						{
							"id": 1269,
							"name": "bulkDeleteReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "restart the Referencer"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<Referencer>.restart()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 320,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L320"
								}
							],
							"parameters": [
								{
									"id": 1270,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.bulkDeleteReference"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.bulkDeleteReference"
					}
				},
				{
					"id": 1277,
					"name": "bulkSetReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 383,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L383"
						}
					],
					"signatures": [
						{
							"id": 1278,
							"name": "bulkSetReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 383,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L383"
								}
							],
							"parameters": [
								{
									"id": 1279,
									"name": "reference",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.bulkSetReference"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.bulkSetReference"
					}
				},
				{
					"id": 1264,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 271,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L271"
						}
					],
					"signatures": [
						{
							"id": 1265,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "clear the Referencer"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<Referencer>.clear()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 271,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L271"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.clear"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.clear"
					}
				},
				{
					"id": 1254,
					"name": "deleteReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 207,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L207"
						}
					],
					"signatures": [
						{
							"id": 1255,
							"name": "deleteReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "delete reference"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<Referencer>.deleteReference(\"key\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 207,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L207"
								}
							],
							"parameters": [
								{
									"id": 1256,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to delete"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.deleteReference"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.deleteReference"
					}
				},
				{
					"id": 1225,
					"name": "getReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 146,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L146"
						}
					],
					"signatures": [
						{
							"id": 1226,
							"name": "getReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Referencer.ts",
									"line": 146,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L146"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1227,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1228,
															"name": "file",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Referencer.ts",
																	"line": 18,
																	"character": 10,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L18"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1230,
															"name": "index",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Referencer.ts",
																	"line": 18,
																	"character": 47,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L18"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1229,
															"name": "referenceFile",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Referencer.ts",
																	"line": 18,
																	"character": 24,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L18"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1228,
																1230,
																1229
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Referencer.ts",
															"line": 18,
															"character": 8,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L18"
														}
													]
												}
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.getReference"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.getReference"
					}
				},
				{
					"id": 1195,
					"name": "initialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 33,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 1196,
							"name": "initialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Referencer.ts",
									"line": 33,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L33"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.initialize"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.initialize"
					}
				},
				{
					"id": 1266,
					"name": "open",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 302,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L302"
						}
					],
					"signatures": [
						{
							"id": 1267,
							"name": "open",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@description",
										"content": [
											{
												"kind": "text",
												"text": "open the Referencer"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js\n<Referencer>.open()\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 302,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L302"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.open"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.open"
					}
				},
				{
					"id": 1275,
					"name": "restart",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 367,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L367"
						}
					],
					"signatures": [
						{
							"id": 1276,
							"name": "restart",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 367,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L367"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.restart"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.restart"
					}
				},
				{
					"id": 1212,
					"name": "setReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Referencer.ts",
							"line": 117,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L117"
						}
					],
					"signatures": [
						{
							"id": 1213,
							"name": "setReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Referencer.ts",
									"line": 117,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L117"
								}
							],
							"parameters": [
								{
									"id": 1214,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1215,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.setReference"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.setReference"
					}
				},
				{
					"id": 1280,
					"name": "sync",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/global/referencer.ts",
							"line": 394,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L394"
						}
					],
					"signatures": [
						{
							"id": 1281,
							"name": "sync",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/global/referencer.ts",
									"line": 394,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/global/referencer.ts#L394"
								}
							],
							"parameters": [
								{
									"id": 1282,
									"name": "files",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1283,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/KeyValue/src/newtable.ts",
											"qualifiedName": "default"
										},
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Referencer.sync"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Referencer.sync"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1177
					]
				},
				{
					"title": "Properties",
					"children": [
						1194,
						1232,
						1183,
						1231,
						1188,
						1233,
						1234
					]
				},
				{
					"title": "Accessors",
					"children": [
						1235
					]
				},
				{
					"title": "Methods",
					"children": [
						1271,
						1223,
						1252,
						1216,
						1246,
						1257,
						1261,
						1205,
						1199,
						1237,
						1208,
						1242,
						1197,
						1268,
						1277,
						1264,
						1254,
						1225,
						1195,
						1266,
						1275,
						1212,
						1280
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/src/Referencer.ts",
					"line": 15,
					"character": 21,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Referencer.ts#L15"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "lib/global/referencer.ts",
						"qualifiedName": "default"
					},
					"name": "default",
					"package": "@akarui/aoi.db"
				}
			]
		},
		{
			"id": 1624,
			"name": "Transmitter",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1669,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 32,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L32"
						}
					],
					"signatures": [
						{
							"id": 1670,
							"name": "new Transmitter",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 32,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L32"
								}
							],
							"typeParameter": [
								{
									"id": 1671,
									"name": "Type",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "KeyValue"
									}
								}
							],
							"parameters": [
								{
									"id": 1672,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1881,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Type",
												"refersToTypeParameter": true
											}
										],
										"name": "TransmitterOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1624,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Type",
										"refersToTypeParameter": true
									}
								],
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 1683,
					"name": "#maxRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 29,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 1684,
					"name": "#retries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 30,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1685,
					"name": "#waitTime",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 31,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "1000"
				},
				{
					"id": 1673,
					"name": "client",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 19,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L19"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@types/node/net.d.ts",
							"qualifiedName": "\"net\".Socket"
						},
						"name": "Socket",
						"package": "@types/node",
						"qualifiedName": "\"net\".Socket"
					}
				},
				{
					"id": 1675,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 21,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L21"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1676,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1678,
									"name": "lastPingTimestamp",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/Remote/src/transmitter.ts",
											"line": 23,
											"character": 2,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L23"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "-1"
								},
								{
									"id": 1679,
									"name": "ping",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/Remote/src/transmitter.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "-1"
								},
								{
									"id": 1677,
									"name": "seq",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/Remote/src/transmitter.ts",
											"line": 22,
											"character": 2,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L22"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1678,
										1679,
										1677
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 21,
									"character": 8,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L21"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 1674,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 20,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L20"
						}
					],
					"type": {
						"type": "reference",
						"target": 1881,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "Type",
								"refersToTypeParameter": true
							}
						],
						"name": "TransmitterOptions",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1680,
					"name": "pingInterval",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 26,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L26"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/timers.d.ts",
									"qualifiedName": "__global.NodeJS.Timeout"
								},
								"name": "Timeout",
								"package": "@types/node",
								"qualifiedName": "__global.NodeJS.Timeout"
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 1681,
					"name": "readyAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 27,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L27"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "-1"
				},
				{
					"id": 1682,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 28,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1666,
					"name": "captureRejectionSymbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: "
							},
							{
								"kind": "code",
								"text": "`Symbol.for('nodejs.rejection')`"
							},
							{
								"kind": "text",
								"text": "\n\nSee how to write a custom "
							},
							{
								"kind": "code",
								"text": "`rejection handler`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 402,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 143,
							"name": "captureRejectionSymbol",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.captureRejectionSymbol"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejectionSymbol"
					}
				},
				{
					"id": 1667,
					"name": "captureRejections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
							},
							{
								"kind": "code",
								"text": "`captureRejections`"
							},
							{
								"kind": "text",
								"text": " option on all new "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " objects."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 409,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejections"
					}
				},
				{
					"id": 1668,
					"name": "defaultMaxListeners",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "By default, a maximum of "
							},
							{
								"kind": "code",
								"text": "`10`"
							},
							{
								"kind": "text",
								"text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances\nusing the "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " method. To change the default\nfor _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": "property can be used. If this value is not a positive number, a "
							},
							{
								"kind": "code",
								"text": "`RangeError`"
							},
							{
								"kind": "text",
								"text": "is thrown.\n\nTake caution when setting the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": " because the\nchange affects _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, including those created before\nthe change is made. However, calling "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " still has\nprecedence over "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": ".\n\nThis is not a hard limit. The "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": ", the "
							},
							{
								"kind": "code",
								"text": "`emitter.getMaxListeners()`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners()`"
							},
							{
								"kind": "text",
								"text": "methods can be used to\ntemporarily avoid this warning:\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThe "
							},
							{
								"kind": "code",
								"text": "`--trace-warnings`"
							},
							{
								"kind": "text",
								"text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
							},
							{
								"kind": "code",
								"text": "`process.on('warning')`"
							},
							{
								"kind": "text",
								"text": " and will\nhave the additional "
							},
							{
								"kind": "code",
								"text": "`emitter`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`count`"
							},
							{
								"kind": "text",
								"text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is set to "
							},
							{
								"kind": "code",
								"text": "`'MaxListenersExceededWarning'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.11.2"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 446,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.defaultMaxListeners"
					}
				},
				{
					"id": 1665,
					"name": "errorMonitor",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This symbol shall be used to install a listener for only monitoring "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": "events. Listeners installed using this symbol are called before the regular"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " event is emitted. Therefore, the process will still crash if no\nregular "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listener is installed."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.6.0, v12.17.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 395,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 142,
							"name": "errorMonitor",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.errorMonitor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.errorMonitor"
					}
				},
				{
					"id": 1692,
					"name": "#bindEvents",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 80,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L80"
						}
					],
					"signatures": [
						{
							"id": 1693,
							"name": "#bindEvents",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 80,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1689,
					"name": "#createData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 73,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 1690,
							"name": "#createData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 73,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L73"
								}
							],
							"parameters": [
								{
									"id": 1691,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1922,
										"name": "ReceiverDataFormat",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1686,
					"name": "#createDebug",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 66,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L66"
						}
					],
					"signatures": [
						{
							"id": 1687,
							"name": "#createDebug",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 66,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L66"
								}
							],
							"parameters": [
								{
									"id": 1688,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1783,
					"name": "#formatAnalyzeData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 361,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L361"
						}
					],
					"signatures": [
						{
							"id": 1784,
							"name": "#formatAnalyzeData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 361,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L361"
								}
							],
							"parameters": [
								{
									"id": 1785,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1922,
										"name": "ReceiverDataFormat",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1786,
									"name": "sednD",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1931,
										"name": "TransmitterDataFormat",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1787,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1800,
											"name": "cost",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/Remote/src/transmitter.ts",
													"line": 375,
													"character": 3,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L375"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "data.c"
										},
										{
											"id": 1792,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/Remote/src/transmitter.ts",
													"line": 367,
													"character": 3,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L367"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1793,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1795,
															"name": "delay",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/Remote/src/transmitter.ts",
																	"line": 369,
																	"character": 4,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L369"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1796,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 1799,
																			"name": "ping",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "lib/Remote/src/transmitter.ts",
																					"line": 372,
																					"character": 5,
																					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L372"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"defaultValue": "..."
																		},
																		{
																			"id": 1798,
																			"name": "toClient",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "lib/Remote/src/transmitter.ts",
																					"line": 371,
																					"character": 5,
																					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L371"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"defaultValue": "..."
																		},
																		{
																			"id": 1797,
																			"name": "toServer",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "lib/Remote/src/transmitter.ts",
																					"line": 370,
																					"character": 5,
																					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L370"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			},
																			"defaultValue": "..."
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				1799,
																				1798,
																				1797
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "lib/Remote/src/transmitter.ts",
																			"line": 369,
																			"character": 11,
																			"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L369"
																		}
																	]
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1794,
															"name": "value",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/Remote/src/transmitter.ts",
																	"line": 368,
																	"character": 4,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L368"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															},
															"defaultValue": "data.d"
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1795,
																1794
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/Remote/src/transmitter.ts",
															"line": 367,
															"character": 9,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L367"
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 1801,
											"name": "hash",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/Remote/src/transmitter.ts",
													"line": 376,
													"character": 3,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L376"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "data.h"
										},
										{
											"id": 1789,
											"name": "method",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/Remote/src/transmitter.ts",
													"line": 364,
													"character": 3,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L364"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 1788,
											"name": "opCode",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/Remote/src/transmitter.ts",
													"line": 363,
													"character": 3,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L363"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "data.op"
										},
										{
											"id": 1791,
											"name": "seq",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/Remote/src/transmitter.ts",
													"line": 366,
													"character": 3,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L366"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "data.s"
										},
										{
											"id": 1790,
											"name": "timestamp",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/Remote/src/transmitter.ts",
													"line": 365,
													"character": 3,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L365"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "data.t"
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1800,
												1792,
												1801,
												1789,
												1788,
												1791,
												1790
											]
										}
									],
									"sources": [
										{
											"fileName": "lib/Remote/src/transmitter.ts",
											"line": 362,
											"character": 14,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L362"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1694,
					"name": "#reconnect",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 119,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L119"
						}
					],
					"signatures": [
						{
							"id": 1695,
							"name": "#reconnect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 119,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1710,
					"name": "#req",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 195,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L195"
						}
					],
					"signatures": [
						{
							"id": 1711,
							"name": "#req",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 195,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L195"
								}
							],
							"parameters": [
								{
									"id": 1712,
									"name": "op",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2686,
										"name": "TransmitterOpCodes",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1713,
									"name": "method",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 14,
										"name": "DatabaseMethod",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1714,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1922,
										"name": "ReceiverDataFormat",
										"package": "@akarui/aoi.db"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1802,
					"name": "[captureRejectionSymbol]",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 112,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 1803,
							"name": "[captureRejectionSymbol]",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 112,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1804,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								},
								{
									"id": 1805,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1806,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.[captureRejectionSymbol]"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.[captureRejectionSymbol]"
					}
				},
				{
					"id": 1807,
					"name": "addListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 545,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1808,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.on(eventName, listener)`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 545,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1809,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1810,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1811,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 545,
													"character": 66
												}
											],
											"signatures": [
												{
													"id": 1812,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 545,
															"character": 66
														}
													],
													"parameters": [
														{
															"id": 1813,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1624,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Type",
										"refersToTypeParameter": true
									}
								],
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addListener"
					}
				},
				{
					"id": 1731,
					"name": "all",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 273,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L273"
						}
					],
					"signatures": [
						{
							"id": 1732,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 273,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L273"
								}
							],
							"parameters": [
								{
									"id": 1733,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1734,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1735,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/Remote/src/transmitter.ts",
													"line": 275,
													"character": 10,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L275"
												}
											],
											"signatures": [
												{
													"id": 1736,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/transmitter.ts",
															"line": 275,
															"character": 10,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L275"
														}
													],
													"parameters": [
														{
															"id": 1737,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 1738,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": -1,
											"name": "Type",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "literal",
											"value": "KeyValue"
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 85,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1764,
					"name": "analyze",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 339,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L339"
						}
					],
					"signatures": [
						{
							"id": 1765,
							"name": "analyze",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 339,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L339"
								}
							],
							"parameters": [
								{
									"id": 1766,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1767,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1939,
										"name": "TransmitterAnaylzeDataFormat",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1768,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1781,
													"name": "cost",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/transmitter.ts",
															"line": 375,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L375"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "data.c"
												},
												{
													"id": 1773,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/transmitter.ts",
															"line": 367,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L367"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1774,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1776,
																	"name": "delay",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "lib/Remote/src/transmitter.ts",
																			"line": 369,
																			"character": 4,
																			"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L369"
																		}
																	],
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 1777,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1780,
																					"name": "ping",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "lib/Remote/src/transmitter.ts",
																							"line": 372,
																							"character": 5,
																							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L372"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 1779,
																					"name": "toClient",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "lib/Remote/src/transmitter.ts",
																							"line": 371,
																							"character": 5,
																							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L371"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 1778,
																					"name": "toServer",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "lib/Remote/src/transmitter.ts",
																							"line": 370,
																							"character": 5,
																							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L370"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					},
																					"defaultValue": "..."
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1780,
																						1779,
																						1778
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "lib/Remote/src/transmitter.ts",
																					"line": 369,
																					"character": 11,
																					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L369"
																				}
																			]
																		}
																	},
																	"defaultValue": "..."
																},
																{
																	"id": 1775,
																	"name": "value",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "lib/Remote/src/transmitter.ts",
																			"line": 368,
																			"character": 4,
																			"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L368"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	},
																	"defaultValue": "data.d"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1776,
																		1775
																	]
																}
															],
															"sources": [
																{
																	"fileName": "lib/Remote/src/transmitter.ts",
																	"line": 367,
																	"character": 9,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L367"
																}
															]
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 1782,
													"name": "hash",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/transmitter.ts",
															"line": 376,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L376"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "data.h"
												},
												{
													"id": 1770,
													"name": "method",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/transmitter.ts",
															"line": 364,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L364"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												},
												{
													"id": 1769,
													"name": "opCode",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/transmitter.ts",
															"line": 363,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L363"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "data.op"
												},
												{
													"id": 1772,
													"name": "seq",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/transmitter.ts",
															"line": 366,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L366"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "data.s"
												},
												{
													"id": 1771,
													"name": "timestamp",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/transmitter.ts",
															"line": 365,
															"character": 3,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L365"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "data.t"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1781,
														1773,
														1782,
														1770,
														1769,
														1772,
														1771
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/Remote/src/transmitter.ts",
													"line": 362,
													"character": 14,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L362"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1728,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 261,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L261"
						}
					],
					"signatures": [
						{
							"id": 1729,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 261,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L261"
								}
							],
							"parameters": [
								{
									"id": 1730,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1696,
					"name": "connect",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 150,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L150"
						}
					],
					"signatures": [
						{
							"id": 1697,
							"name": "connect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 150,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L150"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1724,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 248,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L248"
						}
					],
					"signatures": [
						{
							"id": 1725,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 248,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L248"
								}
							],
							"parameters": [
								{
									"id": 1726,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1727,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2681,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Type",
												"refersToTypeParameter": true
											}
										],
										"name": "Key",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1757,
					"name": "deleteMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 326,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L326"
						}
					],
					"signatures": [
						{
							"id": 1758,
							"name": "deleteMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 326,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L326"
								}
							],
							"parameters": [
								{
									"id": 1759,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1760,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1761,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/Remote/src/transmitter.ts",
													"line": 326,
													"character": 40,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L326"
												}
											],
											"signatures": [
												{
													"id": 1762,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/transmitter.ts",
															"line": 326,
															"character": 40,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L326"
														}
													],
													"parameters": [
														{
															"id": 1763,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1856,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 807,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1857,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously calls each of the listeners registered for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the event had listeners, "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " otherwise.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 807,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1858,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1859,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.emit"
					}
				},
				{
					"id": 1878,
					"name": "eventNames",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 870,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1879,
							"name": "eventNames",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
									},
									{
										"kind": "code",
										"text": "`Symbol`"
									},
									{
										"kind": "text",
										"text": "s.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 870,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.eventNames"
					}
				},
				{
					"id": 1750,
					"name": "findMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 313,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L313"
						}
					],
					"signatures": [
						{
							"id": 1751,
							"name": "findMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 313,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L313"
								}
							],
							"parameters": [
								{
									"id": 1752,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1753,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1754,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/Remote/src/transmitter.ts",
													"line": 313,
													"character": 38,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L313"
												}
											],
											"signatures": [
												{
													"id": 1755,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/transmitter.ts",
															"line": 313,
															"character": 38,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L313"
														}
													],
													"parameters": [
														{
															"id": 1756,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1743,
					"name": "findOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 296,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L296"
						}
					],
					"signatures": [
						{
							"id": 1744,
							"name": "findOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 296,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L296"
								}
							],
							"parameters": [
								{
									"id": 1745,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1746,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1747,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/Remote/src/transmitter.ts",
													"line": 298,
													"character": 9,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L298"
												}
											],
											"signatures": [
												{
													"id": 1748,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/Remote/src/transmitter.ts",
															"line": 298,
															"character": 9,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L298"
														}
													],
													"parameters": [
														{
															"id": 1749,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 85,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 85,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1715,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 226,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L226"
						}
					],
					"signatures": [
						{
							"id": 1716,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 226,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L226"
								}
							],
							"parameters": [
								{
									"id": 1717,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1718,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2681,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Type",
												"refersToTypeParameter": true
											}
										],
										"name": "Key",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 85,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1848,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 722,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1849,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current max listener value for the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " which is either\nset by "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " or defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "defaultMaxListeners",
										"target": 1668
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v1.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 722,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 1739,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 288,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L288"
						}
					],
					"signatures": [
						{
							"id": 1740,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 288,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L288"
								}
							],
							"parameters": [
								{
									"id": 1741,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1742,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2681,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Type",
												"refersToTypeParameter": true
											}
										],
										"name": "Key",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1860,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 816,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1861,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of listeners listening for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\nIf "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v3.2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 816,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1862,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1863,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event handler function"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 1850,
					"name": "listeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 735,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1851,
							"name": "listeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 735,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1852,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listeners"
					}
				},
				{
					"id": 1835,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 695,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1836,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.removeListener()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v10.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 695,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1837,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1838,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1839,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 695,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 1840,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 695,
															"character": 58
														}
													],
													"parameters": [
														{
															"id": 1841,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1624,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Type",
										"refersToTypeParameter": true
									}
								],
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.off"
					}
				},
				{
					"id": 1814,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 577,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1815,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the end of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.101"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 577,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1816,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1817,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1818,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 577,
													"character": 57
												}
											],
											"signatures": [
												{
													"id": 1819,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 577,
															"character": 57
														}
													],
													"parameters": [
														{
															"id": 1820,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1624,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Type",
										"refersToTypeParameter": true
									}
								],
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 1821,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 607,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1822,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". The\nnext time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this listener is removed and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependOnceListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 607,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1823,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1824,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1825,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 607,
													"character": 59
												}
											],
											"signatures": [
												{
													"id": 1826,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 607,
															"character": 59
														}
													],
													"parameters": [
														{
															"id": 1827,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1624,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Type",
										"refersToTypeParameter": true
									}
								],
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 1708,
					"name": "ping",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 184,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L184"
						}
					],
					"signatures": [
						{
							"id": 1709,
							"name": "ping",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 184,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L184"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1864,
					"name": "prependListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 834,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1865,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the _beginning_ of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 834,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1866,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1867,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1868,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 834,
													"character": 70
												}
											],
											"signatures": [
												{
													"id": 1869,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 834,
															"character": 70
														}
													],
													"parameters": [
														{
															"id": 1870,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1624,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Type",
										"refersToTypeParameter": true
									}
								],
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependListener"
					}
				},
				{
					"id": 1871,
					"name": "prependOnceListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 850,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1872,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " to the _beginning_ of the listeners array. The next time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 850,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1873,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1874,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1875,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 850,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 1876,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 850,
															"character": 74
														}
													],
													"parameters": [
														{
															"id": 1877,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1624,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Type",
										"refersToTypeParameter": true
									}
								],
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependOnceListener"
					}
				},
				{
					"id": 1853,
					"name": "rawListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 766,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1854,
							"name": "rawListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ",\nincluding any wrappers (such as those created by "
									},
									{
										"kind": "code",
										"text": "`.once()`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 766,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1855,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.rawListeners"
					}
				},
				{
					"id": 1698,
					"name": "receiveDataFormat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 160,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L160"
						}
					],
					"signatures": [
						{
							"id": 1699,
							"name": "receiveDataFormat",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 160,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L160"
								}
							],
							"parameters": [
								{
									"id": 1700,
									"name": "buffer",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.Buffer"
										},
										"name": "Buffer",
										"package": "@types/node",
										"qualifiedName": "__global.Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1922,
								"name": "ReceiverDataFormat",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 1842,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 706,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1843,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes all listeners, or those of the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 706,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1844,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1624,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Type",
										"refersToTypeParameter": true
									}
								],
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeAllListeners"
					}
				},
				{
					"id": 1828,
					"name": "removeListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 690,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1829,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the specified "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " from the listener array for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", then "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`removeAllListeners()`"
									},
									{
										"kind": "text",
										"text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
									},
									{
										"kind": "code",
										"text": "`emit()`"
									},
									{
										"kind": "text",
										"text": " in progress. Subsequent events behave as expected.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
									},
									{
										"kind": "code",
										"text": "`emitter.listeners()`"
									},
									{
										"kind": "text",
										"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove the most\nrecently added instance. In the example the "
									},
									{
										"kind": "code",
										"text": "`once('ping')`"
									},
									{
										"kind": "text",
										"text": "listener is removed:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 690,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1830,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1831,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1832,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 690,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 1833,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 690,
															"character": 69
														}
													],
													"parameters": [
														{
															"id": 1834,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1624,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Type",
										"refersToTypeParameter": true
									}
								],
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeListener"
					}
				},
				{
					"id": 1701,
					"name": "sendDataFormat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 164,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L164"
						}
					],
					"signatures": [
						{
							"id": 1702,
							"name": "sendDataFormat",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 164,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L164"
								}
							],
							"parameters": [
								{
									"id": 1703,
									"name": "op",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2686,
										"name": "TransmitterOpCodes",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1704,
									"name": "method",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 14,
										"name": "DatabaseMethod",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1705,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1706,
									"name": "seq",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1707,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/buffer.d.ts",
									"qualifiedName": "__global.Buffer"
								},
								"name": "Buffer",
								"package": "@types/node",
								"qualifiedName": "__global.Buffer"
							}
						}
					]
				},
				{
					"id": 1719,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 238,
							"character": 7,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L238"
						}
					],
					"signatures": [
						{
							"id": 1720,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 238,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L238"
								}
							],
							"parameters": [
								{
									"id": 1721,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1722,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2681,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Type",
												"refersToTypeParameter": true
											}
										],
										"name": "Key",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1723,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2683,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Type",
												"refersToTypeParameter": true
											}
										],
										"name": "Value",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1845,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 716,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1846,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s will print a warning if more than "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " method allows the limit to be\nmodified for this specific "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance. The value can be set to"
									},
									{
										"kind": "code",
										"text": "`Infinity`"
									},
									{
										"kind": "text",
										"text": " (or "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.5"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 716,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 1847,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1624,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "Type",
										"refersToTypeParameter": true
									}
								],
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				},
				{
					"id": 1658,
					"name": "addAbortListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 387,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1659,
							"name": "addAbortListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Listens once to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on the provided "
									},
									{
										"kind": "code",
										"text": "`signal`"
									},
									{
										"kind": "text",
										"text": ".\n\nListening to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall "
									},
									{
										"kind": "code",
										"text": "`e.stopImmediatePropagation()`"
									},
									{
										"kind": "text",
										"text": ". Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": "s in Node.js APIs by solving these\ntwo issues by listening to the event such that "
									},
									{
										"kind": "code",
										"text": "`stopImmediatePropagation`"
									},
									{
										"kind": "text",
										"text": " does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v20.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Disposable that removes the "
											},
											{
												"kind": "code",
												"text": "`abort`"
											},
											{
												"kind": "text",
												"text": " listener."
											}
										]
									}
								],
								"modifierTags": [
									"@experimental"
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 387,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1660,
									"name": "signal",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "AbortSignal"
										},
										"name": "AbortSignal",
										"package": "typescript"
									}
								},
								{
									"id": 1661,
									"name": "resource",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1662,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 387,
													"character": 63
												}
											],
											"signatures": [
												{
													"id": 1663,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 387,
															"character": 63
														}
													],
													"parameters": [
														{
															"id": 1664,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Event"
																},
																"name": "Event",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/globals.d.ts",
									"qualifiedName": "__global.Disposable"
								},
								"name": "Disposable",
								"package": "@types/node",
								"qualifiedName": "__global.Disposable"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addAbortListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addAbortListener"
					}
				},
				{
					"id": 1625,
					"name": "createConnection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/src/transmitter.ts",
							"line": 50,
							"character": 8,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L50"
						}
					],
					"signatures": [
						{
							"id": 1626,
							"name": "createConnection",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/Remote/src/transmitter.ts",
									"line": 50,
									"character": 1,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L50"
								}
							],
							"typeParameter": [
								{
									"id": 1627,
									"name": "Type",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "KeyValue"
									}
								}
							],
							"parameters": [
								{
									"id": 1628,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1915,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Type",
												"refersToTypeParameter": true
											}
										],
										"name": "TransmitterCreateOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1624,
								"typeArguments": [
									{
										"type": "literal",
										"value": "KeyValue"
									}
								],
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 1647,
					"name": "getEventListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 308,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1648,
							"name": "getEventListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.listeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.2.0, v14.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 308,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1649,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 1650,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getEventListeners"
					}
				},
				{
					"id": 1651,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 337,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1652,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the currently set max amount of listeners.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.getMaxListeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v19.9.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 337,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1653,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 1643,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 280,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1644,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A class method that returns the number of listeners for the given "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "registered on the given "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.12"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v3.2.0 - Use "
											},
											{
												"kind": "code",
												"text": "`listenerCount`"
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 280,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1645,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The emitter to query"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 1646,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 1638,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 258,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1639,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns an "
									},
									{
										"kind": "code",
										"text": "`AsyncIterator`"
									},
									{
										"kind": "text",
										"text": " that iterates "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " events. It will throw\nif the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": ". It removes all listeners when\nexiting the loop. The "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting on events:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.16.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events emitted by the "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 258,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1640,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 1641,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1642,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
									"qualifiedName": "AsyncIterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 1629,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 193,
							"character": 15
						},
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 198,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1630,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " that is fulfilled when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits the given\nevent or that is rejected if the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " while waiting.\nThe "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event\nsemantics and does not listen to the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe special handling of the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is only used when "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": "is used to wait for another event. If "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": " is used to wait for the\n'"
									},
									{
										"kind": "code",
										"text": "`error'`"
									},
									{
										"kind": "text",
										"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting for the event:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.13.0, v10.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 193,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1631,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_NodeEventTarget"
										},
										"name": "_NodeEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 1632,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 1633,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 1634,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 198,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1635,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_DOMEventTarget"
										},
										"name": "_DOMEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 1636,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1637,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 1654,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 352,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1655,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 352,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1656,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative number. The maximum number of listeners per "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": " event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1657,
									"name": "eventTargets",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													"name": "EventEmitter",
													"package": "@types/node",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "_DOMEventTarget"
													},
													"name": "_DOMEventTarget",
													"package": "@types/node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1669
					]
				},
				{
					"title": "Properties",
					"children": [
						1683,
						1684,
						1685,
						1673,
						1675,
						1674,
						1680,
						1681,
						1682,
						1666,
						1667,
						1668,
						1665
					]
				},
				{
					"title": "Methods",
					"children": [
						1692,
						1689,
						1686,
						1783,
						1694,
						1710,
						1802,
						1807,
						1731,
						1764,
						1728,
						1696,
						1724,
						1757,
						1856,
						1878,
						1750,
						1743,
						1715,
						1848,
						1739,
						1860,
						1850,
						1835,
						1814,
						1821,
						1708,
						1864,
						1871,
						1853,
						1698,
						1842,
						1828,
						1701,
						1719,
						1845,
						1658,
						1625,
						1647,
						1651,
						1643,
						1638,
						1629,
						1654
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/src/transmitter.ts",
					"line": 16,
					"character": 21,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/src/transmitter.ts#L16"
				}
			],
			"typeParameters": [
				{
					"id": 1880,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 2685,
						"name": "PossibleDatabaseTypes",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 692,
			"name": "WideColumnar",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 734,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L20"
						}
					],
					"signatures": [
						{
							"id": 735,
							"name": "new WideColumnar",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 20,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L20"
								}
							],
							"parameters": [
								{
									"id": 736,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1340,
										"name": "WideColumnarOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 692,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 744,
					"name": "#options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L18"
						}
					],
					"type": {
						"type": "reference",
						"target": 637,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1340,
								"name": "WideColumnarOptions",
								"package": "@akarui/aoi.db"
							}
						],
						"name": "DeepRequired",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 745,
					"name": "readyAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "-1"
				},
				{
					"id": 737,
					"name": "tables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L12"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 738,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 12,
									"character": 12,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L12"
								}
							],
							"indexSignature": {
								"id": 739,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "lib/WideColumnar/src/Database.ts",
										"line": 13,
										"character": 8,
										"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L13"
									}
								],
								"parameters": [
									{
										"id": 740,
										"name": "key",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reflection",
									"declaration": {
										"id": 741,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 742,
												"name": "ready",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "lib/WideColumnar/src/Database.ts",
														"line": 14,
														"character": 12,
														"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L14"
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "boolean"
												}
											},
											{
												"id": 743,
												"name": "table",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "lib/WideColumnar/src/Database.ts",
														"line": 15,
														"character": 12,
														"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L15"
													}
												],
												"type": {
													"type": "reference",
													"target": 1087,
													"name": "WideColumnarTable",
													"package": "@akarui/aoi.db",
													"qualifiedName": "default"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													742,
													743
												]
											}
										],
										"sources": [
											{
												"fileName": "lib/WideColumnar/src/Database.ts",
												"line": 13,
												"character": 23,
												"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L13"
											}
										]
									}
								}
							}
						}
					},
					"defaultValue": "{}"
				},
				{
					"id": 731,
					"name": "captureRejectionSymbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: "
							},
							{
								"kind": "code",
								"text": "`Symbol.for('nodejs.rejection')`"
							},
							{
								"kind": "text",
								"text": "\n\nSee how to write a custom "
							},
							{
								"kind": "code",
								"text": "`rejection handler`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 402,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 143,
							"name": "captureRejectionSymbol",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.captureRejectionSymbol"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejectionSymbol"
					}
				},
				{
					"id": 732,
					"name": "captureRejections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
							},
							{
								"kind": "code",
								"text": "`captureRejections`"
							},
							{
								"kind": "text",
								"text": " option on all new "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " objects."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 409,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejections"
					}
				},
				{
					"id": 733,
					"name": "defaultMaxListeners",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "By default, a maximum of "
							},
							{
								"kind": "code",
								"text": "`10`"
							},
							{
								"kind": "text",
								"text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances\nusing the "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " method. To change the default\nfor _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": "property can be used. If this value is not a positive number, a "
							},
							{
								"kind": "code",
								"text": "`RangeError`"
							},
							{
								"kind": "text",
								"text": "is thrown.\n\nTake caution when setting the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": " because the\nchange affects _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, including those created before\nthe change is made. However, calling "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " still has\nprecedence over "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": ".\n\nThis is not a hard limit. The "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": ", the "
							},
							{
								"kind": "code",
								"text": "`emitter.getMaxListeners()`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners()`"
							},
							{
								"kind": "text",
								"text": "methods can be used to\ntemporarily avoid this warning:\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThe "
							},
							{
								"kind": "code",
								"text": "`--trace-warnings`"
							},
							{
								"kind": "text",
								"text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
							},
							{
								"kind": "code",
								"text": "`process.on('warning')`"
							},
							{
								"kind": "text",
								"text": " and will\nhave the additional "
							},
							{
								"kind": "code",
								"text": "`emitter`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`count`"
							},
							{
								"kind": "text",
								"text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is set to "
							},
							{
								"kind": "code",
								"text": "`'MaxListenersExceededWarning'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.11.2"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 446,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.defaultMaxListeners"
					}
				},
				{
					"id": 693,
					"name": "defaultOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 30,
							"character": 11,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L30"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Required"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1340,
								"name": "WideColumnarOptions",
								"package": "@akarui/aoi.db"
							}
						],
						"name": "Required",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 730,
					"name": "errorMonitor",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This symbol shall be used to install a listener for only monitoring "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": "events. Listeners installed using this symbol are called before the regular"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " event is emitted. Therefore, the process will still crash if no\nregular "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listener is installed."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.6.0, v12.17.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 395,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 142,
							"name": "errorMonitor",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.errorMonitor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.errorMonitor"
					}
				},
				{
					"id": 746,
					"name": "options",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 26,
							"character": 8,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L26"
						}
					],
					"getSignature": {
						"id": 747,
						"name": "options",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/WideColumnar/src/Database.ts",
								"line": 26,
								"character": 4,
								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L26"
							}
						],
						"type": {
							"type": "reference",
							"target": 637,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1340,
									"name": "WideColumnarOptions",
									"package": "@akarui/aoi.db"
								}
							],
							"name": "DeepRequired",
							"package": "@akarui/aoi.db"
						}
					}
				},
				{
					"id": 748,
					"name": "#finalizeOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 73,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 749,
							"name": "#finalizeOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 73,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L73"
								}
							],
							"parameters": [
								{
									"id": 750,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1340,
										"name": "WideColumnarOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 751,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 760,
											"name": "cacheConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 87,
													"character": 12,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L87"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 761,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 762,
															"name": "limit",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Database.ts",
																	"line": 88,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L88"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															},
															"defaultValue": "..."
														},
														{
															"id": 768,
															"name": "referenceType",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Database.ts",
																	"line": 94,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L94"
																}
															],
															"type": {
																"type": "reference",
																"target": 48,
																"name": "ReferenceType",
																"package": "@akarui/aoi.db"
															},
															"defaultValue": "..."
														},
														{
															"id": 763,
															"name": "sortFunction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Database.ts",
																	"line": 91,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L91"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 764,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "lib/WideColumnar/typings/interface.ts",
																			"line": 16,
																			"character": 18,
																			"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L16"
																		}
																	],
																	"signatures": [
																		{
																			"id": 765,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "lib/WideColumnar/typings/interface.ts",
																					"line": 16,
																					"character": 18,
																					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L16"
																				}
																			],
																			"parameters": [
																				{
																					"id": 766,
																					"name": "a",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"target": 1071,
																						"name": "default",
																						"package": "@akarui/aoi.db"
																					}
																				},
																				{
																					"id": 767,
																					"name": "b",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"target": 1071,
																						"name": "default",
																						"package": "@akarui/aoi.db"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	]
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																762,
																768,
																763
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 87,
															"character": 25,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L87"
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 752,
											"name": "dataConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 77,
													"character": 12,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L77"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 753,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 754,
															"name": "path",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Database.ts",
																	"line": 78,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L78"
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															},
															"defaultValue": "..."
														},
														{
															"id": 759,
															"name": "referencePath",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Database.ts",
																	"line": 83,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L83"
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															},
															"defaultValue": "..."
														},
														{
															"id": 755,
															"name": "tables",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Database.ts",
																	"line": 80,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L80"
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "reflection",
																			"declaration": {
																				"id": 756,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 758,
																						"name": "columns",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "lib/WideColumnar/typings/interface.ts",
																								"line": 38,
																								"character": 8,
																								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L38"
																							}
																						],
																						"type": {
																							"type": "union",
																							"types": [
																								{
																									"type": "array",
																									"elementType": {
																										"type": "reference",
																										"target": 940,
																										"name": "default",
																										"package": "@akarui/aoi.db"
																									}
																								},
																								{
																									"type": "array",
																									"elementType": {
																										"type": "reference",
																										"target": 1324,
																										"name": "WideColumnarColumnOptions",
																										"package": "@akarui/aoi.db"
																									}
																								}
																							]
																						}
																					},
																					{
																						"id": 757,
																						"name": "name",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "lib/WideColumnar/typings/interface.ts",
																								"line": 37,
																								"character": 8,
																								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L37"
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							758,
																							757
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "lib/WideColumnar/typings/interface.ts",
																						"line": 36,
																						"character": 13,
																						"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L36"
																					}
																				]
																			}
																		}
																	}
																]
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																754,
																759,
																755
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 77,
															"character": 24,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L77"
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 775,
											"name": "debug",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 108,
													"character": 12,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L108"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "..."
										},
										{
											"id": 769,
											"name": "encryptionConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 98,
													"character": 12,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L98"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 770,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 771,
															"name": "securityKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Database.ts",
																	"line": 99,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L99"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																771
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 98,
															"character": 30,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L98"
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 772,
											"name": "fileConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 103,
													"character": 12,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L103"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 773,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 774,
															"name": "extension",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "lib/WideColumnar/src/Database.ts",
																	"line": 104,
																	"character": 16,
																	"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L104"
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																774
															]
														}
													],
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 103,
															"character": 24,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L103"
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												760,
												752,
												775,
												769,
												772
											]
										}
									],
									"sources": [
										{
											"fileName": "lib/WideColumnar/src/Database.ts",
											"line": 76,
											"character": 15,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L76"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 862,
					"name": "[captureRejectionSymbol]",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 112,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 863,
							"name": "[captureRejectionSymbol]",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 112,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 864,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								},
								{
									"id": 865,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 866,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.[captureRejectionSymbol]"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.[captureRejectionSymbol]"
					}
				},
				{
					"id": 867,
					"name": "addListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 545,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 868,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.on(eventName, listener)`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 545,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 869,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 870,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 871,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 545,
													"character": 66
												}
											],
											"signatures": [
												{
													"id": 872,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 545,
															"character": 66
														}
													],
													"parameters": [
														{
															"id": 873,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 692,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addListener"
					}
				},
				{
					"id": 802,
					"name": "all",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 182,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L182"
						}
					],
					"signatures": [
						{
							"id": 803,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 182,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L182"
								}
							],
							"parameters": [
								{
									"id": 804,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 805,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 806,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 807,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 185,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L185"
												}
											],
											"signatures": [
												{
													"id": 808,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 185,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L185"
														}
													],
													"parameters": [
														{
															"id": 809,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 810,
					"name": "allColumns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 192,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L192"
						}
					],
					"signatures": [
						{
							"id": 811,
							"name": "allColumns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 192,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L192"
								}
							],
							"parameters": [
								{
									"id": 812,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 813,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 814,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 194,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L194"
												}
											],
											"signatures": [
												{
													"id": 815,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 194,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L194"
														}
													],
													"parameters": [
														{
															"id": 816,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 817,
					"name": "allTable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 201,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L201"
						}
					],
					"signatures": [
						{
							"id": 818,
							"name": "allTable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 201,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L201"
								}
							],
							"parameters": [
								{
									"id": 819,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 820,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 201,
													"character": 26,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L201"
												}
											],
											"signatures": [
												{
													"id": 821,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 201,
															"character": 26,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L201"
														}
													],
													"parameters": [
														{
															"id": 822,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 860,
					"name": "backup",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 263,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L263"
						}
					],
					"signatures": [
						{
							"id": 861,
							"name": "backup",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 263,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L263"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 823,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 209,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L209"
						}
					],
					"signatures": [
						{
							"id": 824,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 209,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L209"
								}
							],
							"parameters": [
								{
									"id": 825,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 826,
					"name": "clearAll",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 215,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L215"
						}
					],
					"signatures": [
						{
							"id": 827,
							"name": "clearAll",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 215,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L215"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 776,
					"name": "connect",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 112,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L112"
						}
					],
					"signatures": [
						{
							"id": 777,
							"name": "connect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 112,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L112"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 797,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 176,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L176"
						}
					],
					"signatures": [
						{
							"id": 798,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 176,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L176"
								}
							],
							"parameters": [
								{
									"id": 799,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 800,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 801,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 828,
					"name": "deleteMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 221,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L221"
						}
					],
					"signatures": [
						{
							"id": 829,
							"name": "deleteMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 221,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L221"
								}
							],
							"parameters": [
								{
									"id": 830,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 831,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 832,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 833,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 224,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L224"
												}
											],
											"signatures": [
												{
													"id": 834,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 224,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L224"
														}
													],
													"parameters": [
														{
															"id": 835,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 916,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 807,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 917,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously calls each of the listeners registered for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the event had listeners, "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " otherwise.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 807,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 918,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 919,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.emit"
					}
				},
				{
					"id": 938,
					"name": "eventNames",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 870,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 939,
							"name": "eventNames",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
									},
									{
										"kind": "code",
										"text": "`Symbol`"
									},
									{
										"kind": "text",
										"text": "s.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 870,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.eventNames"
					}
				},
				{
					"id": 836,
					"name": "findMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 231,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L231"
						}
					],
					"signatures": [
						{
							"id": 837,
							"name": "findMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 231,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L231"
								}
							],
							"parameters": [
								{
									"id": 838,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 839,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 840,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 841,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 234,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L234"
												}
											],
											"signatures": [
												{
													"id": 842,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 234,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L234"
														}
													],
													"parameters": [
														{
															"id": 843,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 844,
					"name": "findOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 241,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L241"
						}
					],
					"signatures": [
						{
							"id": 845,
							"name": "findOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 241,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L241"
								}
							],
							"parameters": [
								{
									"id": 846,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 847,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 848,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 849,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 244,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L244"
												}
											],
											"signatures": [
												{
													"id": 850,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 244,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L244"
														}
													],
													"parameters": [
														{
															"id": 851,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 857,
					"name": "fullRepair",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 257,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L257"
						}
					],
					"signatures": [
						{
							"id": 858,
							"name": "fullRepair",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 257,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L257"
								}
							],
							"parameters": [
								{
									"id": 859,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 792,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 170,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L170"
						}
					],
					"signatures": [
						{
							"id": 793,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 170,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L170"
								}
							],
							"parameters": [
								{
									"id": 794,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 795,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 796,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 908,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 722,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 909,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current max listener value for the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " which is either\nset by "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " or defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "defaultMaxListeners",
										"target": 733
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v1.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 722,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 778,
					"name": "getTable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 150,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L150"
						}
					],
					"signatures": [
						{
							"id": 779,
							"name": "getTable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 150,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L150"
								}
							],
							"parameters": [
								{
									"id": 780,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1087,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 852,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 251,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L251"
						}
					],
					"signatures": [
						{
							"id": 853,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 251,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L251"
								}
							],
							"parameters": [
								{
									"id": 854,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 855,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 856,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 920,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 816,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 921,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of listeners listening for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\nIf "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v3.2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 816,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 922,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 923,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event handler function"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 910,
					"name": "listeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 735,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 911,
							"name": "listeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 735,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 912,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listeners"
					}
				},
				{
					"id": 895,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 695,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 896,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.removeListener()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v10.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 695,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 897,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 898,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 899,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 695,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 900,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 695,
															"character": 58
														}
													],
													"parameters": [
														{
															"id": 901,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 692,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.off"
					}
				},
				{
					"id": 874,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 577,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 875,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the end of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.101"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 577,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 876,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 877,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 878,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 577,
													"character": 57
												}
											],
											"signatures": [
												{
													"id": 879,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 577,
															"character": 57
														}
													],
													"parameters": [
														{
															"id": 880,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 692,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 881,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 607,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 882,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". The\nnext time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this listener is removed and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependOnceListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 607,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 883,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 884,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 885,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 607,
													"character": 59
												}
											],
											"signatures": [
												{
													"id": 886,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 607,
															"character": 59
														}
													],
													"parameters": [
														{
															"id": 887,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 692,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 924,
					"name": "prependListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 834,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 925,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the _beginning_ of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 834,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 926,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 927,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 928,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 834,
													"character": 70
												}
											],
											"signatures": [
												{
													"id": 929,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 834,
															"character": 70
														}
													],
													"parameters": [
														{
															"id": 930,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 692,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependListener"
					}
				},
				{
					"id": 931,
					"name": "prependOnceListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 850,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 932,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " to the _beginning_ of the listeners array. The next time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 850,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 933,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 934,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 935,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 850,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 936,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 850,
															"character": 74
														}
													],
													"parameters": [
														{
															"id": 937,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 692,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependOnceListener"
					}
				},
				{
					"id": 913,
					"name": "rawListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 766,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 914,
							"name": "rawListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ",\nincluding any wrappers (such as those created by "
									},
									{
										"kind": "code",
										"text": "`.once()`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 766,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 915,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.rawListeners"
					}
				},
				{
					"id": 902,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 706,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 903,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes all listeners, or those of the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 706,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 904,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 692,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeAllListeners"
					}
				},
				{
					"id": 888,
					"name": "removeListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 690,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 889,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the specified "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " from the listener array for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", then "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`removeAllListeners()`"
									},
									{
										"kind": "text",
										"text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
									},
									{
										"kind": "code",
										"text": "`emit()`"
									},
									{
										"kind": "text",
										"text": " in progress. Subsequent events behave as expected.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
									},
									{
										"kind": "code",
										"text": "`emitter.listeners()`"
									},
									{
										"kind": "text",
										"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove the most\nrecently added instance. In the example the "
									},
									{
										"kind": "code",
										"text": "`once('ping')`"
									},
									{
										"kind": "text",
										"text": "listener is removed:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 690,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 890,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 891,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 892,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 690,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 893,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 690,
															"character": 69
														}
													],
													"parameters": [
														{
															"id": 894,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 692,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeListener"
					}
				},
				{
					"id": 781,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Database.ts",
							"line": 154,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L154"
						}
					],
					"signatures": [
						{
							"id": 782,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Database.ts",
									"line": 154,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L154"
								}
							],
							"parameters": [
								{
									"id": 783,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 784,
									"name": "column",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 785,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 786,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 157,
															"character": 12,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L157"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 787,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 158,
															"character": 12,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L158"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														786,
														787
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 156,
													"character": 16,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L156"
												}
											]
										}
									}
								},
								{
									"id": 788,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 789,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 790,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 161,
															"character": 12,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L161"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 791,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Database.ts",
															"line": 162,
															"character": 12,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L162"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														790,
														791
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Database.ts",
													"line": 160,
													"character": 17,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L160"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 905,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 716,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 906,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s will print a warning if more than "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " method allows the limit to be\nmodified for this specific "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance. The value can be set to"
									},
									{
										"kind": "code",
										"text": "`Infinity`"
									},
									{
										"kind": "text",
										"text": " (or "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.5"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 716,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 907,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 692,
								"name": "default",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				},
				{
					"id": 723,
					"name": "addAbortListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 387,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 724,
							"name": "addAbortListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Listens once to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on the provided "
									},
									{
										"kind": "code",
										"text": "`signal`"
									},
									{
										"kind": "text",
										"text": ".\n\nListening to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall "
									},
									{
										"kind": "code",
										"text": "`e.stopImmediatePropagation()`"
									},
									{
										"kind": "text",
										"text": ". Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": "s in Node.js APIs by solving these\ntwo issues by listening to the event such that "
									},
									{
										"kind": "code",
										"text": "`stopImmediatePropagation`"
									},
									{
										"kind": "text",
										"text": " does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v20.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Disposable that removes the "
											},
											{
												"kind": "code",
												"text": "`abort`"
											},
											{
												"kind": "text",
												"text": " listener."
											}
										]
									}
								],
								"modifierTags": [
									"@experimental"
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 387,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 725,
									"name": "signal",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "AbortSignal"
										},
										"name": "AbortSignal",
										"package": "typescript"
									}
								},
								{
									"id": 726,
									"name": "resource",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 727,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 387,
													"character": 63
												}
											],
											"signatures": [
												{
													"id": 728,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 387,
															"character": 63
														}
													],
													"parameters": [
														{
															"id": 729,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Event"
																},
																"name": "Event",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/globals.d.ts",
									"qualifiedName": "__global.Disposable"
								},
								"name": "Disposable",
								"package": "@types/node",
								"qualifiedName": "__global.Disposable"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addAbortListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addAbortListener"
					}
				},
				{
					"id": 712,
					"name": "getEventListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 308,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 713,
							"name": "getEventListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.listeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.2.0, v14.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 308,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 714,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 715,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getEventListeners"
					}
				},
				{
					"id": 716,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 337,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 717,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the currently set max amount of listeners.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.getMaxListeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v19.9.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 337,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 718,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 708,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 280,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 709,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A class method that returns the number of listeners for the given "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "registered on the given "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.12"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v3.2.0 - Use "
											},
											{
												"kind": "code",
												"text": "`listenerCount`"
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 280,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 710,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The emitter to query"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 711,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 703,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 258,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 704,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns an "
									},
									{
										"kind": "code",
										"text": "`AsyncIterator`"
									},
									{
										"kind": "text",
										"text": " that iterates "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " events. It will throw\nif the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": ". It removes all listeners when\nexiting the loop. The "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting on events:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.16.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events emitted by the "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 258,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 705,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 706,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 707,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
									"qualifiedName": "AsyncIterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 694,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 193,
							"character": 15
						},
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 198,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 695,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " that is fulfilled when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits the given\nevent or that is rejected if the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " while waiting.\nThe "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event\nsemantics and does not listen to the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe special handling of the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is only used when "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": "is used to wait for another event. If "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": " is used to wait for the\n'"
									},
									{
										"kind": "code",
										"text": "`error'`"
									},
									{
										"kind": "text",
										"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting for the event:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.13.0, v10.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 193,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 696,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_NodeEventTarget"
										},
										"name": "_NodeEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 697,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 698,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 699,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 198,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 700,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "_DOMEventTarget"
										},
										"name": "_DOMEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 701,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 702,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 719,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 352,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 720,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 352,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 721,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative number. The maximum number of listeners per "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": " event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 722,
									"name": "eventTargets",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													"name": "EventEmitter",
													"package": "@types/node",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/@types/node/events.d.ts",
														"qualifiedName": "_DOMEventTarget"
													},
													"name": "_DOMEventTarget",
													"package": "@types/node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						734
					]
				},
				{
					"title": "Properties",
					"children": [
						744,
						745,
						737,
						731,
						732,
						733,
						693,
						730
					]
				},
				{
					"title": "Accessors",
					"children": [
						746
					]
				},
				{
					"title": "Methods",
					"children": [
						748,
						862,
						867,
						802,
						810,
						817,
						860,
						823,
						826,
						776,
						797,
						828,
						916,
						938,
						836,
						844,
						857,
						792,
						908,
						778,
						852,
						920,
						910,
						895,
						874,
						881,
						924,
						931,
						913,
						902,
						888,
						781,
						905,
						723,
						712,
						716,
						708,
						703,
						694,
						719
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/src/Database.ts",
					"line": 10,
					"character": 21,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Database.ts#L10"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 940,
			"name": "WideColumnarColumn",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 941,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 53,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L53"
						}
					],
					"signatures": [
						{
							"id": 942,
							"name": "new WideColumnarColumn",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 53,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L53"
								}
							],
							"parameters": [
								{
									"id": 943,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1324,
										"name": "WideColumnarColumnOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 940,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 952,
					"name": "#log",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L44"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 953,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 957,
									"name": "fullWriter",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/WideColumnar/src/Column.ts",
											"line": 48,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L48"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/globals.d.ts",
											"qualifiedName": "__global.NodeJS.WritableStream"
										},
										"name": "WritableStream",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.WritableStream"
									}
								},
								{
									"id": 954,
									"name": "iv",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/WideColumnar/src/Column.ts",
											"line": 45,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L45"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 958,
									"name": "ivFull",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/WideColumnar/src/Column.ts",
											"line": 49,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L49"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 956,
									"name": "path",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/WideColumnar/src/Column.ts",
											"line": 47,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L47"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 955,
									"name": "writer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/WideColumnar/src/Column.ts",
											"line": 46,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L46"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/globals.d.ts",
											"qualifiedName": "__global.NodeJS.WritableStream"
										},
										"name": "WritableStream",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.WritableStream"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										957,
										954,
										958,
										956,
										955
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 44,
									"character": 11,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L44"
								}
							]
						}
					}
				},
				{
					"id": 946,
					"name": "default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 949,
					"name": "files",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 41,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L41"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 951,
					"name": "memMap",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L43"
						}
					],
					"type": {
						"type": "reference",
						"target": 1284,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 944,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 36,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L36"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 948,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 945,
					"name": "primaryKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L37"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 959,
					"name": "referencer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 51,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L51"
						}
					],
					"type": {
						"type": "reference",
						"target": 1176,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 960,
					"name": "repairMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 52,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L52"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 950,
					"name": "table",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L42"
						}
					],
					"type": {
						"type": "reference",
						"target": 1087,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 947,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L39"
						}
					],
					"type": {
						"type": "reference",
						"target": 1369,
						"name": "ColumnType",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1059,
					"name": "#bulkDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 598,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L598"
						}
					],
					"signatures": [
						{
							"id": 1060,
							"name": "#bulkDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 598,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L598"
								}
							],
							"parameters": [
								{
									"id": 1061,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 983,
					"name": "#createNewLogCycle",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 246,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L246"
						}
					],
					"signatures": [
						{
							"id": 984,
							"name": "#createNewLogCycle",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 246,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L246"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1015,
					"name": "#delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 437,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L437"
						}
					],
					"signatures": [
						{
							"id": 1016,
							"name": "#delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 437,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L437"
								}
							],
							"parameters": [
								{
									"id": 1017,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1032,
					"name": "#fetchFile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 499,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L499"
						}
					],
					"signatures": [
						{
							"id": 1033,
							"name": "#fetchFile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 499,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L499"
								}
							],
							"parameters": [
								{
									"id": 1034,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1002,
					"name": "#fetchLine",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 374,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L374"
						}
					],
					"signatures": [
						{
							"id": 1003,
							"name": "#fetchLine",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 374,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L374"
								}
							],
							"parameters": [
								{
									"id": 1004,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1005,
									"name": "index",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1047,
					"name": "#findMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 576,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L576"
						}
					],
					"signatures": [
						{
							"id": 1048,
							"name": "#findMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 576,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L576"
								}
							],
							"parameters": [
								{
									"id": 1049,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1050,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Column.ts",
													"line": 577,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L577"
												}
											],
											"signatures": [
												{
													"id": 1051,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Column.ts",
															"line": 577,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L577"
														}
													],
													"parameters": [
														{
															"id": 1052,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1035,
					"name": "#findOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 526,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L526"
						}
					],
					"signatures": [
						{
							"id": 1036,
							"name": "#findOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 526,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L526"
								}
							],
							"parameters": [
								{
									"id": 1037,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1038,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Column.ts",
													"line": 527,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L527"
												}
											],
											"signatures": [
												{
													"id": 1039,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Column.ts",
															"line": 527,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L527"
														}
													],
													"parameters": [
														{
															"id": 1040,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1018,
					"name": "#flushFile",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 448,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L448"
						}
					],
					"signatures": [
						{
							"id": 1019,
							"name": "#flushFile",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 448,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L448"
								}
							],
							"parameters": [
								{
									"id": 1020,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1021,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 999,
					"name": "#get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 344,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L344"
						}
					],
					"signatures": [
						{
							"id": 1000,
							"name": "#get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 344,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L344"
								}
							],
							"parameters": [
								{
									"id": 1001,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 969,
					"name": "#getFiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 77,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L77"
						}
					],
					"signatures": [
						{
							"id": 970,
							"name": "#getFiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 77,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L77"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 979,
					"name": "#getLogInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 183,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L183"
						}
					],
					"signatures": [
						{
							"id": 980,
							"name": "#getLogInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 183,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L183"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1009,
					"name": "#has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 404,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L404"
						}
					],
					"signatures": [
						{
							"id": 1010,
							"name": "#has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 404,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L404"
								}
							],
							"parameters": [
								{
									"id": 1011,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 973,
					"name": "#initalize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 89,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L89"
						}
					],
					"signatures": [
						{
							"id": 974,
							"name": "#initalize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 89,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L89"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 977,
					"name": "#readIvfromFullLog",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 154,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L154"
						}
					],
					"signatures": [
						{
							"id": 978,
							"name": "#readIvfromFullLog",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 154,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L154"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 975,
					"name": "#readIvfromLog",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 125,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L125"
						}
					],
					"signatures": [
						{
							"id": 976,
							"name": "#readIvfromLog",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 125,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L125"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 981,
					"name": "#syncWithLogs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 199,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L199"
						}
					],
					"signatures": [
						{
							"id": 982,
							"name": "#syncWithLogs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 199,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L199"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 985,
					"name": "#wal",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 262,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L262"
						}
					],
					"signatures": [
						{
							"id": 986,
							"name": "#wal",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 262,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L262"
								}
							],
							"parameters": [
								{
									"id": 987,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1071,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 988,
									"name": "method",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 14,
										"name": "DatabaseMethod",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1062,
					"name": "all",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 632,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L632"
						}
					],
					"signatures": [
						{
							"id": 1063,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 632,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L632"
								}
							],
							"parameters": [
								{
									"id": 1064,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1065,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Column.ts",
													"line": 632,
													"character": 21,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L632"
												}
											],
											"signatures": [
												{
													"id": 1066,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Column.ts",
															"line": 632,
															"character": 21,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L632"
														}
													],
													"parameters": [
														{
															"id": 1067,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 1068,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1022,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 464,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L464"
						}
					],
					"signatures": [
						{
							"id": 1023,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 464,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L464"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1012,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 412,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L412"
						}
					],
					"signatures": [
						{
							"id": 1013,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 412,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L412"
								}
							],
							"parameters": [
								{
									"id": 1014,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1053,
					"name": "deleteMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 589,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L589"
						}
					],
					"signatures": [
						{
							"id": 1054,
							"name": "deleteMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 589,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L589"
								}
							],
							"parameters": [
								{
									"id": 1055,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1056,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Column.ts",
													"line": 589,
													"character": 28,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L589"
												}
											],
											"signatures": [
												{
													"id": 1057,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Column.ts",
															"line": 589,
															"character": 28,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L589"
														}
													],
													"parameters": [
														{
															"id": 1058,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1041,
					"name": "findMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 560,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L560"
						}
					],
					"signatures": [
						{
							"id": 1042,
							"name": "findMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 560,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L560"
								}
							],
							"parameters": [
								{
									"id": 1043,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1044,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Column.ts",
													"line": 561,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L561"
												}
											],
											"signatures": [
												{
													"id": 1045,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Column.ts",
															"line": 561,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L561"
														}
													],
													"parameters": [
														{
															"id": 1046,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1026,
					"name": "findOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 487,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L487"
						}
					],
					"signatures": [
						{
							"id": 1027,
							"name": "findOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 487,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L487"
								}
							],
							"parameters": [
								{
									"id": 1028,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1029,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Column.ts",
													"line": 488,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L488"
												}
											],
											"signatures": [
												{
													"id": 1030,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Column.ts",
															"line": 488,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L488"
														}
													],
													"parameters": [
														{
															"id": 1031,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 989,
					"name": "flush",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 290,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L290"
						}
					],
					"signatures": [
						{
							"id": 990,
							"name": "flush",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 290,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L290"
								}
							],
							"parameters": [
								{
									"id": 991,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1069,
					"name": "fullRepair",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 642,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L642"
						}
					],
					"signatures": [
						{
							"id": 1070,
							"name": "fullRepair",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 642,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L642"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 996,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 332,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L332"
						}
					],
					"signatures": [
						{
							"id": 997,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 332,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L332"
								}
							],
							"parameters": [
								{
									"id": 998,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1024,
					"name": "getHeap",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 483,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L483"
						}
					],
					"signatures": [
						{
							"id": 1025,
							"name": "getHeap",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 483,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L483"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@akarui/structures/src/Group/index.ts",
											"qualifiedName": "default"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1370,
												"name": "WideColumnarDataType",
												"package": "@akarui/aoi.db"
											},
											{
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										],
										"name": "default",
										"package": "@akarui/structures"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1006,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 391,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L391"
						}
					],
					"signatures": [
						{
							"id": 1007,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 391,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L391"
								}
							],
							"parameters": [
								{
									"id": 1008,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 971,
					"name": "initialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 83,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L83"
						}
					],
					"signatures": [
						{
							"id": 972,
							"name": "initialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 83,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L83"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 992,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 311,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L311"
						}
					],
					"signatures": [
						{
							"id": 993,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 311,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L311"
								}
							],
							"parameters": [
								{
									"id": 994,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 995,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 964,
					"name": "setFiles",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 69,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L69"
						}
					],
					"signatures": [
						{
							"id": 965,
							"name": "setFiles",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 69,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L69"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 961,
					"name": "setPath",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 65,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L65"
						}
					],
					"signatures": [
						{
							"id": 962,
							"name": "setPath",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 65,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L65"
								}
							],
							"parameters": [
								{
									"id": 963,
									"name": "path",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 966,
					"name": "setTable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Column.ts",
							"line": 73,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 967,
							"name": "setTable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Column.ts",
									"line": 73,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L73"
								}
							],
							"parameters": [
								{
									"id": 968,
									"name": "table",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1087,
										"name": "default",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						941
					]
				},
				{
					"title": "Properties",
					"children": [
						952,
						946,
						949,
						951,
						944,
						948,
						945,
						959,
						960,
						950,
						947
					]
				},
				{
					"title": "Methods",
					"children": [
						1059,
						983,
						1015,
						1032,
						1002,
						1047,
						1035,
						1018,
						999,
						969,
						979,
						1009,
						973,
						977,
						975,
						981,
						985,
						1062,
						1022,
						1012,
						1053,
						1041,
						1026,
						989,
						1069,
						996,
						1024,
						1006,
						971,
						992,
						964,
						961,
						966
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/src/Column.ts",
					"line": 35,
					"character": 21,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Column.ts#L35"
				}
			]
		},
		{
			"id": 1071,
			"name": "WideColumnarData",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1072,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Data.ts",
							"line": 7,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L7"
						}
					],
					"signatures": [
						{
							"id": 1073,
							"name": "new WideColumnarData",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Data.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L7"
								}
							],
							"parameters": [
								{
									"id": 1074,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1075,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1077,
													"name": "column",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Data.ts",
															"line": 9,
															"character": 8,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L9"
														}
													],
													"type": {
														"type": "reference",
														"target": 1336,
														"name": "WideColumnarDataInterface",
														"package": "@akarui/aoi.db"
													}
												},
												{
													"id": 1076,
													"name": "primary",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Data.ts",
															"line": 8,
															"character": 8,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L8"
														}
													],
													"type": {
														"type": "reference",
														"target": 1336,
														"name": "WideColumnarDataInterface",
														"package": "@akarui/aoi.db"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1077,
														1076
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Data.ts",
													"line": 7,
													"character": 22,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L7"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1071,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 1079,
					"name": "column",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Data.ts",
							"line": 6,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L6"
						}
					],
					"type": {
						"type": "reference",
						"target": 1336,
						"name": "WideColumnarDataInterface",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1078,
					"name": "primary",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Data.ts",
							"line": 5,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L5"
						}
					],
					"type": {
						"type": "reference",
						"target": 1336,
						"name": "WideColumnarDataInterface",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1082,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Data.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L18"
						}
					],
					"signatures": [
						{
							"id": 1083,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Data.ts",
									"line": 18,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L18"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1084,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1086,
											"name": "column",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Data.ts",
													"line": 21,
													"character": 12,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L21"
												}
											],
											"type": {
												"type": "reference",
												"target": 1336,
												"name": "WideColumnarDataInterface",
												"package": "@akarui/aoi.db"
											},
											"defaultValue": "..."
										},
										{
											"id": 1085,
											"name": "primary",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Data.ts",
													"line": 20,
													"character": 12,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L20"
												}
											],
											"type": {
												"type": "reference",
												"target": 1336,
												"name": "WideColumnarDataInterface",
												"package": "@akarui/aoi.db"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1086,
												1085
											]
										}
									],
									"sources": [
										{
											"fileName": "lib/WideColumnar/src/Data.ts",
											"line": 19,
											"character": 15,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L19"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1080,
					"name": "toString",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Data.ts",
							"line": 14,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 1081,
							"name": "toString",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Data.ts",
									"line": 14,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1072
					]
				},
				{
					"title": "Properties",
					"children": [
						1079,
						1078
					]
				},
				{
					"title": "Methods",
					"children": [
						1082,
						1080
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/src/Data.ts",
					"line": 4,
					"character": 21,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Data.ts#L4"
				}
			]
		},
		{
			"id": 1087,
			"name": "WideColumnarTable",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1088,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L22"
						}
					],
					"signatures": [
						{
							"id": 1089,
							"name": "new WideColumnarTable",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 22,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L22"
								}
							],
							"parameters": [
								{
									"id": 1090,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1357,
										"name": "WideColumnarTableOptions",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1087,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					]
				},
				{
					"id": 1093,
					"name": "#db",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L16"
						}
					],
					"type": {
						"type": "reference",
						"target": 692,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1094,
					"name": "#primary",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L17"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1095,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1096,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/WideColumnar/src/Table.ts",
											"line": 18,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L18"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1097,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/WideColumnar/src/Table.ts",
											"line": 19,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L19"
										}
									],
									"type": {
										"type": "reference",
										"target": 1369,
										"name": "ColumnType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1096,
										1097
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 17,
									"character": 15,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L17"
								}
							]
						}
					}
				},
				{
					"id": 1092,
					"name": "columns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L15"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 940,
							"name": "default",
							"package": "@akarui/aoi.db"
						}
					}
				},
				{
					"id": 1091,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 14,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1098,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L21"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1102,
					"name": "db",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 51,
							"character": 8,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L51"
						}
					],
					"getSignature": {
						"id": 1103,
						"name": "db",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/WideColumnar/src/Table.ts",
								"line": 51,
								"character": 4,
								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L51"
							}
						],
						"type": {
							"type": "reference",
							"target": 692,
							"name": "default",
							"package": "@akarui/aoi.db"
						}
					}
				},
				{
					"id": 1106,
					"name": "primary",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 73,
							"character": 8,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L73"
						}
					],
					"getSignature": {
						"id": 1107,
						"name": "primary",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/WideColumnar/src/Table.ts",
								"line": 73,
								"character": 4,
								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L73"
							}
						],
						"type": {
							"type": "reflection",
							"declaration": {
								"id": 1108,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 1109,
										"name": "name",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/WideColumnar/src/Table.ts",
												"line": 18,
												"character": 8,
												"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L18"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 1110,
										"name": "type",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/WideColumnar/src/Table.ts",
												"line": 19,
												"character": 8,
												"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L19"
											}
										],
										"type": {
											"type": "reference",
											"target": 1369,
											"name": "ColumnType",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											1109,
											1110
										]
									}
								],
								"sources": [
									{
										"fileName": "lib/WideColumnar/src/Table.ts",
										"line": 17,
										"character": 15,
										"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L17"
									}
								]
							}
						}
					}
				},
				{
					"id": 1099,
					"name": "#parseColumns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L30"
						}
					],
					"signatures": [
						{
							"id": 1100,
							"name": "#parseColumns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 30,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 1101,
									"name": "columns",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 940,
													"name": "default",
													"package": "@akarui/aoi.db"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1324,
													"name": "WideColumnarColumnOptions",
													"package": "@akarui/aoi.db"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1129,
					"name": "all",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 110,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L110"
						}
					],
					"signatures": [
						{
							"id": 1130,
							"name": "all",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 110,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L110"
								}
							],
							"parameters": [
								{
									"id": 1131,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1132,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1133,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Table.ts",
													"line": 112,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L112"
												}
											],
											"signatures": [
												{
													"id": 1134,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Table.ts",
															"line": 112,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L112"
														}
													],
													"parameters": [
														{
															"id": 1135,
															"name": "row",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 1136,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "Infinity"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1137,
					"name": "allColumns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 121,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L121"
						}
					],
					"signatures": [
						{
							"id": 1138,
							"name": "allColumns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 121,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L121"
								}
							],
							"parameters": [
								{
									"id": 1139,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1140,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Table.ts",
													"line": 122,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L122"
												}
											],
											"signatures": [
												{
													"id": 1141,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Table.ts",
															"line": 122,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L122"
														}
													],
													"parameters": [
														{
															"id": 1142,
															"name": "row",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								},
								{
									"id": 1143,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "Infinity"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1169,
					"name": "clear",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 179,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L179"
						}
					],
					"signatures": [
						{
							"id": 1170,
							"name": "clear",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 179,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L179"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1171,
					"name": "clearColumn",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 185,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L185"
						}
					],
					"signatures": [
						{
							"id": 1172,
							"name": "clearColumn",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 185,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L185"
								}
							],
							"parameters": [
								{
									"id": 1173,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1104,
					"name": "connect",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 55,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 1105,
							"name": "connect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 55,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L55"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1125,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 102,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L102"
						}
					],
					"signatures": [
						{
							"id": 1126,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 102,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L102"
								}
							],
							"parameters": [
								{
									"id": 1127,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1128,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1158,
					"name": "deleteMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 158,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L158"
						}
					],
					"signatures": [
						{
							"id": 1159,
							"name": "deleteMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 158,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L158"
								}
							],
							"parameters": [
								{
									"id": 1160,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1161,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1162,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Table.ts",
													"line": 160,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L160"
												}
											],
											"signatures": [
												{
													"id": 1163,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Table.ts",
															"line": 160,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L160"
														}
													],
													"parameters": [
														{
															"id": 1164,
															"name": "row",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1144,
					"name": "findMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 134,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L134"
						}
					],
					"signatures": [
						{
							"id": 1145,
							"name": "findMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 134,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L134"
								}
							],
							"parameters": [
								{
									"id": 1146,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1147,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1148,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Table.ts",
													"line": 136,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L136"
												}
											],
											"signatures": [
												{
													"id": 1149,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Table.ts",
															"line": 136,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L136"
														}
													],
													"parameters": [
														{
															"id": 1150,
															"name": "row",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1071,
											"name": "default",
											"package": "@akarui/aoi.db"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1151,
					"name": "findOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 146,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L146"
						}
					],
					"signatures": [
						{
							"id": 1152,
							"name": "findOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 146,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L146"
								}
							],
							"parameters": [
								{
									"id": 1153,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1154,
									"name": "query",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1155,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Table.ts",
													"line": 148,
													"character": 15,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L148"
												}
											],
											"signatures": [
												{
													"id": 1156,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Table.ts",
															"line": 148,
															"character": 15,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L148"
														}
													],
													"parameters": [
														{
															"id": 1157,
															"name": "row",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 1071,
																"name": "default",
																"package": "@akarui/aoi.db"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1174,
					"name": "fullRepair",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 194,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L194"
						}
					],
					"signatures": [
						{
							"id": 1175,
							"name": "fullRepair",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 194,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L194"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1121,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 94,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L94"
						}
					],
					"signatures": [
						{
							"id": 1122,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 94,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L94"
								}
							],
							"parameters": [
								{
									"id": 1123,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1124,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1165,
					"name": "has",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 170,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L170"
						}
					],
					"signatures": [
						{
							"id": 1166,
							"name": "has",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 170,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L170"
								}
							],
							"parameters": [
								{
									"id": 1167,
									"name": "columnName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1168,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "WideColumnarDataType",
										"package": "@akarui/aoi.db"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1111,
					"name": "set",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/src/Table.ts",
							"line": 77,
							"character": 10,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L77"
						}
					],
					"signatures": [
						{
							"id": 1112,
							"name": "set",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/src/Table.ts",
									"line": 77,
									"character": 4,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L77"
								}
							],
							"parameters": [
								{
									"id": 1113,
									"name": "column",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1114,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1115,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Table.ts",
															"line": 79,
															"character": 12,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L79"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1116,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Table.ts",
															"line": 80,
															"character": 12,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L80"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1115,
														1116
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Table.ts",
													"line": 78,
													"character": 16,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L78"
												}
											]
										}
									}
								},
								{
									"id": 1117,
									"name": "primary",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1118,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1119,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Table.ts",
															"line": 83,
															"character": 12,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L83"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1120,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "lib/WideColumnar/src/Table.ts",
															"line": 84,
															"character": 12,
															"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L84"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1119,
														1120
													]
												}
											],
											"sources": [
												{
													"fileName": "lib/WideColumnar/src/Table.ts",
													"line": 82,
													"character": 17,
													"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L82"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1088
					]
				},
				{
					"title": "Properties",
					"children": [
						1093,
						1094,
						1092,
						1091,
						1098
					]
				},
				{
					"title": "Accessors",
					"children": [
						1102,
						1106
					]
				},
				{
					"title": "Methods",
					"children": [
						1099,
						1129,
						1137,
						1169,
						1171,
						1104,
						1125,
						1158,
						1144,
						1151,
						1174,
						1121,
						1165,
						1111
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/src/Table.ts",
					"line": 13,
					"character": 21,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/src/Table.ts#L13"
				}
			]
		},
		{
			"id": 628,
			"name": "CacherOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 629,
					"name": "cache",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 68,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L68"
						}
					],
					"type": {
						"type": "reference",
						"target": 7,
						"name": "CacheType",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 630,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 69,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L69"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 632,
					"name": "sortFunction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 71,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L71"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 633,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/typings/interface.ts",
									"line": 71,
									"character": 19,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L71"
								}
							],
							"signatures": [
								{
									"id": 634,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/typings/interface.ts",
											"line": 71,
											"character": 19,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L71"
										}
									],
									"parameters": [
										{
											"id": 635,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 636,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				},
				{
					"id": 631,
					"name": "sorted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 70,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L70"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						629,
						630,
						632,
						631
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 67,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L67"
				}
			]
		},
		{
			"id": 1,
			"name": "Hash",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/interface.ts",
							"line": 3,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/interface.ts#L3"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2,
					"name": "iv",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/typings/interface.ts",
							"line": 2,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/interface.ts#L2"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/typings/interface.ts",
					"line": 1,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/interface.ts#L1"
				}
			]
		},
		{
			"id": 1942,
			"name": "ISocket",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 2380,
					"name": "allowHalfOpen",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": " then the stream will automatically end the writable side when the\nreadable side ends. Set initially by the "
							},
							{
								"kind": "code",
								"text": "`allowHalfOpen`"
							},
							{
								"kind": "text",
								"text": " constructor option,\nwhich defaults to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\n\nThis can be changed manually to change the half-open behavior of an existing"
							},
							{
								"kind": "code",
								"text": "`Duplex`"
							},
							{
								"kind": "text",
								"text": " stream instance, but must be changed before the "
							},
							{
								"kind": "code",
								"text": "`'end'`"
							},
							{
								"kind": "text",
								"text": " event is\nemitted."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.9.4"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1068,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.allowHalfOpen"
					}
				},
				{
					"id": 2015,
					"name": "autoSelectFamilyAttemptedAddresses",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This property is only present if the family autoselection algorithm is enabled in "
							},
							{
								"kind": "code",
								"text": "`socket.connect(options)`"
							},
							{
								"kind": "text",
								"text": "\nand it is an array of the addresses that have been attempted.\n\nEach address is a string in the form of "
							},
							{
								"kind": "code",
								"text": "`$IP:$PORT`"
							},
							{
								"kind": "text",
								"text": ".\nIf the connection was successful, then the last address is the one that the socket is currently connected to."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v19.4.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 251,
							"character": 17
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.autoSelectFamilyAttemptedAddresses"
					}
				},
				{
					"id": 2016,
					"name": "bufferSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This property shows the number of characters buffered for writing. The buffer\nmay contain strings whose length after encoding is not yet known. So this number\nis only an approximation of the number of bytes in the buffer.\n\n"
							},
							{
								"kind": "code",
								"text": "`net.Socket`"
							},
							{
								"kind": "text",
								"text": " has the property that "
							},
							{
								"kind": "code",
								"text": "`socket.write()`"
							},
							{
								"kind": "text",
								"text": " always works. This is to\nhelp users get up and running quickly. The computer cannot always keep up\nwith the amount of data that is written to a socket. The network connection\nsimply might be too slow. Node.js will internally queue up the data written to a\nsocket and send it out over the wire when it is possible.\n\nThe consequence of this internal buffering is that memory may grow.\nUsers who experience large or growing "
							},
							{
								"kind": "code",
								"text": "`bufferSize`"
							},
							{
								"kind": "text",
								"text": " should attempt to\n\"throttle\" the data flows in their program with "
							},
							{
								"kind": "code",
								"text": "`socket.pause()`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`socket.resume()`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.3.8"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Since v14.6.0 - Use "
									},
									{
										"kind": "code",
										"text": "`writableLength`"
									},
									{
										"kind": "text",
										"text": " instead."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 269,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.bufferSize"
					}
				},
				{
					"id": 2017,
					"name": "bytesRead",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of received bytes."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.5.3"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 274,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.bytesRead"
					}
				},
				{
					"id": 2018,
					"name": "bytesWritten",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of bytes sent."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.5.3"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 279,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.bytesWritten"
					}
				},
				{
					"id": 2378,
					"name": "closed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1057,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.closed"
					}
				},
				{
					"id": 2019,
					"name": "connecting",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ","
							},
							{
								"kind": "code",
								"text": "`socket.connect(options[, connectListener])`"
							},
							{
								"kind": "text",
								"text": " was\ncalled and has not yet finished. It will stay "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " until the socket becomes\nconnected, then it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": " and the "
							},
							{
								"kind": "code",
								"text": "`'connect'`"
							},
							{
								"kind": "text",
								"text": " event is emitted. Note\nthat the "
							},
							{
								"kind": "code",
								"text": "`socket.connect(options[, connectListener])`"
							},
							{
								"kind": "text",
								"text": " callback is a listener for the "
							},
							{
								"kind": "code",
								"text": "`'connect'`"
							},
							{
								"kind": "text",
								"text": " event."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v6.1.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 287,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.connecting"
					}
				},
				{
					"id": 2021,
					"name": "destroyed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "See "
							},
							{
								"kind": "code",
								"text": "`writable.destroyed`"
							},
							{
								"kind": "text",
								"text": " for further details."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 297,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.destroyed"
					}
				},
				{
					"id": 2379,
					"name": "errored",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1058,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.errored"
					}
				},
				{
					"id": 2022,
					"name": "localAddress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The string representation of the local IP address the remote client is\nconnecting on. For example, in a server listening on "
							},
							{
								"kind": "code",
								"text": "`'0.0.0.0'`"
							},
							{
								"kind": "text",
								"text": ", if a client\nconnects on "
							},
							{
								"kind": "code",
								"text": "`'192.168.1.1'`"
							},
							{
								"kind": "text",
								"text": ", the value of "
							},
							{
								"kind": "code",
								"text": "`socket.localAddress`"
							},
							{
								"kind": "text",
								"text": " would be"
							},
							{
								"kind": "code",
								"text": "`'192.168.1.1'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.9.6"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 304,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.localAddress"
					}
				},
				{
					"id": 2024,
					"name": "localFamily",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The string representation of the local IP family. "
							},
							{
								"kind": "code",
								"text": "`'IPv4'`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`'IPv6'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v18.8.0, v16.18.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 314,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.localFamily"
					}
				},
				{
					"id": 2023,
					"name": "localPort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numeric representation of the local port. For example, "
							},
							{
								"kind": "code",
								"text": "`80`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`21`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.9.6"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 309,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.localPort"
					}
				},
				{
					"id": 2020,
					"name": "pending",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " if the socket is not connected yet, either because "
							},
							{
								"kind": "code",
								"text": "`.connect()`"
							},
							{
								"kind": "text",
								"text": "has not yet been called or because it is still in the process of connecting\n(see "
							},
							{
								"kind": "code",
								"text": "`socket.connecting`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v11.2.0, v10.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 293,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.pending"
					}
				},
				{
					"id": 2486,
					"name": "readable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " if it is safe to call "
							},
							{
								"kind": "code",
								"text": "`readable.read()`"
							},
							{
								"kind": "text",
								"text": ", which means\nthe stream has not been destroyed or emitted "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`'end'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v11.4.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 70,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.readable"
					}
				},
				{
					"id": 2485,
					"name": "readableAborted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns whether the stream was destroyed or errored before emitting "
							},
							{
								"kind": "code",
								"text": "`'end'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v16.8.0"
									}
								]
							}
						],
						"modifierTags": [
							"@experimental"
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 64,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.readableAborted"
					}
				},
				{
					"id": 2487,
					"name": "readableDidRead",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns whether "
							},
							{
								"kind": "code",
								"text": "`'data'`"
							},
							{
								"kind": "text",
								"text": " has been emitted."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v16.7.0, v14.18.0"
									}
								]
							}
						],
						"modifierTags": [
							"@experimental"
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 76,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.readableDidRead"
					}
				},
				{
					"id": 2488,
					"name": "readableEncoding",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Getter for the property "
							},
							{
								"kind": "code",
								"text": "`encoding`"
							},
							{
								"kind": "text",
								"text": " of a given "
							},
							{
								"kind": "code",
								"text": "`Readable`"
							},
							{
								"kind": "text",
								"text": " stream. The "
							},
							{
								"kind": "code",
								"text": "`encoding`"
							},
							{
								"kind": "text",
								"text": "property can be set using the "
							},
							{
								"kind": "code",
								"text": "`readable.setEncoding()`"
							},
							{
								"kind": "text",
								"text": " method."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v12.7.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 81,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/buffer.d.ts",
									"qualifiedName": "__global.BufferEncoding"
								},
								"name": "BufferEncoding",
								"package": "@types/node",
								"qualifiedName": "__global.BufferEncoding"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.readableEncoding"
					}
				},
				{
					"id": 2489,
					"name": "readableEnded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Becomes "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " when "
							},
							{
								"kind": "code",
								"text": "`'end'`"
							},
							{
								"kind": "text",
								"text": " event is emitted."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v12.9.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 86,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.readableEnded"
					}
				},
				{
					"id": 2490,
					"name": "readableFlowing",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This property reflects the current state of a "
							},
							{
								"kind": "code",
								"text": "`Readable`"
							},
							{
								"kind": "text",
								"text": " stream as described\nin the "
							},
							{
								"kind": "code",
								"text": "`Three states`"
							},
							{
								"kind": "text",
								"text": " section."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v9.4.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 92,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.readableFlowing"
					}
				},
				{
					"id": 2491,
					"name": "readableHighWaterMark",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Returns the value of "
							},
							{
								"kind": "code",
								"text": "`highWaterMark`"
							},
							{
								"kind": "text",
								"text": " passed when creating this "
							},
							{
								"kind": "code",
								"text": "`Readable`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v9.3.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 97,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.readableHighWaterMark"
					}
				},
				{
					"id": 2492,
					"name": "readableLength",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This property contains the number of bytes (or objects) in the queue\nready to be read. The value provides introspection data regarding\nthe status of the "
							},
							{
								"kind": "code",
								"text": "`highWaterMark`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v9.4.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 104,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.readableLength"
					}
				},
				{
					"id": 2493,
					"name": "readableObjectMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Getter for the property "
							},
							{
								"kind": "code",
								"text": "`objectMode`"
							},
							{
								"kind": "text",
								"text": " of a given "
							},
							{
								"kind": "code",
								"text": "`Readable`"
							},
							{
								"kind": "text",
								"text": " stream."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v12.3.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 109,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.readableObjectMode"
					}
				},
				{
					"id": 2025,
					"name": "readyState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This property represents the state of the connection as a string.\n\n* If the stream is connecting "
							},
							{
								"kind": "code",
								"text": "`socket.readyState`"
							},
							{
								"kind": "text",
								"text": " is "
							},
							{
								"kind": "code",
								"text": "`opening`"
							},
							{
								"kind": "text",
								"text": ".\n* If the stream is readable and writable, it is "
							},
							{
								"kind": "code",
								"text": "`open`"
							},
							{
								"kind": "text",
								"text": ".\n* If the stream is readable and not writable, it is "
							},
							{
								"kind": "code",
								"text": "`readOnly`"
							},
							{
								"kind": "text",
								"text": ".\n* If the stream is not readable and writable, it is "
							},
							{
								"kind": "code",
								"text": "`writeOnly`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.5.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 324,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@types/node/net.d.ts",
							"qualifiedName": "\"net\".SocketReadyState"
						},
						"name": "SocketReadyState",
						"package": "@types/node",
						"qualifiedName": "\"net\".SocketReadyState"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.readyState"
					}
				},
				{
					"id": 2026,
					"name": "remoteAddress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The string representation of the remote IP address. For example,"
							},
							{
								"kind": "code",
								"text": "`'74.125.127.100'`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`'2001:4860:a005::68'`"
							},
							{
								"kind": "text",
								"text": ". Value may be "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": " if\nthe socket is destroyed (for example, if the client disconnected)."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.5.10"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 330,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.remoteAddress"
					}
				},
				{
					"id": 2027,
					"name": "remoteFamily",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The string representation of the remote IP family. "
							},
							{
								"kind": "code",
								"text": "`'IPv4'`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`'IPv6'`"
							},
							{
								"kind": "text",
								"text": ". Value may be "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": " if\nthe socket is destroyed (for example, if the client disconnected)."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.11.14"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 336,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.remoteFamily"
					}
				},
				{
					"id": 2028,
					"name": "remotePort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numeric representation of the remote port. For example, "
							},
							{
								"kind": "code",
								"text": "`80`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`21`"
							},
							{
								"kind": "text",
								"text": ". Value may be "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": " if\nthe socket is destroyed (for example, if the client disconnected)."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.5.10"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 342,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.remotePort"
					}
				},
				{
					"id": 2029,
					"name": "timeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The socket timeout in milliseconds as set by "
							},
							{
								"kind": "code",
								"text": "`socket.setTimeout()`"
							},
							{
								"kind": "text",
								"text": ".\nIt is "
							},
							{
								"kind": "code",
								"text": "`undefined`"
							},
							{
								"kind": "text",
								"text": " if a timeout has not been set."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v10.7.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 348,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.timeout"
					}
				},
				{
					"id": 1943,
					"name": "userData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 62,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L62"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1944,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1947,
									"name": "permissions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/Remote/typings/interface.ts",
											"line": 65,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L65"
										}
									],
									"type": {
										"type": "reference",
										"target": 2699,
										"name": "Permissions",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1946,
									"name": "session",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/Remote/typings/interface.ts",
											"line": 64,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L64"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1945,
									"name": "username",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/Remote/typings/interface.ts",
											"line": 63,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L63"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1947,
										1946,
										1945
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/Remote/typings/interface.ts",
									"line": 62,
									"character": 14,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L62"
								}
							]
						}
					}
				},
				{
					"id": 2370,
					"name": "writable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1049,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.writable"
					}
				},
				{
					"id": 2376,
					"name": "writableCorked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1055,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.writableCorked"
					}
				},
				{
					"id": 2371,
					"name": "writableEnded",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1050,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.writableEnded"
					}
				},
				{
					"id": 2372,
					"name": "writableFinished",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1051,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.writableFinished"
					}
				},
				{
					"id": 2373,
					"name": "writableHighWaterMark",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1052,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.writableHighWaterMark"
					}
				},
				{
					"id": 2374,
					"name": "writableLength",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1053,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.writableLength"
					}
				},
				{
					"id": 2377,
					"name": "writableNeedDrain",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1056,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.writableNeedDrain"
					}
				},
				{
					"id": 2375,
					"name": "writableObjectMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1054,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.writableObjectMode"
					}
				},
				{
					"id": 2631,
					"name": "[asyncDispose]",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 651,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2632,
							"name": "[asyncDispose]",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calls "
									},
									{
										"kind": "code",
										"text": "`readable.destroy()`"
									},
									{
										"kind": "text",
										"text": " with an "
									},
									{
										"kind": "code",
										"text": "`AbortError`"
									},
									{
										"kind": "text",
										"text": " and returns a promise that fulfills when the stream is finished."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v20.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 651,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.[asyncDispose]"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.[asyncDispose]"
					}
				},
				{
					"id": 2629,
					"name": "[asyncIterator]",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 646,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2630,
							"name": "[asyncIterator]",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 646,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
									"qualifiedName": "AsyncIterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.[asyncIterator]"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.[asyncIterator]"
					}
				},
				{
					"id": 2647,
					"name": "[captureRejectionSymbol]",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 112,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2648,
							"name": "[captureRejectionSymbol]",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 112,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2649,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								},
								{
									"id": 2650,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2651,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.[captureRejectionSymbol]"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.[captureRejectionSymbol]"
					}
				},
				{
					"id": 2494,
					"name": "_construct",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 126,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2495,
							"name": "_construct",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 126,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2496,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2497,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 126,
													"character": 30
												}
											],
											"signatures": [
												{
													"id": 2498,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 126,
															"character": 30
														}
													],
													"parameters": [
														{
															"id": 2499,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Error"
																		},
																		"name": "Error",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket._construct"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket._construct"
					}
				},
				{
					"id": 2399,
					"name": "_destroy",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1111,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 2400,
							"name": "_destroy",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1111,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2401,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 2402,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2403,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1111,
													"character": 52
												}
											],
											"signatures": [
												{
													"id": 2404,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1111,
															"character": 52
														}
													],
													"parameters": [
														{
															"id": 2405,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Error"
																		},
																		"name": "Error",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket._destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket._destroy"
					}
				},
				{
					"id": 2406,
					"name": "_final",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1112,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 2407,
							"name": "_final",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1112,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2408,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2409,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1112,
													"character": 29
												}
											],
											"signatures": [
												{
													"id": 2410,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1112,
															"character": 29
														}
													],
													"parameters": [
														{
															"id": 2411,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Error"
																		},
																		"name": "Error",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket._final"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket._final"
					}
				},
				{
					"id": 2500,
					"name": "_read",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 127,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2501,
							"name": "_read",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 127,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2502,
									"name": "size",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket._read"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket._read"
					}
				},
				{
					"id": 2381,
					"name": "_write",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1103,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 2382,
							"name": "_write",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1103,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2383,
									"name": "chunk",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2384,
									"name": "encoding",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.BufferEncoding"
										},
										"name": "BufferEncoding",
										"package": "@types/node",
										"qualifiedName": "__global.BufferEncoding"
									}
								},
								{
									"id": 2385,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2386,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1103,
													"character": 67
												}
											],
											"signatures": [
												{
													"id": 2387,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1103,
															"character": 67
														}
													],
													"parameters": [
														{
															"id": 2388,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Error"
																		},
																		"name": "Error",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket._write"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket._write"
					}
				},
				{
					"id": 2389,
					"name": "_writev",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1104,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 2390,
							"name": "_writev",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1104,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2391,
									"name": "chunks",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 2392,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {
													"isExternal": true
												},
												"children": [
													{
														"id": 2393,
														"name": "chunk",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isExternal": true
														},
														"sources": [
															{
																"fileName": "node_modules/@types/node/stream.d.ts",
																"line": 1106,
																"character": 20
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													{
														"id": 2394,
														"name": "encoding",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isExternal": true
														},
														"sources": [
															{
																"fileName": "node_modules/@types/node/stream.d.ts",
																"line": 1107,
																"character": 20
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "node_modules/@types/node/buffer.d.ts",
																"qualifiedName": "__global.BufferEncoding"
															},
															"name": "BufferEncoding",
															"package": "@types/node",
															"qualifiedName": "__global.BufferEncoding"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															2393,
															2394
														]
													}
												],
												"sources": [
													{
														"fileName": "node_modules/@types/node/stream.d.ts",
														"line": 1105,
														"character": 30
													}
												]
											}
										}
									}
								},
								{
									"id": 2395,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2396,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1109,
													"character": 26
												}
											],
											"signatures": [
												{
													"id": 2397,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1109,
															"character": 26
														}
													],
													"parameters": [
														{
															"id": 2398,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Error"
																		},
																		"name": "Error",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket._writev"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket._writev"
					}
				},
				{
					"id": 2046,
					"name": "addListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 374,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 375,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 376,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 377,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 378,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 379,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 380,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 381,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 385,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 386,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2047,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "events.EventEmitter\n  1. close\n  2. connect\n  3. data\n  4. drain\n  5. end\n  6. error\n  7. lookup\n  8. ready\n  9. timeout"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 374,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2048,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2049,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2050,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 374,
													"character": 45
												}
											],
											"signatures": [
												{
													"id": 2051,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 374,
															"character": 45
														}
													],
													"parameters": [
														{
															"id": 2052,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.addListener"
							}
						},
						{
							"id": 2053,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 375,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2054,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "close"
									}
								},
								{
									"id": 2055,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2056,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 375,
													"character": 46
												}
											],
											"signatures": [
												{
													"id": 2057,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 375,
															"character": 46
														}
													],
													"parameters": [
														{
															"id": 2058,
															"name": "hadError",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.addListener"
							}
						},
						{
							"id": 2059,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 376,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2060,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "connect"
									}
								},
								{
									"id": 2061,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2062,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 376,
													"character": 48
												}
											],
											"signatures": [
												{
													"id": 2063,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 376,
															"character": 48
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.addListener"
							}
						},
						{
							"id": 2064,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 377,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2065,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "data"
									}
								},
								{
									"id": 2066,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2067,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 377,
													"character": 45
												}
											],
											"signatures": [
												{
													"id": 2068,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 377,
															"character": 45
														}
													],
													"parameters": [
														{
															"id": 2069,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/@types/node/buffer.d.ts",
																	"qualifiedName": "__global.Buffer"
																},
																"name": "Buffer",
																"package": "@types/node",
																"qualifiedName": "__global.Buffer"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.addListener"
							}
						},
						{
							"id": 2070,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 378,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2071,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "drain"
									}
								},
								{
									"id": 2072,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2073,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 378,
													"character": 46
												}
											],
											"signatures": [
												{
													"id": 2074,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 378,
															"character": 46
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.addListener"
							}
						},
						{
							"id": 2075,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 379,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2076,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "end"
									}
								},
								{
									"id": 2077,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2078,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 379,
													"character": 44
												}
											],
											"signatures": [
												{
													"id": 2079,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 379,
															"character": 44
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.addListener"
							}
						},
						{
							"id": 2080,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 380,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2081,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "error"
									}
								},
								{
									"id": 2082,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2083,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 380,
													"character": 46
												}
											],
											"signatures": [
												{
													"id": 2084,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 380,
															"character": 46
														}
													],
													"parameters": [
														{
															"id": 2085,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.addListener"
							}
						},
						{
							"id": 2086,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 381,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2087,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "lookup"
									}
								},
								{
									"id": 2088,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2089,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 383,
													"character": 22
												}
											],
											"signatures": [
												{
													"id": 2090,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 383,
															"character": 22
														}
													],
													"parameters": [
														{
															"id": 2091,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														},
														{
															"id": 2092,
															"name": "address",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2093,
															"name": "family",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 2094,
															"name": "host",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.addListener"
							}
						},
						{
							"id": 2095,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 385,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2096,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "ready"
									}
								},
								{
									"id": 2097,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2098,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 385,
													"character": 46
												}
											],
											"signatures": [
												{
													"id": 2099,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 385,
															"character": 46
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.addListener"
							}
						},
						{
							"id": 2100,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 386,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2101,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "timeout"
									}
								},
								{
									"id": 2102,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2103,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 386,
													"character": 48
												}
											],
											"signatures": [
												{
													"id": 2104,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 386,
															"character": 48
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.addListener"
					}
				},
				{
					"id": 2008,
					"name": "address",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 228,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2009,
							"name": "address",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the bound "
									},
									{
										"kind": "code",
										"text": "`address`"
									},
									{
										"kind": "text",
										"text": ", the address "
									},
									{
										"kind": "code",
										"text": "`family`"
									},
									{
										"kind": "text",
										"text": " name and "
									},
									{
										"kind": "code",
										"text": "`port`"
									},
									{
										"kind": "text",
										"text": " of the\nsocket as reported by the operating system:"
									},
									{
										"kind": "code",
										"text": "`{ port: 12346, family: 'IPv4', address: '127.0.0.1' }`"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.90"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 228,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 2010,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											}
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/net.d.ts",
											"qualifiedName": "\"net\".AddressInfo"
										},
										"name": "AddressInfo",
										"package": "@types/node",
										"qualifiedName": "\"net\".AddressInfo"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.address"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.address"
					}
				},
				{
					"id": 2602,
					"name": "asIndexedPairs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 541,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2603,
							"name": "asIndexedPairs",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method returns a new stream with chunks of the underlying stream paired with a counter\nin the form "
									},
									{
										"kind": "code",
										"text": "`[index, chunk]`"
									},
									{
										"kind": "text",
										"text": ". The first index value is "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": " and it increases by 1 for each chunk produced."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v17.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a stream of indexed pairs."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 541,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2604,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/stream.d.ts",
													"qualifiedName": "ArrayOptions"
												},
												"name": "ArrayOptions",
												"package": "@types/node"
											},
											{
												"type": "literal",
												"value": "signal"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/stream.d.ts",
									"qualifiedName": "internal.Readable"
								},
								"name": "Readable",
								"package": "@types/node",
								"qualifiedName": "internal.Readable"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.asIndexedPairs"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.asIndexedPairs"
					}
				},
				{
					"id": 2640,
					"name": "compose",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 35,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2641,
							"name": "compose",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 35,
									"character": 8
								}
							],
							"typeParameter": [
								{
									"id": 2642,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/globals.d.ts",
											"qualifiedName": "__global.NodeJS.ReadableStream"
										},
										"name": "ReadableStream",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.ReadableStream"
									}
								}
							],
							"parameters": [
								{
									"id": 2643,
									"name": "stream",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/stream.d.ts",
													"qualifiedName": "ComposeFnParam"
												},
												"name": "ComposeFnParam",
												"package": "@types/node"
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
													"qualifiedName": "Iterable"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "Iterable",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
													"qualifiedName": "AsyncIterable"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												],
												"name": "AsyncIterable",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 2644,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2645,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 2646,
													"name": "signal",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 37,
															"character": 24
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "AbortSignal"
														},
														"name": "AbortSignal",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2646
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 37,
													"character": 22
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.compose"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.compose"
					}
				},
				{
					"id": 1964,
					"name": "connect",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 136,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 137,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 138,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 139,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 1965,
							"name": "connect",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initiate a connection on a given socket.\n\nPossible signatures:\n\n* "
									},
									{
										"kind": "code",
										"text": "`socket.connect(options[, connectListener])`"
									},
									{
										"kind": "text",
										"text": "\n* "
									},
									{
										"kind": "code",
										"text": "`socket.connect(path[, connectListener])`"
									},
									{
										"kind": "text",
										"text": " for "
									},
									{
										"kind": "code",
										"text": "`IPC`"
									},
									{
										"kind": "text",
										"text": " connections.\n* "
									},
									{
										"kind": "code",
										"text": "`socket.connect(port[, host][, connectListener])`"
									},
									{
										"kind": "text",
										"text": " for TCP connections.\n* Returns: "
									},
									{
										"kind": "code",
										"text": "`net.Socket`"
									},
									{
										"kind": "text",
										"text": " The socket itself.\n\nThis function is asynchronous. When the connection is established, the "
									},
									{
										"kind": "code",
										"text": "`'connect'`"
									},
									{
										"kind": "text",
										"text": " event will be emitted. If there is a problem connecting,\ninstead of a "
									},
									{
										"kind": "code",
										"text": "`'connect'`"
									},
									{
										"kind": "text",
										"text": " event, an "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event will be emitted with\nthe error passed to the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " listener.\nThe last parameter "
									},
									{
										"kind": "code",
										"text": "`connectListener`"
									},
									{
										"kind": "text",
										"text": ", if supplied, will be added as a listener\nfor the "
									},
									{
										"kind": "code",
										"text": "`'connect'`"
									},
									{
										"kind": "text",
										"text": " event **once**.\n\nThis function should only be used for reconnecting a socket after"
									},
									{
										"kind": "code",
										"text": "`'close'`"
									},
									{
										"kind": "text",
										"text": " has been emitted or otherwise it may lead to undefined\nbehavior."
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 136,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1966,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/net.d.ts",
											"qualifiedName": "\"net\".SocketConnectOpts"
										},
										"name": "SocketConnectOpts",
										"package": "@types/node",
										"qualifiedName": "\"net\".SocketConnectOpts"
									}
								},
								{
									"id": 1967,
									"name": "connectionListener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1968,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 136,
													"character": 65
												}
											],
											"signatures": [
												{
													"id": 1969,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 136,
															"character": 65
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.connect"
							}
						},
						{
							"id": 1970,
							"name": "connect",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 137,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1971,
									"name": "port",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1972,
									"name": "host",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1973,
									"name": "connectionListener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1974,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 137,
													"character": 65
												}
											],
											"signatures": [
												{
													"id": 1975,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 137,
															"character": 65
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.connect"
							}
						},
						{
							"id": 1976,
							"name": "connect",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 138,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1977,
									"name": "port",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1978,
									"name": "connectionListener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1979,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 138,
													"character": 51
												}
											],
											"signatures": [
												{
													"id": 1980,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 138,
															"character": 51
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.connect"
							}
						},
						{
							"id": 1981,
							"name": "connect",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 139,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1982,
									"name": "path",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1983,
									"name": "connectionListener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1984,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 139,
													"character": 51
												}
											],
											"signatures": [
												{
													"id": 1985,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 139,
															"character": 51
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.connect"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.connect"
					}
				},
				{
					"id": 2415,
					"name": "cork",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1119,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 2416,
							"name": "cork",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1119,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.cork"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.cork"
					}
				},
				{
					"id": 2626,
					"name": "destroy",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 578,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2627,
							"name": "destroy",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Destroy the stream. Optionally emit an "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event, and emit a "
									},
									{
										"kind": "code",
										"text": "`'close'`"
									},
									{
										"kind": "text",
										"text": "event (unless "
									},
									{
										"kind": "code",
										"text": "`emitClose`"
									},
									{
										"kind": "text",
										"text": " is set to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "). After this call, the readable\nstream will release any internal resources and subsequent calls to "
									},
									{
										"kind": "code",
										"text": "`push()`"
									},
									{
										"kind": "text",
										"text": "will be ignored.\n\nOnce "
									},
									{
										"kind": "code",
										"text": "`destroy()`"
									},
									{
										"kind": "text",
										"text": " has been called any further calls will be a no-op and no\nfurther errors except from "
									},
									{
										"kind": "code",
										"text": "`_destroy()`"
									},
									{
										"kind": "text",
										"text": " may be emitted as "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": ".\n\nImplementors should not override this method, but instead implement "
									},
									{
										"kind": "code",
										"text": "`readable._destroy()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v8.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 578,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2628,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Error which will be passed as payload in "
											},
											{
												"kind": "code",
												"text": "`'error'`"
											},
											{
												"kind": "text",
												"text": " event"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.destroy"
					}
				},
				{
					"id": 1948,
					"name": "destroySoon",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 99,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 1949,
							"name": "destroySoon",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Destroys the socket after all data is written. If the "
									},
									{
										"kind": "code",
										"text": "`finish`"
									},
									{
										"kind": "text",
										"text": " event was already emitted the socket is destroyed immediately.\nIf the socket is still writable it implicitly calls "
									},
									{
										"kind": "code",
										"text": "`socket.end()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.4"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 99,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.destroySoon"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.destroySoon"
					}
				},
				{
					"id": 2594,
					"name": "drop",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 527,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2595,
							"name": "drop",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method returns a new stream with the first *limit* chunks dropped from the start."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v17.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a stream with *limit* chunks dropped from the start."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 527,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2596,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the number of chunks to drop from the readable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2597,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/stream.d.ts",
													"qualifiedName": "ArrayOptions"
												},
												"name": "ArrayOptions",
												"package": "@types/node"
											},
											{
												"type": "literal",
												"value": "signal"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/stream.d.ts",
									"qualifiedName": "internal.Readable"
								},
								"name": "Readable",
								"package": "@types/node",
								"qualifiedName": "internal.Readable"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.drop"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.drop"
					}
				},
				{
					"id": 2105,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 387,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 388,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 389,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 390,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 391,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 392,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 393,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 394,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 395,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 396,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2106,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 387,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2107,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 2108,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.emit"
							}
						},
						{
							"id": 2109,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 388,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2110,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "close"
									}
								},
								{
									"id": 2111,
									"name": "hadError",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.emit"
							}
						},
						{
							"id": 2112,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 389,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2113,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "connect"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.emit"
							}
						},
						{
							"id": 2114,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 390,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2115,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "data"
									}
								},
								{
									"id": 2116,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.Buffer"
										},
										"name": "Buffer",
										"package": "@types/node",
										"qualifiedName": "__global.Buffer"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.emit"
							}
						},
						{
							"id": 2117,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 391,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2118,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "drain"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.emit"
							}
						},
						{
							"id": 2119,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 392,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2120,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "end"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.emit"
							}
						},
						{
							"id": 2121,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 393,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2122,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "error"
									}
								},
								{
									"id": 2123,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.emit"
							}
						},
						{
							"id": 2124,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 394,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2125,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "lookup"
									}
								},
								{
									"id": 2126,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								},
								{
									"id": 2127,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2128,
									"name": "family",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 2129,
									"name": "host",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.emit"
							}
						},
						{
							"id": 2130,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 395,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2131,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "ready"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.emit"
							}
						},
						{
							"id": 2132,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 396,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2133,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "timeout"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.emit"
					}
				},
				{
					"id": 2030,
					"name": "end",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 359,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 360,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 361,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2031,
							"name": "end",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Half-closes the socket. i.e., it sends a FIN packet. It is possible the\nserver will still send some data.\n\nSee "
									},
									{
										"kind": "code",
										"text": "`writable.end()`"
									},
									{
										"kind": "text",
										"text": " for further details."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.90"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The socket itself."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 359,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2032,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional callback for when the socket is finished."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2033,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 359,
													"character": 23
												}
											],
											"signatures": [
												{
													"id": 2034,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 359,
															"character": 23
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.end"
							}
						},
						{
							"id": 2035,
							"name": "end",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 360,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2036,
									"name": "buffer",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 2037,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2038,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 360,
													"character": 52
												}
											],
											"signatures": [
												{
													"id": 2039,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 360,
															"character": 52
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.end"
							}
						},
						{
							"id": 2040,
							"name": "end",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 361,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2041,
									"name": "str",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 2042,
									"name": "encoding",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.BufferEncoding"
										},
										"name": "BufferEncoding",
										"package": "@types/node",
										"qualifiedName": "__global.BufferEncoding"
									}
								},
								{
									"id": 2043,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2044,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 361,
													"character": 76
												}
											],
											"signatures": [
												{
													"id": 2045,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 361,
															"character": 76
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.end"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.end"
					}
				},
				{
					"id": 2677,
					"name": "eventNames",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 870,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2678,
							"name": "eventNames",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
									},
									{
										"kind": "code",
										"text": "`Symbol`"
									},
									{
										"kind": "text",
										"text": "s.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 870,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.eventNames"
					}
				},
				{
					"id": 2578,
					"name": "every",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 506,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2579,
							"name": "every",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is similar to "
									},
									{
										"kind": "code",
										"text": "`Array.prototype.every`"
									},
									{
										"kind": "text",
										"text": " and calls *fn* on each chunk in the stream\nto check if all awaited return values are truthy value for *fn*. Once an *fn* call on a chunk\n"
									},
									{
										"kind": "code",
										"text": "`await`"
									},
									{
										"kind": "text",
										"text": "ed return value is falsy, the stream is destroyed and the promise is fulfilled with "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\nIf all of the *fn* calls on the chunks return a truthy value, the promise is fulfilled with "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v17.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a promise evaluating to "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if *fn* returned a truthy value for every one of the chunks."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 506,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2580,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "a function to call on each chunk of the stream. Async or not."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2581,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 507,
													"character": 16
												}
											],
											"signatures": [
												{
													"id": 2582,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 507,
															"character": 16
														}
													],
													"parameters": [
														{
															"id": 2583,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2584,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Pick"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/@types/node/stream.d.ts",
																			"qualifiedName": "ArrayOptions"
																		},
																		"name": "ArrayOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "literal",
																		"value": "signal"
																	}
																],
																"name": "Pick",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"id": 2585,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/stream.d.ts",
											"qualifiedName": "ArrayOptions"
										},
										"name": "ArrayOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.every"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.every"
					}
				},
				{
					"id": 2535,
					"name": "filter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 434,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2536,
							"name": "filter",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method allows filtering the stream. For each chunk in the stream the *fn* function will be called\nand if it returns a truthy value, the chunk will be passed to the result stream.\nIf the *fn* function returns a promise - that promise will be "
									},
									{
										"kind": "code",
										"text": "`await`"
									},
									{
										"kind": "text",
										"text": "ed."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v17.4.0, v16.14.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a stream filtered with the predicate *fn*."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 434,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2537,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "a function to filter chunks from the stream. Async or not."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2538,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 435,
													"character": 16
												}
											],
											"signatures": [
												{
													"id": 2539,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 435,
															"character": 16
														}
													],
													"parameters": [
														{
															"id": 2540,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2541,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Pick"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/@types/node/stream.d.ts",
																			"qualifiedName": "ArrayOptions"
																		},
																		"name": "ArrayOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "literal",
																		"value": "signal"
																	}
																],
																"name": "Pick",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"id": 2542,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/stream.d.ts",
											"qualifiedName": "ArrayOptions"
										},
										"name": "ArrayOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/stream.d.ts",
									"qualifiedName": "internal.Readable"
								},
								"name": "Readable",
								"package": "@types/node",
								"qualifiedName": "internal.Readable"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.filter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.filter"
					}
				},
				{
					"id": 2562,
					"name": "find",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 489,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 493,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2563,
							"name": "find",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is similar to "
									},
									{
										"kind": "code",
										"text": "`Array.prototype.find`"
									},
									{
										"kind": "text",
										"text": " and calls *fn* on each chunk in the stream\nto find a chunk with a truthy value for *fn*. Once an *fn* call's awaited return value is truthy,\nthe stream is destroyed and the promise is fulfilled with value for which *fn* returned a truthy value.\nIf all of the *fn* calls on the chunks return a falsy value, the promise is fulfilled with "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v17.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a promise evaluating to the first chunk for which *fn* evaluated with a truthy value,\nor "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": " if no element was found."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 489,
									"character": 8
								}
							],
							"typeParameter": [
								{
									"id": 2564,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									}
								}
							],
							"parameters": [
								{
									"id": 2565,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "a function to call on each chunk of the stream. Async or not."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2566,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 490,
													"character": 16
												}
											],
											"signatures": [
												{
													"id": 2567,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 490,
															"character": 16
														}
													],
													"parameters": [
														{
															"id": 2568,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2569,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Pick"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/@types/node/stream.d.ts",
																			"qualifiedName": "ArrayOptions"
																		},
																		"name": "ArrayOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "literal",
																		"value": "signal"
																	}
																],
																"name": "Pick",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "data",
														"asserts": false,
														"targetType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												}
											]
										}
									}
								},
								{
									"id": 2570,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/stream.d.ts",
											"qualifiedName": "ArrayOptions"
										},
										"name": "ArrayOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.find"
							}
						},
						{
							"id": 2571,
							"name": "find",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 493,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2572,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2573,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 494,
													"character": 16
												}
											],
											"signatures": [
												{
													"id": 2574,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 494,
															"character": 16
														}
													],
													"parameters": [
														{
															"id": 2575,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2576,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Pick"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/@types/node/stream.d.ts",
																			"qualifiedName": "ArrayOptions"
																		},
																		"name": "ArrayOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "literal",
																		"value": "signal"
																	}
																],
																"name": "Pick",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"id": 2577,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/stream.d.ts",
											"qualifiedName": "ArrayOptions"
										},
										"name": "ArrayOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.find"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.find"
					}
				},
				{
					"id": 2586,
					"name": "flatMap",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 520,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2587,
							"name": "flatMap",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method returns a new stream by applying the given callback to each chunk of the stream\nand then flattening the result.\n\nIt is possible to return a stream or another iterable or async iterable from *fn* and the result streams\nwill be merged (flattened) into the returned stream."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v17.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a stream flat-mapped with the function *fn*."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 520,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2588,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "a function to map over every chunk in the stream. May be async. May be a stream or generator."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2589,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 520,
													"character": 20
												}
											],
											"signatures": [
												{
													"id": 2590,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 520,
															"character": 20
														}
													],
													"parameters": [
														{
															"id": 2591,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2592,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Pick"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/@types/node/stream.d.ts",
																			"qualifiedName": "ArrayOptions"
																		},
																		"name": "ArrayOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "literal",
																		"value": "signal"
																	}
																],
																"name": "Pick",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								},
								{
									"id": 2593,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/stream.d.ts",
											"qualifiedName": "ArrayOptions"
										},
										"name": "ArrayOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/stream.d.ts",
									"qualifiedName": "internal.Readable"
								},
								"name": "Readable",
								"package": "@types/node",
								"qualifiedName": "internal.Readable"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.flatMap"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.flatMap"
					}
				},
				{
					"id": 2543,
					"name": "forEach",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 453,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2544,
							"name": "forEach",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method allows iterating a stream. For each chunk in the stream the *fn* function will be called.\nIf the *fn* function returns a promise - that promise will be "
									},
									{
										"kind": "code",
										"text": "`await`"
									},
									{
										"kind": "text",
										"text": "ed.\n\nThis method is different from "
									},
									{
										"kind": "code",
										"text": "`for await...of`"
									},
									{
										"kind": "text",
										"text": " loops in that it can optionally process chunks concurrently.\nIn addition, a "
									},
									{
										"kind": "code",
										"text": "`forEach`"
									},
									{
										"kind": "text",
										"text": " iteration can only be stopped by having passed a "
									},
									{
										"kind": "code",
										"text": "`signal`"
									},
									{
										"kind": "text",
										"text": " option\nand aborting the related AbortController while "
									},
									{
										"kind": "code",
										"text": "`for await...of`"
									},
									{
										"kind": "text",
										"text": " can be stopped with "
									},
									{
										"kind": "code",
										"text": "`break`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`return`"
									},
									{
										"kind": "text",
										"text": ".\nIn either case the stream will be destroyed.\n\nThis method is different from listening to the "
									},
									{
										"kind": "code",
										"text": "`'data'`"
									},
									{
										"kind": "text",
										"text": " event in that it uses the "
									},
									{
										"kind": "code",
										"text": "`readable`"
									},
									{
										"kind": "text",
										"text": " event\nin the underlying machinary and can limit the number of concurrent *fn* calls."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v17.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a promise for when the stream has finished."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 453,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2545,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "a function to call on each chunk of the stream. Async or not."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2546,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 454,
													"character": 16
												}
											],
											"signatures": [
												{
													"id": 2547,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 454,
															"character": 16
														}
													],
													"parameters": [
														{
															"id": 2548,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2549,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Pick"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/@types/node/stream.d.ts",
																			"qualifiedName": "ArrayOptions"
																		},
																		"name": "ArrayOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "literal",
																		"value": "signal"
																	}
																],
																"name": "Pick",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"id": 2550,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/stream.d.ts",
											"qualifiedName": "ArrayOptions"
										},
										"name": "ArrayOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.forEach"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.forEach"
					}
				},
				{
					"id": 2665,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 722,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2666,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current max listener value for the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " which is either\nset by "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " or defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "defaultMaxListeners"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v1.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 722,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.getMaxListeners"
					}
				},
				{
					"id": 2506,
					"name": "isPaused",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 287,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2507,
							"name": "isPaused",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "code",
										"text": "`readable.isPaused()`"
									},
									{
										"kind": "text",
										"text": " method returns the current operating state of the"
									},
									{
										"kind": "code",
										"text": "`Readable`"
									},
									{
										"kind": "text",
										"text": ". This is used primarily by the mechanism that underlies the"
									},
									{
										"kind": "code",
										"text": "`readable.pipe()`"
									},
									{
										"kind": "text",
										"text": " method. In most\ntypical cases, there will be no reason to\nuse this method directly.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst readable = new stream.Readable();\n\nreadable.isPaused(); // === false\nreadable.pause();\nreadable.isPaused(); // === true\nreadable.resume();\nreadable.isPaused(); // === false\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.11.14"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 287,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.isPaused"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.isPaused"
					}
				},
				{
					"id": 2522,
					"name": "iterator",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 417,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2523,
							"name": "iterator",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The iterator created by this method gives users the option to cancel the destruction\nof the stream if the "
									},
									{
										"kind": "code",
										"text": "`for await...of`"
									},
									{
										"kind": "text",
										"text": " loop is exited by "
									},
									{
										"kind": "code",
										"text": "`return`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`break`"
									},
									{
										"kind": "text",
										"text": ", or "
									},
									{
										"kind": "code",
										"text": "`throw`"
									},
									{
										"kind": "text",
										"text": ",\nor if the iterator should destroy the stream if the stream emitted an error during iteration."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v16.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 417,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2524,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2525,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 2526,
													"name": "destroyOnReturn",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "When set to "
															},
															{
																"kind": "code",
																"text": "`false`"
															},
															{
																"kind": "text",
																"text": ", calling "
															},
															{
																"kind": "code",
																"text": "`return`"
															},
															{
																"kind": "text",
																"text": " on the async iterator,\nor exiting a "
															},
															{
																"kind": "code",
																"text": "`for await...of`"
															},
															{
																"kind": "text",
																"text": " iteration using a "
															},
															{
																"kind": "code",
																"text": "`break`"
															},
															{
																"kind": "text",
																"text": ", "
															},
															{
																"kind": "code",
																"text": "`return`"
															},
															{
																"kind": "text",
																"text": ", or "
															},
															{
																"kind": "code",
																"text": "`throw`"
															},
															{
																"kind": "text",
																"text": " will not destroy the stream.\n**Default: "
															},
															{
																"kind": "code",
																"text": "`true`"
															},
															{
																"kind": "text",
																"text": "**."
															}
														]
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 417,
															"character": 29
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2526
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 417,
													"character": 27
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
									"qualifiedName": "AsyncIterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.iterator"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.iterator"
					}
				},
				{
					"id": 2673,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 816,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2674,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of listeners listening for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\nIf "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v3.2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 816,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 2675,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 2676,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event handler function"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.listenerCount"
					}
				},
				{
					"id": 2667,
					"name": "listeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 735,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2668,
							"name": "listeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 735,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 2669,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.listeners"
					}
				},
				{
					"id": 2527,
					"name": "map",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 425,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2528,
							"name": "map",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method allows mapping over the stream. The *fn* function will be called for every chunk in the stream.\nIf the *fn* function returns a promise - that promise will be "
									},
									{
										"kind": "code",
										"text": "`await`"
									},
									{
										"kind": "text",
										"text": "ed before being passed to the result stream."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v17.4.0, v16.14.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a stream mapped with the function *fn*."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 425,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2529,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "a function to map over every chunk in the stream. Async or not."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2530,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 425,
													"character": 16
												}
											],
											"signatures": [
												{
													"id": 2531,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 425,
															"character": 16
														}
													],
													"parameters": [
														{
															"id": 2532,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2533,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Pick"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/@types/node/stream.d.ts",
																			"qualifiedName": "ArrayOptions"
																		},
																		"name": "ArrayOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "literal",
																		"value": "signal"
																	}
																],
																"name": "Pick",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								},
								{
									"id": 2534,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/stream.d.ts",
											"qualifiedName": "ArrayOptions"
										},
										"name": "ArrayOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/stream.d.ts",
									"qualifiedName": "internal.Readable"
								},
								"name": "Readable",
								"package": "@types/node",
								"qualifiedName": "internal.Readable"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.map"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.map"
					}
				},
				{
					"id": 2652,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 695,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2653,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.removeListener()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v10.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 695,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 2654,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 2655,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2656,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 695,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 2657,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/events.d.ts",
															"line": 695,
															"character": 58
														}
													],
													"parameters": [
														{
															"id": 2658,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.off"
					}
				},
				{
					"id": 2134,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 397,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 398,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 399,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 400,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 401,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 402,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 403,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 404,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 408,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 409,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2135,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 397,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2136,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2137,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2138,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 397,
													"character": 36
												}
											],
											"signatures": [
												{
													"id": 2139,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 397,
															"character": 36
														}
													],
													"parameters": [
														{
															"id": 2140,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.on"
							}
						},
						{
							"id": 2141,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 398,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2142,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "close"
									}
								},
								{
									"id": 2143,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2144,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 398,
													"character": 37
												}
											],
											"signatures": [
												{
													"id": 2145,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 398,
															"character": 37
														}
													],
													"parameters": [
														{
															"id": 2146,
															"name": "hadError",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.on"
							}
						},
						{
							"id": 2147,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 399,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2148,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "connect"
									}
								},
								{
									"id": 2149,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2150,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 399,
													"character": 39
												}
											],
											"signatures": [
												{
													"id": 2151,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 399,
															"character": 39
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.on"
							}
						},
						{
							"id": 2152,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 400,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2153,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "data"
									}
								},
								{
									"id": 2154,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2155,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 400,
													"character": 36
												}
											],
											"signatures": [
												{
													"id": 2156,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 400,
															"character": 36
														}
													],
													"parameters": [
														{
															"id": 2157,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/@types/node/buffer.d.ts",
																	"qualifiedName": "__global.Buffer"
																},
																"name": "Buffer",
																"package": "@types/node",
																"qualifiedName": "__global.Buffer"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.on"
							}
						},
						{
							"id": 2158,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 401,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2159,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "drain"
									}
								},
								{
									"id": 2160,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2161,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 401,
													"character": 37
												}
											],
											"signatures": [
												{
													"id": 2162,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 401,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.on"
							}
						},
						{
							"id": 2163,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 402,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2164,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "end"
									}
								},
								{
									"id": 2165,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2166,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 402,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 2167,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 402,
															"character": 35
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.on"
							}
						},
						{
							"id": 2168,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 403,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2169,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "error"
									}
								},
								{
									"id": 2170,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2171,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 403,
													"character": 37
												}
											],
											"signatures": [
												{
													"id": 2172,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 403,
															"character": 37
														}
													],
													"parameters": [
														{
															"id": 2173,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.on"
							}
						},
						{
							"id": 2174,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 404,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2175,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "lookup"
									}
								},
								{
									"id": 2176,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2177,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 406,
													"character": 22
												}
											],
											"signatures": [
												{
													"id": 2178,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 406,
															"character": 22
														}
													],
													"parameters": [
														{
															"id": 2179,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														},
														{
															"id": 2180,
															"name": "address",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2181,
															"name": "family",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 2182,
															"name": "host",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.on"
							}
						},
						{
							"id": 2183,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 408,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2184,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "ready"
									}
								},
								{
									"id": 2185,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2186,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 408,
													"character": 37
												}
											],
											"signatures": [
												{
													"id": 2187,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 408,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.on"
							}
						},
						{
							"id": 2188,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 409,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2189,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "timeout"
									}
								},
								{
									"id": 2190,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2191,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 409,
													"character": 39
												}
											],
											"signatures": [
												{
													"id": 2192,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 409,
															"character": 39
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.on"
					}
				},
				{
					"id": 2193,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 410,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 411,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 412,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 413,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 414,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 415,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 416,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 417,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 421,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 422,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2194,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 410,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2195,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2196,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2197,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 410,
													"character": 38
												}
											],
											"signatures": [
												{
													"id": 2198,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 410,
															"character": 38
														}
													],
													"parameters": [
														{
															"id": 2199,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.once"
							}
						},
						{
							"id": 2200,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 411,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2201,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "close"
									}
								},
								{
									"id": 2202,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2203,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 411,
													"character": 39
												}
											],
											"signatures": [
												{
													"id": 2204,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 411,
															"character": 39
														}
													],
													"parameters": [
														{
															"id": 2205,
															"name": "hadError",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.once"
							}
						},
						{
							"id": 2206,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 412,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2207,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "connect"
									}
								},
								{
									"id": 2208,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2209,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 412,
													"character": 41
												}
											],
											"signatures": [
												{
													"id": 2210,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 412,
															"character": 41
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.once"
							}
						},
						{
							"id": 2211,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 413,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2212,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "data"
									}
								},
								{
									"id": 2213,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2214,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 413,
													"character": 38
												}
											],
											"signatures": [
												{
													"id": 2215,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 413,
															"character": 38
														}
													],
													"parameters": [
														{
															"id": 2216,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/@types/node/buffer.d.ts",
																	"qualifiedName": "__global.Buffer"
																},
																"name": "Buffer",
																"package": "@types/node",
																"qualifiedName": "__global.Buffer"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.once"
							}
						},
						{
							"id": 2217,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 414,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2218,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "drain"
									}
								},
								{
									"id": 2219,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2220,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 414,
													"character": 39
												}
											],
											"signatures": [
												{
													"id": 2221,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 414,
															"character": 39
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.once"
							}
						},
						{
							"id": 2222,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 415,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2223,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "end"
									}
								},
								{
									"id": 2224,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2225,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 415,
													"character": 37
												}
											],
											"signatures": [
												{
													"id": 2226,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 415,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.once"
							}
						},
						{
							"id": 2227,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 416,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2228,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "error"
									}
								},
								{
									"id": 2229,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2230,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 416,
													"character": 39
												}
											],
											"signatures": [
												{
													"id": 2231,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 416,
															"character": 39
														}
													],
													"parameters": [
														{
															"id": 2232,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.once"
							}
						},
						{
							"id": 2233,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 417,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2234,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "lookup"
									}
								},
								{
									"id": 2235,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2236,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 419,
													"character": 22
												}
											],
											"signatures": [
												{
													"id": 2237,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 419,
															"character": 22
														}
													],
													"parameters": [
														{
															"id": 2238,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														},
														{
															"id": 2239,
															"name": "address",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2240,
															"name": "family",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 2241,
															"name": "host",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.once"
							}
						},
						{
							"id": 2242,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 421,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2243,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "ready"
									}
								},
								{
									"id": 2244,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2245,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 421,
													"character": 39
												}
											],
											"signatures": [
												{
													"id": 2246,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 421,
															"character": 39
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.once"
							}
						},
						{
							"id": 2247,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 422,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2248,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "timeout"
									}
								},
								{
									"id": 2249,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2250,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 422,
													"character": 41
												}
											],
											"signatures": [
												{
													"id": 2251,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 422,
															"character": 41
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.once"
					}
				},
				{
					"id": 1989,
					"name": "pause",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 151,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 1990,
							"name": "pause",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Pauses the reading of data. That is, "
									},
									{
										"kind": "code",
										"text": "`'data'`"
									},
									{
										"kind": "text",
										"text": " events will not be emitted.\nUseful to throttle back an upload."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The socket itself."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 151,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.pause"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.pause"
					}
				},
				{
					"id": 2633,
					"name": "pipe",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 29,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2634,
							"name": "pipe",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 29,
									"character": 8
								}
							],
							"typeParameter": [
								{
									"id": 2635,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/globals.d.ts",
											"qualifiedName": "__global.NodeJS.WritableStream"
										},
										"name": "WritableStream",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.WritableStream"
									}
								}
							],
							"parameters": [
								{
									"id": 2636,
									"name": "destination",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 2637,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2638,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"children": [
												{
													"id": 2639,
													"name": "end",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isExternal": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 32,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														2639
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 31,
													"character": 22
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.pipe"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.pipe"
					}
				},
				{
					"id": 2252,
					"name": "prependListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 423,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 424,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 425,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 426,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 427,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 428,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 429,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 430,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 434,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 435,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2253,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 423,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2254,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2255,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2256,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 423,
													"character": 49
												}
											],
											"signatures": [
												{
													"id": 2257,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 423,
															"character": 49
														}
													],
													"parameters": [
														{
															"id": 2258,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependListener"
							}
						},
						{
							"id": 2259,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 424,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2260,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "close"
									}
								},
								{
									"id": 2261,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2262,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 424,
													"character": 50
												}
											],
											"signatures": [
												{
													"id": 2263,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 424,
															"character": 50
														}
													],
													"parameters": [
														{
															"id": 2264,
															"name": "hadError",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependListener"
							}
						},
						{
							"id": 2265,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 425,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2266,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "connect"
									}
								},
								{
									"id": 2267,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2268,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 425,
													"character": 52
												}
											],
											"signatures": [
												{
													"id": 2269,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 425,
															"character": 52
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependListener"
							}
						},
						{
							"id": 2270,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 426,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2271,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "data"
									}
								},
								{
									"id": 2272,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2273,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 426,
													"character": 49
												}
											],
											"signatures": [
												{
													"id": 2274,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 426,
															"character": 49
														}
													],
													"parameters": [
														{
															"id": 2275,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/@types/node/buffer.d.ts",
																	"qualifiedName": "__global.Buffer"
																},
																"name": "Buffer",
																"package": "@types/node",
																"qualifiedName": "__global.Buffer"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependListener"
							}
						},
						{
							"id": 2276,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 427,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2277,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "drain"
									}
								},
								{
									"id": 2278,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2279,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 427,
													"character": 50
												}
											],
											"signatures": [
												{
													"id": 2280,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 427,
															"character": 50
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependListener"
							}
						},
						{
							"id": 2281,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 428,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2282,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "end"
									}
								},
								{
									"id": 2283,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2284,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 428,
													"character": 48
												}
											],
											"signatures": [
												{
													"id": 2285,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 428,
															"character": 48
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependListener"
							}
						},
						{
							"id": 2286,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 429,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2287,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "error"
									}
								},
								{
									"id": 2288,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2289,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 429,
													"character": 50
												}
											],
											"signatures": [
												{
													"id": 2290,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 429,
															"character": 50
														}
													],
													"parameters": [
														{
															"id": 2291,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependListener"
							}
						},
						{
							"id": 2292,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 430,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2293,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "lookup"
									}
								},
								{
									"id": 2294,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2295,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 432,
													"character": 22
												}
											],
											"signatures": [
												{
													"id": 2296,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 432,
															"character": 22
														}
													],
													"parameters": [
														{
															"id": 2297,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														},
														{
															"id": 2298,
															"name": "address",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2299,
															"name": "family",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 2300,
															"name": "host",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependListener"
							}
						},
						{
							"id": 2301,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 434,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2302,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "ready"
									}
								},
								{
									"id": 2303,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2304,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 434,
													"character": 50
												}
											],
											"signatures": [
												{
													"id": 2305,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 434,
															"character": 50
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependListener"
							}
						},
						{
							"id": 2306,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 435,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2307,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "timeout"
									}
								},
								{
									"id": 2308,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2309,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 435,
													"character": 52
												}
											],
											"signatures": [
												{
													"id": 2310,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 435,
															"character": 52
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.prependListener"
					}
				},
				{
					"id": 2311,
					"name": "prependOnceListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 436,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 437,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 438,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 439,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 440,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 441,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 442,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 443,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 447,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 448,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2312,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 436,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2313,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2314,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2315,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 436,
													"character": 53
												}
											],
											"signatures": [
												{
													"id": 2316,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 436,
															"character": 53
														}
													],
													"parameters": [
														{
															"id": 2317,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependOnceListener"
							}
						},
						{
							"id": 2318,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 437,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2319,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "close"
									}
								},
								{
									"id": 2320,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2321,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 437,
													"character": 54
												}
											],
											"signatures": [
												{
													"id": 2322,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 437,
															"character": 54
														}
													],
													"parameters": [
														{
															"id": 2323,
															"name": "hadError",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependOnceListener"
							}
						},
						{
							"id": 2324,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 438,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2325,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "connect"
									}
								},
								{
									"id": 2326,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2327,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 438,
													"character": 56
												}
											],
											"signatures": [
												{
													"id": 2328,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 438,
															"character": 56
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependOnceListener"
							}
						},
						{
							"id": 2329,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 439,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2330,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "data"
									}
								},
								{
									"id": 2331,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2332,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 439,
													"character": 53
												}
											],
											"signatures": [
												{
													"id": 2333,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 439,
															"character": 53
														}
													],
													"parameters": [
														{
															"id": 2334,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/@types/node/buffer.d.ts",
																	"qualifiedName": "__global.Buffer"
																},
																"name": "Buffer",
																"package": "@types/node",
																"qualifiedName": "__global.Buffer"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependOnceListener"
							}
						},
						{
							"id": 2335,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 440,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2336,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "drain"
									}
								},
								{
									"id": 2337,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2338,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 440,
													"character": 54
												}
											],
											"signatures": [
												{
													"id": 2339,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 440,
															"character": 54
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependOnceListener"
							}
						},
						{
							"id": 2340,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 441,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2341,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "end"
									}
								},
								{
									"id": 2342,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2343,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 441,
													"character": 52
												}
											],
											"signatures": [
												{
													"id": 2344,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 441,
															"character": 52
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependOnceListener"
							}
						},
						{
							"id": 2345,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 442,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2346,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "error"
									}
								},
								{
									"id": 2347,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2348,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 442,
													"character": 54
												}
											],
											"signatures": [
												{
													"id": 2349,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 442,
															"character": 54
														}
													],
													"parameters": [
														{
															"id": 2350,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependOnceListener"
							}
						},
						{
							"id": 2351,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 443,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2352,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "lookup"
									}
								},
								{
									"id": 2353,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2354,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 445,
													"character": 22
												}
											],
											"signatures": [
												{
													"id": 2355,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 445,
															"character": 22
														}
													],
													"parameters": [
														{
															"id": 2356,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														},
														{
															"id": 2357,
															"name": "address",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2358,
															"name": "family",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														},
														{
															"id": 2359,
															"name": "host",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependOnceListener"
							}
						},
						{
							"id": 2360,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 447,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2361,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "ready"
									}
								},
								{
									"id": 2362,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2363,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 447,
													"character": 54
												}
											],
											"signatures": [
												{
													"id": 2364,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 447,
															"character": 54
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependOnceListener"
							}
						},
						{
							"id": 2365,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 448,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2366,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "timeout"
									}
								},
								{
									"id": 2367,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2368,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 448,
													"character": 56
												}
											],
											"signatures": [
												{
													"id": 2369,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 448,
															"character": 56
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.prependOnceListener"
					}
				},
				{
					"id": 2518,
					"name": "push",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 407,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2519,
							"name": "push",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 407,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2520,
									"name": "chunk",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2521,
									"name": "encoding",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.BufferEncoding"
										},
										"name": "BufferEncoding",
										"package": "@types/node",
										"qualifiedName": "__global.BufferEncoding"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.push"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.push"
					}
				},
				{
					"id": 2670,
					"name": "rawListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 766,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2671,
							"name": "rawListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ",\nincluding any wrappers (such as those created by "
									},
									{
										"kind": "code",
										"text": "`.once()`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 766,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 2672,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.rawListeners"
					}
				},
				{
					"id": 2503,
					"name": "read",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 204,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2504,
							"name": "read",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "code",
										"text": "`readable.read()`"
									},
									{
										"kind": "text",
										"text": " method reads data out of the internal buffer and\nreturns it. If no data is available to be read, "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " is returned. By default,\nthe data is returned as a "
									},
									{
										"kind": "code",
										"text": "`Buffer`"
									},
									{
										"kind": "text",
										"text": " object unless an encoding has been\nspecified using the "
									},
									{
										"kind": "code",
										"text": "`readable.setEncoding()`"
									},
									{
										"kind": "text",
										"text": " method or the stream is operating\nin object mode.\n\nThe optional "
									},
									{
										"kind": "code",
										"text": "`size`"
									},
									{
										"kind": "text",
										"text": " argument specifies a specific number of bytes to read. If"
									},
									{
										"kind": "code",
										"text": "`size`"
									},
									{
										"kind": "text",
										"text": " bytes are not available to be read, "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " will be returned _unless_the stream has ended, in which\ncase all of the data remaining in the internal\nbuffer will be returned.\n\nIf the "
									},
									{
										"kind": "code",
										"text": "`size`"
									},
									{
										"kind": "text",
										"text": " argument is not specified, all of the data contained in the\ninternal buffer will be returned.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`size`"
									},
									{
										"kind": "text",
										"text": " argument must be less than or equal to 1 GiB.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`readable.read()`"
									},
									{
										"kind": "text",
										"text": " method should only be called on "
									},
									{
										"kind": "code",
										"text": "`Readable`"
									},
									{
										"kind": "text",
										"text": " streams\noperating in paused mode. In flowing mode, "
									},
									{
										"kind": "code",
										"text": "`readable.read()`"
									},
									{
										"kind": "text",
										"text": " is called\nautomatically until the internal buffer is fully drained.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst readable = getReadableStreamSomehow();\n\n// 'readable' may be triggered multiple times as data is buffered in\nreadable.on('readable', () => {\n  let chunk;\n  console.log('Stream is readable (new data received in buffer)');\n  // Use a loop to make sure we read all currently available data\n  while (null !== (chunk = readable.read())) {\n    console.log(`Read ${chunk.length} bytes of data...`);\n  }\n});\n\n// 'end' will be triggered once when there is no more data available\nreadable.on('end', () => {\n  console.log('Reached end of stream.');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nEach call to "
									},
									{
										"kind": "code",
										"text": "`readable.read()`"
									},
									{
										"kind": "text",
										"text": " returns a chunk of data, or "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": ". The chunks\nare not concatenated. A "
									},
									{
										"kind": "code",
										"text": "`while`"
									},
									{
										"kind": "text",
										"text": " loop is necessary to consume all data\ncurrently in the buffer. When reading a large file "
									},
									{
										"kind": "code",
										"text": "`.read()`"
									},
									{
										"kind": "text",
										"text": " may return "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": ",\nhaving consumed all buffered content so far, but there is still more data to\ncome not yet buffered. In this case a new "
									},
									{
										"kind": "code",
										"text": "`'readable'`"
									},
									{
										"kind": "text",
										"text": " event will be emitted\nwhen there is more data in the buffer. Finally the "
									},
									{
										"kind": "code",
										"text": "`'end'`"
									},
									{
										"kind": "text",
										"text": " event will be\nemitted when there is no more data to come.\n\nTherefore to read a file's whole contents from a "
									},
									{
										"kind": "code",
										"text": "`readable`"
									},
									{
										"kind": "text",
										"text": ", it is necessary\nto collect chunks across multiple "
									},
									{
										"kind": "code",
										"text": "`'readable'`"
									},
									{
										"kind": "text",
										"text": " events:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst chunks = [];\n\nreadable.on('readable', () => {\n  let chunk;\n  while (null !== (chunk = readable.read())) {\n    chunks.push(chunk);\n  }\n});\n\nreadable.on('end', () => {\n  const content = chunks.join('');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nA "
									},
									{
										"kind": "code",
										"text": "`Readable`"
									},
									{
										"kind": "text",
										"text": " stream in object mode will always return a single item from\na call to "
									},
									{
										"kind": "code",
										"text": "`readable.read(size)`"
									},
									{
										"kind": "text",
										"text": ", regardless of the value of the"
									},
									{
										"kind": "code",
										"text": "`size`"
									},
									{
										"kind": "text",
										"text": " argument.\n\nIf the "
									},
									{
										"kind": "code",
										"text": "`readable.read()`"
									},
									{
										"kind": "text",
										"text": " method returns a chunk of data, a "
									},
									{
										"kind": "code",
										"text": "`'data'`"
									},
									{
										"kind": "text",
										"text": " event will\nalso be emitted.\n\nCalling "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "read",
										"target": 2503,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " after the "
									},
									{
										"kind": "code",
										"text": "`'end'`"
									},
									{
										"kind": "text",
										"text": " event has\nbeen emitted will return "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": ". No runtime error will be raised."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.4"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 204,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2505,
									"name": "size",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional argument to specify how much data to read."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.read"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.read"
					}
				},
				{
					"id": 2605,
					"name": "reduce",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 556,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 561,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2606,
							"name": "reduce",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method calls *fn* on each chunk of the stream in order, passing it the result from the calculation\non the previous element. It returns a promise for the final value of the reduction.\n\nIf no *initial* value is supplied the first chunk of the stream is used as the initial value.\nIf the stream is empty, the promise is rejected with a "
									},
									{
										"kind": "code",
										"text": "`TypeError`"
									},
									{
										"kind": "text",
										"text": " with the "
									},
									{
										"kind": "code",
										"text": "`ERR_INVALID_ARGS`"
									},
									{
										"kind": "text",
										"text": " code property.\n\nThe reducer function iterates the stream element-by-element which means that there is no *concurrency* parameter\nor parallelism. To perform a reduce concurrently, you can extract the async function to "
									},
									{
										"kind": "code",
										"text": "`readable.map`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v17.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a promise for the final value of the reduction."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 556,
									"character": 8
								}
							],
							"typeParameter": [
								{
									"id": 2607,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 2608,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "a reducer function to call over every chunk in the stream. Async or not."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2609,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 557,
													"character": 16
												}
											],
											"signatures": [
												{
													"id": 2610,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 557,
															"character": 16
														}
													],
													"parameters": [
														{
															"id": 2611,
															"name": "previous",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2612,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2613,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Pick"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/@types/node/stream.d.ts",
																			"qualifiedName": "ArrayOptions"
																		},
																		"name": "ArrayOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "literal",
																		"value": "signal"
																	}
																],
																"name": "Pick",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 2614,
									"name": "initial",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the initial value to use in the reduction."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "undefined"
									}
								},
								{
									"id": 2615,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/stream.d.ts",
													"qualifiedName": "ArrayOptions"
												},
												"name": "ArrayOptions",
												"package": "@types/node"
											},
											{
												"type": "literal",
												"value": "signal"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.reduce"
							}
						},
						{
							"id": 2616,
							"name": "reduce",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 561,
									"character": 8
								}
							],
							"typeParameter": [
								{
									"id": 2617,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 2618,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2619,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 562,
													"character": 16
												}
											],
											"signatures": [
												{
													"id": 2620,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 562,
															"character": 16
														}
													],
													"parameters": [
														{
															"id": 2621,
															"name": "previous",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 2622,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2623,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Pick"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/@types/node/stream.d.ts",
																			"qualifiedName": "ArrayOptions"
																		},
																		"name": "ArrayOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "literal",
																		"value": "signal"
																	}
																],
																"name": "Pick",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								},
								{
									"id": 2624,
									"name": "initial",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 2625,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/stream.d.ts",
													"qualifiedName": "ArrayOptions"
												},
												"name": "ArrayOptions",
												"package": "@types/node"
											},
											{
												"type": "literal",
												"value": "signal"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.reduce"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.reduce"
					}
				},
				{
					"id": 2013,
					"name": "ref",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 242,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2014,
							"name": "ref",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Opposite of "
									},
									{
										"kind": "code",
										"text": "`unref()`"
									},
									{
										"kind": "text",
										"text": ", calling "
									},
									{
										"kind": "code",
										"text": "`ref()`"
									},
									{
										"kind": "text",
										"text": " on a previously "
									},
									{
										"kind": "code",
										"text": "`unref`"
									},
									{
										"kind": "text",
										"text": "ed socket will _not_ let the program exit if it's the only socket left (the default behavior).\nIf the socket is "
									},
									{
										"kind": "code",
										"text": "`ref`"
									},
									{
										"kind": "text",
										"text": "ed calling "
									},
									{
										"kind": "code",
										"text": "`ref`"
									},
									{
										"kind": "text",
										"text": " again will have no effect."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.1"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The socket itself."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 242,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.ref"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.ref"
					}
				},
				{
					"id": 2659,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 706,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2660,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes all listeners, or those of the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 706,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 2661,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.removeAllListeners"
					}
				},
				{
					"id": 2419,
					"name": "removeListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1232,
							"character": 12
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1233,
							"character": 12
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1234,
							"character": 12
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1235,
							"character": 12
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1236,
							"character": 12
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1237,
							"character": 12
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1238,
							"character": 12
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1239,
							"character": 12
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1240,
							"character": 12
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1241,
							"character": 12
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1242,
							"character": 12
						},
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1243,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 2420,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1232,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2421,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "close"
									}
								},
								{
									"id": 2422,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2423,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1232,
													"character": 53
												}
											],
											"signatures": [
												{
													"id": 2424,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1232,
															"character": 53
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeListener"
							}
						},
						{
							"id": 2425,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1233,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2426,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "data"
									}
								},
								{
									"id": 2427,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2428,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1233,
													"character": 52
												}
											],
											"signatures": [
												{
													"id": 2429,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1233,
															"character": 52
														}
													],
													"parameters": [
														{
															"id": 2430,
															"name": "chunk",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeListener"
							}
						},
						{
							"id": 2431,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1234,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2432,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "drain"
									}
								},
								{
									"id": 2433,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2434,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1234,
													"character": 53
												}
											],
											"signatures": [
												{
													"id": 2435,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1234,
															"character": 53
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeListener"
							}
						},
						{
							"id": 2436,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1235,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2437,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "end"
									}
								},
								{
									"id": 2438,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2439,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1235,
													"character": 51
												}
											],
											"signatures": [
												{
													"id": 2440,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1235,
															"character": 51
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeListener"
							}
						},
						{
							"id": 2441,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1236,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2442,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "error"
									}
								},
								{
									"id": 2443,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2444,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1236,
													"character": 53
												}
											],
											"signatures": [
												{
													"id": 2445,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1236,
															"character": 53
														}
													],
													"parameters": [
														{
															"id": 2446,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeListener"
							}
						},
						{
							"id": 2447,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1237,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2448,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "finish"
									}
								},
								{
									"id": 2449,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2450,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1237,
													"character": 54
												}
											],
											"signatures": [
												{
													"id": 2451,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1237,
															"character": 54
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeListener"
							}
						},
						{
							"id": 2452,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1238,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2453,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "pause"
									}
								},
								{
									"id": 2454,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2455,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1238,
													"character": 53
												}
											],
											"signatures": [
												{
													"id": 2456,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1238,
															"character": 53
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeListener"
							}
						},
						{
							"id": 2457,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1239,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2458,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "pipe"
									}
								},
								{
									"id": 2459,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2460,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1239,
													"character": 52
												}
											],
											"signatures": [
												{
													"id": 2461,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1239,
															"character": 52
														}
													],
													"parameters": [
														{
															"id": 2462,
															"name": "src",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/@types/node/stream.d.ts",
																	"qualifiedName": "internal.Readable"
																},
																"name": "Readable",
																"package": "@types/node",
																"qualifiedName": "internal.Readable"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeListener"
							}
						},
						{
							"id": 2463,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1240,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2464,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "readable"
									}
								},
								{
									"id": 2465,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2466,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1240,
													"character": 56
												}
											],
											"signatures": [
												{
													"id": 2467,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1240,
															"character": 56
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeListener"
							}
						},
						{
							"id": 2468,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1241,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2469,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "resume"
									}
								},
								{
									"id": 2470,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2471,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1241,
													"character": 54
												}
											],
											"signatures": [
												{
													"id": 2472,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1241,
															"character": 54
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeListener"
							}
						},
						{
							"id": 2473,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1242,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2474,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "literal",
										"value": "unpipe"
									}
								},
								{
									"id": 2475,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2476,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1242,
													"character": 54
												}
											],
											"signatures": [
												{
													"id": 2477,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1242,
															"character": 54
														}
													],
													"parameters": [
														{
															"id": 2478,
															"name": "src",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/@types/node/stream.d.ts",
																	"qualifiedName": "internal.Readable"
																},
																"name": "Readable",
																"package": "@types/node",
																"qualifiedName": "internal.Readable"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeListener"
							}
						},
						{
							"id": 2479,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1243,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2480,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 2481,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2482,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 1243,
													"character": 61
												}
											],
											"signatures": [
												{
													"id": 2483,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 1243,
															"character": 61
														}
													],
													"parameters": [
														{
															"id": 2484,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.removeListener"
					}
				},
				{
					"id": 1991,
					"name": "resetAndDestroy",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 159,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 1992,
							"name": "resetAndDestroy",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Close the TCP connection by sending an RST packet and destroy the stream.\nIf this TCP socket is in connecting status, it will send an RST packet and destroy this TCP socket once it is connected.\nOtherwise, it will call "
									},
									{
										"kind": "code",
										"text": "`socket.destroy`"
									},
									{
										"kind": "text",
										"text": " with an "
									},
									{
										"kind": "code",
										"text": "`ERR_SOCKET_CLOSED`"
									},
									{
										"kind": "text",
										"text": " Error.\nIf this is not a TCP socket (for example, a pipe), calling this method will immediately throw an "
									},
									{
										"kind": "code",
										"text": "`ERR_INVALID_HANDLE_TYPE`"
									},
									{
										"kind": "text",
										"text": " Error."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v18.3.0, v16.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 159,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.resetAndDestroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.resetAndDestroy"
					}
				},
				{
					"id": 1993,
					"name": "resume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 164,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 1994,
							"name": "resume",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resumes reading after a call to "
									},
									{
										"kind": "code",
										"text": "`socket.pause()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The socket itself."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 164,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.resume"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.resume"
					}
				},
				{
					"id": 2412,
					"name": "setDefaultEncoding",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1115,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 2413,
							"name": "setDefaultEncoding",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1115,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 2414,
									"name": "encoding",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.BufferEncoding"
										},
										"name": "BufferEncoding",
										"package": "@types/node",
										"qualifiedName": "__global.BufferEncoding"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.setDefaultEncoding"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.setDefaultEncoding"
					}
				},
				{
					"id": 1986,
					"name": "setEncoding",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 145,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 1987,
							"name": "setEncoding",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the encoding for the socket as a "
									},
									{
										"kind": "code",
										"text": "`Readable Stream`"
									},
									{
										"kind": "text",
										"text": ". See "
									},
									{
										"kind": "code",
										"text": "`readable.setEncoding()`"
									},
									{
										"kind": "text",
										"text": " for more information."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.90"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The socket itself."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 145,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1988,
									"name": "encoding",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.BufferEncoding"
										},
										"name": "BufferEncoding",
										"package": "@types/node",
										"qualifiedName": "__global.BufferEncoding"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.setEncoding"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.setEncoding"
					}
				},
				{
					"id": 2004,
					"name": "setKeepAlive",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 222,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2005,
							"name": "setKeepAlive",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable/disable keep-alive functionality, and optionally set the initial\ndelay before the first keepalive probe is sent on an idle socket.\n\nSet "
									},
									{
										"kind": "code",
										"text": "`initialDelay`"
									},
									{
										"kind": "text",
										"text": " (in milliseconds) to set the delay between the last\ndata packet received and the first keepalive probe. Setting "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": " for"
									},
									{
										"kind": "code",
										"text": "`initialDelay`"
									},
									{
										"kind": "text",
										"text": " will leave the value unchanged from the default\n(or previous) setting.\n\nEnabling the keep-alive functionality will set the following socket options:\n\n* "
									},
									{
										"kind": "code",
										"text": "`SO_KEEPALIVE=1`"
									},
									{
										"kind": "text",
										"text": "\n* "
									},
									{
										"kind": "code",
										"text": "`TCP_KEEPIDLE=initialDelay`"
									},
									{
										"kind": "text",
										"text": "\n* "
									},
									{
										"kind": "code",
										"text": "`TCP_KEEPCNT=10`"
									},
									{
										"kind": "text",
										"text": "\n* "
									},
									{
										"kind": "code",
										"text": "`TCP_KEEPINTVL=1`"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.92"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The socket itself."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 222,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2006,
									"name": "enable",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2007,
									"name": "initialDelay",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.setKeepAlive"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.setKeepAlive"
					}
				},
				{
					"id": 2662,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 716,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2663,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s will print a warning if more than "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " method allows the limit to be\nmodified for this specific "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance. The value can be set to"
									},
									{
										"kind": "code",
										"text": "`Infinity`"
									},
									{
										"kind": "text",
										"text": " (or "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.5"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/events.d.ts",
									"line": 716,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 2664,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.setMaxListeners"
					}
				},
				{
					"id": 2001,
					"name": "setNoDelay",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 202,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2002,
							"name": "setNoDelay",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable/disable the use of Nagle's algorithm.\n\nWhen a TCP connection is created, it will have Nagle's algorithm enabled.\n\nNagle's algorithm delays data before it is sent via the network. It attempts\nto optimize throughput at the expense of latency.\n\nPassing "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " for "
									},
									{
										"kind": "code",
										"text": "`noDelay`"
									},
									{
										"kind": "text",
										"text": " or not passing an argument will disable Nagle's\nalgorithm for the socket. Passing "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " for "
									},
									{
										"kind": "code",
										"text": "`noDelay`"
									},
									{
										"kind": "text",
										"text": " will enable Nagle's\nalgorithm."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.90"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The socket itself."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 202,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2003,
									"name": "noDelay",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.setNoDelay"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.setNoDelay"
					}
				},
				{
					"id": 1995,
					"name": "setTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 186,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 1996,
							"name": "setTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the socket to timeout after "
									},
									{
										"kind": "code",
										"text": "`timeout`"
									},
									{
										"kind": "text",
										"text": " milliseconds of inactivity on\nthe socket. By default "
									},
									{
										"kind": "code",
										"text": "`net.Socket`"
									},
									{
										"kind": "text",
										"text": " do not have a timeout.\n\nWhen an idle timeout is triggered the socket will receive a "
									},
									{
										"kind": "code",
										"text": "`'timeout'`"
									},
									{
										"kind": "text",
										"text": " event but the connection will not be severed. The user must manually call "
									},
									{
										"kind": "code",
										"text": "`socket.end()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`socket.destroy()`"
									},
									{
										"kind": "text",
										"text": " to\nend the connection.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nsocket.setTimeout(3000);\nsocket.on('timeout', () => {\n  console.log('socket timeout');\n  socket.end();\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf "
									},
									{
										"kind": "code",
										"text": "`timeout`"
									},
									{
										"kind": "text",
										"text": " is 0, then the existing idle timeout is disabled.\n\nThe optional "
									},
									{
										"kind": "code",
										"text": "`callback`"
									},
									{
										"kind": "text",
										"text": " parameter will be added as a one-time listener for the "
									},
									{
										"kind": "code",
										"text": "`'timeout'`"
									},
									{
										"kind": "text",
										"text": " event."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.90"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The socket itself."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 186,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1997,
									"name": "timeout",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1998,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1999,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 186,
													"character": 47
												}
											],
											"signatures": [
												{
													"id": 2000,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 186,
															"character": 47
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.setTimeout"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.setTimeout"
					}
				},
				{
					"id": 2554,
					"name": "some",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 475,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2555,
							"name": "some",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is similar to "
									},
									{
										"kind": "code",
										"text": "`Array.prototype.some`"
									},
									{
										"kind": "text",
										"text": " and calls *fn* on each chunk in the stream\nuntil the awaited return value is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " (or any truthy value). Once an *fn* call on a chunk\n"
									},
									{
										"kind": "code",
										"text": "`await`"
									},
									{
										"kind": "text",
										"text": "ed return value is truthy, the stream is destroyed and the promise is fulfilled with "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ".\nIf none of the *fn* calls on the chunks return a truthy value, the promise is fulfilled with "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v17.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a promise evaluating to "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if *fn* returned a truthy value for at least one of the chunks."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 475,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2556,
									"name": "fn",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "a function to call on each chunk of the stream. Async or not."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2557,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/stream.d.ts",
													"line": 476,
													"character": 16
												}
											],
											"signatures": [
												{
													"id": 2558,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/stream.d.ts",
															"line": 476,
															"character": 16
														}
													],
													"parameters": [
														{
															"id": 2559,
															"name": "data",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2560,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Pick"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "node_modules/@types/node/stream.d.ts",
																			"qualifiedName": "ArrayOptions"
																		},
																		"name": "ArrayOptions",
																		"package": "@types/node"
																	},
																	{
																		"type": "literal",
																		"value": "signal"
																	}
																],
																"name": "Pick",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"id": 2561,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/stream.d.ts",
											"qualifiedName": "ArrayOptions"
										},
										"name": "ArrayOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.some"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.some"
					}
				},
				{
					"id": 2598,
					"name": "take",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 534,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2599,
							"name": "take",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method returns a new stream with the first *limit* chunks."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v17.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a stream with *limit* chunks taken."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 534,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2600,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the number of chunks to take from the readable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2601,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/stream.d.ts",
													"qualifiedName": "ArrayOptions"
												},
												"name": "ArrayOptions",
												"package": "@types/node"
											},
											{
												"type": "literal",
												"value": "signal"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/node/stream.d.ts",
									"qualifiedName": "internal.Readable"
								},
								"name": "Readable",
								"package": "@types/node",
								"qualifiedName": "internal.Readable"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.take"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.take"
					}
				},
				{
					"id": 2551,
					"name": "toArray",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 465,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2552,
							"name": "toArray",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method allows easily obtaining the contents of a stream.\n\nAs this method reads the entire stream into memory, it negates the benefits of streams. It's intended\nfor interoperability and convenience, not as the primary way to consume streams."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v17.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a promise containing an array with the contents of the stream."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 465,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2553,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/node/stream.d.ts",
													"qualifiedName": "ArrayOptions"
												},
												"name": "ArrayOptions",
												"package": "@types/node"
											},
											{
												"type": "literal",
												"value": "signal"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.toArray"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.toArray"
					}
				},
				{
					"id": 2417,
					"name": "uncork",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 1120,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 2418,
							"name": "uncork",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 1120,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.uncork"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.uncork"
					}
				},
				{
					"id": 2508,
					"name": "unpipe",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 314,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2509,
							"name": "unpipe",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "code",
										"text": "`readable.unpipe()`"
									},
									{
										"kind": "text",
										"text": " method detaches a "
									},
									{
										"kind": "code",
										"text": "`Writable`"
									},
									{
										"kind": "text",
										"text": " stream previously attached\nusing the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "pipe",
										"target": 2633,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method.\n\nIf the "
									},
									{
										"kind": "code",
										"text": "`destination`"
									},
									{
										"kind": "text",
										"text": " is not specified, then _all_ pipes are detached.\n\nIf the "
									},
									{
										"kind": "code",
										"text": "`destination`"
									},
									{
										"kind": "text",
										"text": " is specified, but no pipe is set up for it, then\nthe method does nothing.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst fs = require('node:fs');\nconst readable = getReadableStreamSomehow();\nconst writable = fs.createWriteStream('file.txt');\n// All the data from readable goes into 'file.txt',\n// but only for the first second.\nreadable.pipe(writable);\nsetTimeout(() => {\n  console.log('Stop writing to file.txt.');\n  readable.unpipe(writable);\n  console.log('Manually close the file stream.');\n  writable.end();\n}, 1000);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.4"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 314,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2510,
									"name": "destination",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional specific stream to unpipe"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/globals.d.ts",
											"qualifiedName": "__global.NodeJS.WritableStream"
										},
										"name": "WritableStream",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.WritableStream"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.unpipe"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.unpipe"
					}
				},
				{
					"id": 2011,
					"name": "unref",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 235,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2012,
							"name": "unref",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Calling "
									},
									{
										"kind": "code",
										"text": "`unref()`"
									},
									{
										"kind": "text",
										"text": " on a socket will allow the program to exit if this is the only\nactive socket in the event system. If the socket is already "
									},
									{
										"kind": "code",
										"text": "`unref`"
									},
									{
										"kind": "text",
										"text": "ed calling"
									},
									{
										"kind": "code",
										"text": "`unref()`"
									},
									{
										"kind": "text",
										"text": " again will have no effect."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.1"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The socket itself."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 235,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.unref"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.unref"
					}
				},
				{
					"id": 2511,
					"name": "unshift",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 380,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2512,
							"name": "unshift",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Passing "
									},
									{
										"kind": "code",
										"text": "`chunk`"
									},
									{
										"kind": "text",
										"text": " as "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " signals the end of the stream (EOF) and behaves the\nsame as "
									},
									{
										"kind": "code",
										"text": "`readable.push(null)`"
									},
									{
										"kind": "text",
										"text": ", after which no more data can be written. The EOF\nsignal is put at the end of the buffer and any buffered data will still be\nflushed.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`readable.unshift()`"
									},
									{
										"kind": "text",
										"text": " method pushes a chunk of data back into the internal\nbuffer. This is useful in certain situations where a stream is being consumed by\ncode that needs to \"un-consume\" some amount of data that it has optimistically\npulled out of the source, so that the data can be passed on to some other party.\n\nThe "
									},
									{
										"kind": "code",
										"text": "`stream.unshift(chunk)`"
									},
									{
										"kind": "text",
										"text": " method cannot be called after the "
									},
									{
										"kind": "code",
										"text": "`'end'`"
									},
									{
										"kind": "text",
										"text": " event\nhas been emitted or a runtime error will be thrown.\n\nDevelopers using "
									},
									{
										"kind": "code",
										"text": "`stream.unshift()`"
									},
									{
										"kind": "text",
										"text": " often should consider switching to\nuse of a "
									},
									{
										"kind": "code",
										"text": "`Transform`"
									},
									{
										"kind": "text",
										"text": " stream instead. See the "
									},
									{
										"kind": "code",
										"text": "`API for stream implementers`"
									},
									{
										"kind": "text",
										"text": " section for more information.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\n// Pull off a header delimited by \\n\\n.\n// Use unshift() if we get too much.\n// Call the callback with (error, header, stream).\nconst { StringDecoder } = require('node:string_decoder');\nfunction parseHeader(stream, callback) {\n  stream.on('error', callback);\n  stream.on('readable', onReadable);\n  const decoder = new StringDecoder('utf8');\n  let header = '';\n  function onReadable() {\n    let chunk;\n    while (null !== (chunk = stream.read())) {\n      const str = decoder.write(chunk);\n      if (str.includes('\\n\\n')) {\n        // Found the header boundary.\n        const split = str.split(/\\n\\n/);\n        header += split.shift();\n        const remaining = split.join('\\n\\n');\n        const buf = Buffer.from(remaining, 'utf8');\n        stream.removeListener('error', callback);\n        // Remove the 'readable' listener before unshifting.\n        stream.removeListener('readable', onReadable);\n        if (buf.length)\n          stream.unshift(buf);\n        // Now the body of the message can be read from the stream.\n        callback(null, header, stream);\n        return;\n      }\n      // Still reading the header.\n      header += str;\n    }\n  }\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nUnlike "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "push",
										"target": 2518,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`stream.unshift(chunk)`"
									},
									{
										"kind": "text",
										"text": " will not\nend the reading process by resetting the internal reading state of the stream.\nThis can cause unexpected results if "
									},
									{
										"kind": "code",
										"text": "`readable.unshift()`"
									},
									{
										"kind": "text",
										"text": " is called during a\nread (i.e. from within a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "_read",
										"target": 2500,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " implementation on a\ncustom stream). Following the call to "
									},
									{
										"kind": "code",
										"text": "`readable.unshift()`"
									},
									{
										"kind": "text",
										"text": " with an immediate "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "push",
										"target": 2518,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " will reset the reading state appropriately,\nhowever it is best to simply avoid calling "
									},
									{
										"kind": "code",
										"text": "`readable.unshift()`"
									},
									{
										"kind": "text",
										"text": " while in the\nprocess of performing a read."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.11"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 380,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2513,
									"name": "chunk",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Chunk of data to unshift onto the read queue. For streams not operating in object mode, "
											},
											{
												"kind": "code",
												"text": "`chunk`"
											},
											{
												"kind": "text",
												"text": " must be a string, "
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`Uint8Array`"
											},
											{
												"kind": "text",
												"text": ", or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": ". For object mode\nstreams, "
											},
											{
												"kind": "code",
												"text": "`chunk`"
											},
											{
												"kind": "text",
												"text": " may be any JavaScript value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2514,
									"name": "encoding",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Encoding of string chunks. Must be a valid "
											},
											{
												"kind": "code",
												"text": "`Buffer`"
											},
											{
												"kind": "text",
												"text": " encoding, such as "
											},
											{
												"kind": "code",
												"text": "`'utf8'`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`'ascii'`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.BufferEncoding"
										},
										"name": "BufferEncoding",
										"package": "@types/node",
										"qualifiedName": "__global.BufferEncoding"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.unshift"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.unshift"
					}
				},
				{
					"id": 2515,
					"name": "wrap",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/stream.d.ts",
							"line": 406,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 2516,
							"name": "wrap",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prior to Node.js 0.10, streams did not implement the entire "
									},
									{
										"kind": "code",
										"text": "`node:stream`"
									},
									{
										"kind": "text",
										"text": "module API as it is currently defined. (See "
									},
									{
										"kind": "code",
										"text": "`Compatibility`"
									},
									{
										"kind": "text",
										"text": " for more\ninformation.)\n\nWhen using an older Node.js library that emits "
									},
									{
										"kind": "code",
										"text": "`'data'`"
									},
									{
										"kind": "text",
										"text": " events and has a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "pause",
										"target": 1989,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method that is advisory only, the"
									},
									{
										"kind": "code",
										"text": "`readable.wrap()`"
									},
									{
										"kind": "text",
										"text": " method can be used to create a "
									},
									{
										"kind": "code",
										"text": "`Readable`"
									},
									{
										"kind": "text",
										"text": "\nstream that uses\nthe old stream as its data source.\n\nIt will rarely be necessary to use "
									},
									{
										"kind": "code",
										"text": "`readable.wrap()`"
									},
									{
										"kind": "text",
										"text": " but the method has been\nprovided as a convenience for interacting with older Node.js applications and\nlibraries.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { OldReader } = require('./old-api-module.js');\nconst { Readable } = require('node:stream');\nconst oreader = new OldReader();\nconst myReader = new Readable().wrap(oreader);\n\nmyReader.on('readable', () => {\n  myReader.read(); // etc.\n});\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.4"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 406,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 2517,
									"name": "stream",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An \"old style\" readable stream"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/globals.d.ts",
											"qualifiedName": "__global.NodeJS.ReadableStream"
										},
										"name": "ReadableStream",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.ReadableStream"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1942,
								"name": "ISocket",
								"package": "@akarui/aoi.db"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.wrap"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.wrap"
					}
				},
				{
					"id": 1950,
					"name": "write",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 115,
							"character": 8
						},
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 116,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 1951,
							"name": "write",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sends data on the socket. The second parameter specifies the encoding in the\ncase of a string. It defaults to UTF8 encoding.\n\nReturns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the entire data was flushed successfully to the kernel\nbuffer. Returns "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " if all or part of the data was queued in user memory."
									},
									{
										"kind": "code",
										"text": "`'drain'`"
									},
									{
										"kind": "text",
										"text": " will be emitted when the buffer is again free.\n\nThe optional "
									},
									{
										"kind": "code",
										"text": "`callback`"
									},
									{
										"kind": "text",
										"text": " parameter will be executed when the data is finally\nwritten out, which may not be immediately.\n\nSee "
									},
									{
										"kind": "code",
										"text": "`Writable`"
									},
									{
										"kind": "text",
										"text": " stream "
									},
									{
										"kind": "code",
										"text": "`write()`"
									},
									{
										"kind": "text",
										"text": " method for more\ninformation."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.90"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 115,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1952,
									"name": "buffer",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 1953,
									"name": "cb",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1954,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 115,
													"character": 48
												}
											],
											"signatures": [
												{
													"id": 1955,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 115,
															"character": 48
														}
													],
													"parameters": [
														{
															"id": 1956,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.write"
							}
						},
						{
							"id": 1957,
							"name": "write",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/net.d.ts",
									"line": 116,
									"character": 8
								}
							],
							"parameters": [
								{
									"id": 1958,
									"name": "str",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 1959,
									"name": "encoding",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/node/buffer.d.ts",
											"qualifiedName": "__global.BufferEncoding"
										},
										"name": "BufferEncoding",
										"package": "@types/node",
										"qualifiedName": "__global.BufferEncoding"
									}
								},
								{
									"id": 1960,
									"name": "cb",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1961,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/net.d.ts",
													"line": 116,
													"character": 72
												}
											],
											"signatures": [
												{
													"id": 1962,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/node/net.d.ts",
															"line": 116,
															"character": 72
														}
													],
													"parameters": [
														{
															"id": 1963,
															"name": "err",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Socket.write"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Socket.write"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						2380,
						2015,
						2016,
						2017,
						2018,
						2378,
						2019,
						2021,
						2379,
						2022,
						2024,
						2023,
						2020,
						2486,
						2485,
						2487,
						2488,
						2489,
						2490,
						2491,
						2492,
						2493,
						2025,
						2026,
						2027,
						2028,
						2029,
						1943,
						2370,
						2376,
						2371,
						2372,
						2373,
						2374,
						2377,
						2375
					]
				},
				{
					"title": "Methods",
					"children": [
						2631,
						2629,
						2647,
						2494,
						2399,
						2406,
						2500,
						2381,
						2389,
						2046,
						2008,
						2602,
						2640,
						1964,
						2415,
						2626,
						1948,
						2594,
						2105,
						2030,
						2677,
						2578,
						2535,
						2562,
						2586,
						2543,
						2665,
						2506,
						2522,
						2673,
						2667,
						2527,
						2652,
						2134,
						2193,
						1989,
						2633,
						2252,
						2311,
						2518,
						2670,
						2503,
						2605,
						2013,
						2659,
						2419,
						1991,
						1993,
						2412,
						1986,
						2004,
						2662,
						2001,
						1995,
						2554,
						2598,
						2551,
						2417,
						2508,
						2011,
						2511,
						2515,
						1950
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/typings/interface.ts",
					"line": 61,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L61"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@types/node/net.d.ts",
						"qualifiedName": "\"net\".Socket"
					},
					"name": "Socket",
					"package": "@types/node",
					"qualifiedName": "\"net\".Socket"
				}
			]
		},
		{
			"id": 602,
			"name": "KeyValueCacheConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 603,
					"name": "cache",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 34,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L34"
						}
					],
					"type": {
						"type": "reference",
						"target": 7,
						"name": "CacheType",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 605,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 36,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L36"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 604,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L35"
						}
					],
					"type": {
						"type": "reference",
						"target": 48,
						"name": "ReferenceType",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 607,
					"name": "sortFunction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L38"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 608,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/KeyValue/typings/interface.ts",
									"line": 38,
									"character": 19,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L38"
								}
							],
							"signatures": [
								{
									"id": 609,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/KeyValue/typings/interface.ts",
											"line": 38,
											"character": 19,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L38"
										}
									],
									"parameters": [
										{
											"id": 610,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 611,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				},
				{
					"id": 606,
					"name": "sorted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L37"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						603,
						605,
						604,
						607,
						606
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 33,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L33"
				}
			]
		},
		{
			"id": 588,
			"name": "KeyValueDataConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 589,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 14,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 591,
					"name": "referencePath",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L16"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 590,
					"name": "tables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L15"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						589,
						591,
						590
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 13,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L13"
				}
			]
		},
		{
			"id": 614,
			"name": "KeyValueDataInterface",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 615,
					"name": "file",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L47"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 617,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 49,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L49"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 618,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L50"
						}
					],
					"type": {
						"type": "reference",
						"target": 639,
						"name": "KeyValueTypeList",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 616,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L48"
						}
					],
					"type": {
						"type": "reference",
						"target": 640,
						"name": "KeyValueDataValueType",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						615,
						617,
						618,
						616
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 46,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L46"
				}
			]
		},
		{
			"id": 599,
			"name": "KeyValueEncryptionConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 601,
					"name": "encriptData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 600,
					"name": "securityKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						601,
						600
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 28,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L28"
				}
			]
		},
		{
			"id": 592,
			"name": "KeyValueFileConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 593,
					"name": "extension",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L20"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 595,
					"name": "maxSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L22"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 598,
					"name": "minFileCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 596,
					"name": "reHashOnStartup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 597,
					"name": "staticRehash",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 24,
							"character": 1,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 594,
					"name": "transactionLogPath",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L21"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						593,
						595,
						598,
						596,
						597,
						594
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 19,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L19"
				}
			]
		},
		{
			"id": 624,
			"name": "KeyValueJSONOption",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 626,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 63,
							"character": 2,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L63"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 627,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 64,
							"character": 2,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L64"
						}
					],
					"type": {
						"type": "reference",
						"target": 639,
						"name": "KeyValueTypeList",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 625,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 62,
							"character": 2,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L62"
						}
					],
					"type": {
						"type": "reference",
						"target": 640,
						"name": "KeyValueDataValueType",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						626,
						627,
						625
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 61,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L61"
				}
			]
		},
		{
			"id": 582,
			"name": "KeyValueOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 586,
					"name": "cacheConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 9,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L9"
						}
					],
					"type": {
						"type": "reference",
						"target": 602,
						"name": "KeyValueCacheConfig",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 583,
					"name": "dataConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 6,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L6"
						}
					],
					"type": {
						"type": "reference",
						"target": 588,
						"name": "KeyValueDataConfig",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 587,
					"name": "debug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 585,
					"name": "encryptionConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L8"
						}
					],
					"type": {
						"type": "reference",
						"target": 599,
						"name": "KeyValueEncryptionConfig",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 584,
					"name": "fileConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 7,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L7"
						}
					],
					"type": {
						"type": "reference",
						"target": 592,
						"name": "KeyValueFileConfig",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						586,
						583,
						587,
						585,
						584
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 5,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L5"
				}
			]
		},
		{
			"id": 612,
			"name": "KeyValueTableOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 613,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L42"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						613
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 41,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L41"
				}
			]
		},
		{
			"id": 619,
			"name": "LogBlock",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 620,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 54,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L54"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 623,
					"name": "method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 57,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L57"
						}
					],
					"type": {
						"type": "reference",
						"target": 14,
						"name": "DatabaseMethod",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 622,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 56,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L56"
						}
					],
					"type": {
						"type": "reference",
						"target": 639,
						"name": "KeyValueTypeList",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 621,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/interface.ts",
							"line": 55,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L55"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						620,
						623,
						622,
						621
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/interface.ts",
					"line": 53,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/interface.ts#L53"
				}
			]
		},
		{
			"id": 1329,
			"name": "MemMapOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1330,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1331,
					"name": "sortFunction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L16"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1332,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/typings/interface.ts",
									"line": 16,
									"character": 18,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L16"
								}
							],
							"signatures": [
								{
									"id": 1333,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/WideColumnar/typings/interface.ts",
											"line": 16,
											"character": 18,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L16"
										}
									],
									"parameters": [
										{
											"id": 1334,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										},
										{
											"id": 1335,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1330,
						1331
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/typings/interface.ts",
					"line": 14,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L14"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1361,
					"name": "WideColumnarCacheConfig"
				}
			]
		},
		{
			"id": 1922,
			"name": "ReceiverDataFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1928,
					"name": "c",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 41,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L41"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1927,
					"name": "d",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1929,
					"name": "h",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L42"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1924,
					"name": "m",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L37"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1923,
					"name": "op",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 36,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L36"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1926,
					"name": "s",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L39"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1930,
					"name": "se",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L43"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1925,
					"name": "t",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1928,
						1927,
						1929,
						1924,
						1923,
						1926,
						1930,
						1925
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/typings/interface.ts",
					"line": 35,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L35"
				}
			]
		},
		{
			"id": 1904,
			"name": "ReceiverOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1907,
					"name": "backlog",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 14,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1909,
					"name": "databaseOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L16"
						}
					],
					"type": {
						"type": "reference",
						"target": 582,
						"name": "KeyValueOptions",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1908,
					"name": "databaseType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L15"
						}
					],
					"type": {
						"type": "literal",
						"value": "KeyValue"
					}
				},
				{
					"id": 1905,
					"name": "host",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1906,
					"name": "port",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1910,
					"name": "userConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L17"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1911,
							"name": "UserConfig",
							"package": "@akarui/aoi.db"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1907,
						1909,
						1908,
						1905,
						1906,
						1910
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/typings/interface.ts",
					"line": 11,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L11"
				}
			]
		},
		{
			"id": 1939,
			"name": "TransmitterAnaylzeDataFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1941,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 58,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L58"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1940,
					"name": "method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 57,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L57"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "Set"
							},
							{
								"type": "literal",
								"value": "Delete"
							},
							{
								"type": "literal",
								"value": "Flush"
							},
							{
								"type": "literal",
								"value": "Clear"
							},
							{
								"type": "literal",
								"value": "Replicate"
							},
							{
								"type": "literal",
								"value": "Backup"
							},
							{
								"type": "literal",
								"value": "Restore"
							},
							{
								"type": "literal",
								"value": "NewFile"
							},
							{
								"type": "literal",
								"value": "Ping"
							},
							{
								"type": "literal",
								"value": "Get"
							},
							{
								"type": "literal",
								"value": "All"
							},
							{
								"type": "literal",
								"value": "Has"
							},
							{
								"type": "literal",
								"value": "NOOP"
							},
							{
								"type": "literal",
								"value": "FindOne"
							},
							{
								"type": "literal",
								"value": "FindMany"
							},
							{
								"type": "literal",
								"value": "DeleteMany"
							},
							{
								"type": "literal",
								"value": "Analyze"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1941,
						1940
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/typings/interface.ts",
					"line": 56,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L56"
				}
			]
		},
		{
			"id": 1915,
			"name": "TransmitterCreateOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1917,
					"name": "dbOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L29"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1918,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1920,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/Remote/typings/interface.ts",
											"line": 31,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L31"
										}
									],
									"type": {
										"type": "reference",
										"target": 2679,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "Type",
												"refersToTypeParameter": true
											}
										],
										"name": "DatabaseOptions",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"id": 1919,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/Remote/typings/interface.ts",
											"line": 30,
											"character": 8,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L30"
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "Type",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1920,
										1919
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/Remote/typings/interface.ts",
									"line": 29,
									"character": 15,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L29"
								}
							]
						}
					}
				},
				{
					"id": 1916,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L28"
						}
					],
					"type": {
						"type": "templateLiteral",
						"head": "aoidb://",
						"tail": [
							[
								{
									"type": "intrinsic",
									"name": "string"
								},
								":"
							],
							[
								{
									"type": "intrinsic",
									"name": "string"
								},
								"@"
							],
							[
								{
									"type": "intrinsic",
									"name": "string"
								},
								":"
							],
							[
								{
									"type": "intrinsic",
									"name": "number"
								},
								""
							]
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1917,
						1916
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/typings/interface.ts",
					"line": 27,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L27"
				}
			],
			"typeParameters": [
				{
					"id": 1921,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 2685,
						"name": "PossibleDatabaseTypes",
						"package": "@akarui/aoi.db"
					}
				}
			]
		},
		{
			"id": 1931,
			"name": "TransmitterDataFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1936,
					"name": "d",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 51,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L51"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1937,
					"name": "h",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 52,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L52"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1933,
					"name": "m",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1932,
					"name": "op",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L47"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1935,
					"name": "s",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L50"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1938,
					"name": "se",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 53,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L53"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1934,
					"name": "t",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 49,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L49"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1936,
						1937,
						1933,
						1932,
						1935,
						1938,
						1934
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/typings/interface.ts",
					"line": 46,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L46"
				}
			]
		},
		{
			"id": 1881,
			"name": "TransmitterOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1899,
					"name": "allowHalfOpen",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 31,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.allowHalfOpen"
					}
				},
				{
					"id": 1895,
					"name": "autoSelectFamily",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v18.13.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 67,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.autoSelectFamily"
					}
				},
				{
					"id": 1896,
					"name": "autoSelectFamilyAttemptTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v18.13.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 71,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.autoSelectFamilyAttemptTimeout"
					}
				},
				{
					"id": 1890,
					"name": "family",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 59,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.family"
					}
				},
				{
					"id": 1898,
					"name": "fd",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 30,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.fd"
					}
				},
				{
					"id": 1889,
					"name": "hints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 58,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.hints"
					}
				},
				{
					"id": 1886,
					"name": "host",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 55,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.host"
					}
				},
				{
					"id": 1893,
					"name": "keepAlive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 62,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.keepAlive"
					}
				},
				{
					"id": 1894,
					"name": "keepAliveInitialDelay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 63,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.keepAliveInitialDelay"
					}
				},
				{
					"id": 1887,
					"name": "localAddress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 56,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.localAddress"
					}
				},
				{
					"id": 1888,
					"name": "localPort",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 57,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.localPort"
					}
				},
				{
					"id": 1891,
					"name": "lookup",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 60,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@types/node/net.d.ts",
							"qualifiedName": "\"net\".LookupFunction"
						},
						"name": "LookupFunction",
						"package": "@types/node",
						"qualifiedName": "\"net\".LookupFunction"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.lookup"
					}
				},
				{
					"id": 1892,
					"name": "noDelay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 61,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.noDelay"
					}
				},
				{
					"id": 1897,
					"name": "onread",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If specified, incoming data is stored in a single buffer and passed to the supplied callback when data arrives on the socket.\nNote: this will cause the streaming functionality to not provide any data, however events like 'error', 'end', and 'close' will\nstill be emitted as normal and methods like pause() and resume() will also behave as expected."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 51,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@types/node/net.d.ts",
							"qualifiedName": "\"net\".OnReadOpts"
						},
						"name": "OnReadOpts",
						"package": "@types/node",
						"qualifiedName": "\"net\".OnReadOpts"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.onread"
					}
				},
				{
					"id": 1883,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1885,
					"name": "port",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 54,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.port"
					}
				},
				{
					"id": 1900,
					"name": "readable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 32,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.readable"
					}
				},
				{
					"id": 1902,
					"name": "signal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 34,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.dom.d.ts",
							"qualifiedName": "AbortSignal"
						},
						"name": "AbortSignal",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.signal"
					}
				},
				{
					"id": 1884,
					"name": "timeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 741,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.timeout"
					}
				},
				{
					"id": 1882,
					"name": "username",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 7,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1901,
					"name": "writable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/net.d.ts",
							"line": 33,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TcpNetConnectOpts.writable"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1899,
						1895,
						1896,
						1890,
						1898,
						1889,
						1886,
						1893,
						1894,
						1887,
						1888,
						1891,
						1892,
						1897,
						1883,
						1885,
						1900,
						1902,
						1884,
						1882,
						1901
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/typings/interface.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L6"
				}
			],
			"typeParameters": [
				{
					"id": 1903,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 2685,
						"name": "PossibleDatabaseTypes",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/@types/node/net.d.ts",
						"qualifiedName": "\"net\".TcpNetConnectOpts"
					},
					"name": "TcpNetConnectOpts",
					"package": "@types/node",
					"qualifiedName": "\"net\".TcpNetConnectOpts"
				}
			]
		},
		{
			"id": 1911,
			"name": "UserConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1914,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1913,
					"name": "permissions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L22"
						}
					],
					"type": {
						"type": "reference",
						"target": 2699,
						"name": "Permissions",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1912,
					"name": "username",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/Remote/typings/interface.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L21"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1914,
						1913,
						1912
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/Remote/typings/interface.ts",
					"line": 20,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/interface.ts#L20"
				}
			]
		},
		{
			"id": 1361,
			"name": "WideColumnarCacheConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1363,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1330,
						"name": "MemMapOptions.limit"
					}
				},
				{
					"id": 1362,
					"name": "referenceType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 58,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L58"
						}
					],
					"type": {
						"type": "reference",
						"target": 48,
						"name": "ReferenceType",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1364,
					"name": "sortFunction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L16"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1365,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "lib/WideColumnar/typings/interface.ts",
									"line": 16,
									"character": 18,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L16"
								}
							],
							"signatures": [
								{
									"id": 1366,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/WideColumnar/typings/interface.ts",
											"line": 16,
											"character": 18,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L16"
										}
									],
									"parameters": [
										{
											"id": 1367,
											"name": "a",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										},
										{
											"id": 1368,
											"name": "b",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1071,
												"name": "default",
												"package": "@akarui/aoi.db"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1331,
						"name": "MemMapOptions.sortFunction"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1363,
						1362,
						1364
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/typings/interface.ts",
					"line": 57,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L57"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1329,
					"name": "MemMapOptions",
					"package": "@akarui/aoi.db"
				}
			]
		},
		{
			"id": 1324,
			"name": "WideColumnarColumnOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1327,
					"name": "default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1325,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1326,
					"name": "primaryKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 9,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1328,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 11,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": 1369,
						"name": "ColumnType",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1327,
						1325,
						1326,
						1328
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/typings/interface.ts",
					"line": 7,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L7"
				}
			]
		},
		{
			"id": 1346,
			"name": "WideColumnarDataConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1347,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L35"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1352,
					"name": "referencePath",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1348,
					"name": "tables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 36,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L36"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 1349,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 1351,
										"name": "columns",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/WideColumnar/typings/interface.ts",
												"line": 38,
												"character": 8,
												"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L38"
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 940,
														"name": "default",
														"package": "@akarui/aoi.db"
													}
												},
												{
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 1324,
														"name": "WideColumnarColumnOptions",
														"package": "@akarui/aoi.db"
													}
												}
											]
										}
									},
									{
										"id": 1350,
										"name": "name",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "lib/WideColumnar/typings/interface.ts",
												"line": 37,
												"character": 8,
												"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L37"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											1351,
											1350
										]
									}
								],
								"sources": [
									{
										"fileName": "lib/WideColumnar/typings/interface.ts",
										"line": 36,
										"character": 13,
										"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L36"
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1347,
						1352,
						1348
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/typings/interface.ts",
					"line": 34,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L34"
				}
			]
		},
		{
			"id": 1336,
			"name": "WideColumnarDataInterface",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1337,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L21"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1339,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L23"
						}
					],
					"type": {
						"type": "reference",
						"target": 1369,
						"name": "ColumnType",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1338,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L22"
						}
					],
					"type": {
						"type": "reference",
						"target": 1370,
						"name": "WideColumnarDataType",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1337,
						1339,
						1338
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/typings/interface.ts",
					"line": 20,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L20"
				}
			]
		},
		{
			"id": 1355,
			"name": "WideColumnarEncryptionConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1356,
					"name": "securityKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1356
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/typings/interface.ts",
					"line": 47,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L47"
				}
			]
		},
		{
			"id": 1353,
			"name": "WideColumnarFileConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1354,
					"name": "extension",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L44"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1354
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/typings/interface.ts",
					"line": 43,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L43"
				}
			]
		},
		{
			"id": 1340,
			"name": "WideColumnarOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1344,
					"name": "cacheConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L30"
						}
					],
					"type": {
						"type": "reference",
						"target": 1361,
						"name": "WideColumnarCacheConfig",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1341,
					"name": "dataConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L27"
						}
					],
					"type": {
						"type": "reference",
						"target": 1346,
						"name": "WideColumnarDataConfig",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1345,
					"name": "debug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 31,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1343,
					"name": "encryptionConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L29"
						}
					],
					"type": {
						"type": "reference",
						"target": 1355,
						"name": "WideColumnarEncryptionConfig",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1342,
					"name": "fileConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"target": 1353,
						"name": "WideColumnarFileConfig",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1344,
						1341,
						1345,
						1343,
						1342
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/typings/interface.ts",
					"line": 26,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L26"
				}
			]
		},
		{
			"id": 1357,
			"name": "WideColumnarTableOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1359,
					"name": "columns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 53,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L53"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 940,
									"name": "default",
									"package": "@akarui/aoi.db"
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1324,
									"name": "WideColumnarColumnOptions",
									"package": "@akarui/aoi.db"
								}
							}
						]
					}
				},
				{
					"id": 1360,
					"name": "db",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 54,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L54"
						}
					],
					"type": {
						"type": "reference",
						"target": 692,
						"name": "default",
						"package": "@akarui/aoi.db"
					}
				},
				{
					"id": 1358,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/WideColumnar/typings/interface.ts",
							"line": 52,
							"character": 4,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L52"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1359,
						1360,
						1358
					]
				}
			],
			"sources": [
				{
					"fileName": "lib/WideColumnar/typings/interface.ts",
					"line": 51,
					"character": 17,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/interface.ts#L51"
				}
			]
		},
		{
			"id": 1369,
			"name": "ColumnType",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/WideColumnar/typings/types.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/types.ts#L1"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "string"
					},
					{
						"type": "literal",
						"value": "number"
					},
					{
						"type": "literal",
						"value": "boolean"
					},
					{
						"type": "literal",
						"value": "object"
					},
					{
						"type": "literal",
						"value": "null"
					},
					{
						"type": "literal",
						"value": "undefined"
					},
					{
						"type": "literal",
						"value": "bigint"
					},
					{
						"type": "literal",
						"value": "date"
					}
				]
			}
		},
		{
			"id": 2679,
			"name": "DatabaseOptions",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/Remote/typings/type.ts",
					"line": 7,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/type.ts#L7"
				}
			],
			"typeParameters": [
				{
					"id": 2680,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 2685,
						"name": "PossibleDatabaseTypes",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": -1,
					"name": "Type",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "literal",
					"value": "KeyValue"
				},
				"trueType": {
					"type": "reference",
					"target": 582,
					"name": "KeyValueOptions",
					"package": "@akarui/aoi.db"
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 637,
			"name": "DeepRequired",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/type.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/type.ts#L1"
				}
			],
			"typeParameters": [
				{
					"id": 638,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "reference",
							"target": 637,
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "DeepRequired",
							"package": "@akarui/aoi.db"
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Required"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "Required",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 2681,
			"name": "Key",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/Remote/typings/type.ts",
					"line": 9,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/type.ts#L9"
				}
			],
			"typeParameters": [
				{
					"id": 2682,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 2685,
						"name": "PossibleDatabaseTypes",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": -1,
					"name": "Type",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "literal",
					"value": "KeyValue"
				},
				"trueType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "literal",
						"value": "key"
					},
					"objectType": {
						"type": "reference",
						"target": 85,
						"name": "KeyValueData",
						"package": "@akarui/aoi.db",
						"qualifiedName": "default"
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 640,
			"name": "KeyValueDataValueType",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/type.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/type.ts#L15"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 640,
							"name": "KeyValueDataValueType",
							"package": "@akarui/aoi.db"
						}
					},
					{
						"type": "reference",
						"target": 641,
						"name": "ValidJSON",
						"package": "@akarui/aoi.db"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 639,
			"name": "KeyValueTypeList",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/type.ts",
					"line": 4,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/type.ts#L4"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "string"
					},
					{
						"type": "literal",
						"value": "bigint"
					},
					{
						"type": "literal",
						"value": "number"
					},
					{
						"type": "literal",
						"value": "null"
					},
					{
						"type": "literal",
						"value": "boolean"
					},
					{
						"type": "literal",
						"value": "object"
					},
					{
						"type": "literal",
						"value": "date"
					},
					{
						"type": "literal",
						"value": "symbol"
					},
					{
						"type": "literal",
						"value": "undefined"
					},
					{
						"type": "literal",
						"value": "function"
					}
				]
			}
		},
		{
			"id": 4,
			"name": "Optional",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/typings/type.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/typings/type.ts#L1"
				}
			],
			"typeParameters": [
				{
					"id": 5,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 6,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "Partial",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						],
						"name": "Pick",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "K",
								"refersToTypeParameter": true
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 2685,
			"name": "PossibleDatabaseTypes",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/Remote/typings/type.ts",
					"line": 12,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/type.ts#L12"
				}
			],
			"type": {
				"type": "literal",
				"value": "KeyValue"
			}
		},
		{
			"id": 641,
			"name": "ValidJSON",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/KeyValue/typings/type.ts",
					"line": 25,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/type.ts#L25"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 642,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/KeyValue/typings/type.ts",
							"line": 25,
							"character": 24,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/type.ts#L25"
						}
					],
					"indexSignature": {
						"id": 643,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"sources": [
							{
								"fileName": "lib/KeyValue/typings/type.ts",
								"line": 26,
								"character": 4,
								"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/type.ts#L26"
							}
						],
						"parameters": [
							{
								"id": 644,
								"name": "x",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							}
						],
						"type": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 641,
									"name": "ValidJSON",
									"package": "@akarui/aoi.db"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 641,
										"name": "ValidJSON",
										"package": "@akarui/aoi.db"
									}
								},
								{
									"type": "literal",
									"value": null
								},
								{
									"type": "intrinsic",
									"name": "boolean"
								},
								{
									"type": "intersection",
									"types": [
										{
											"type": "intrinsic",
											"name": "unknown"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 645,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 646,
														"name": "toJSON",
														"variant": "declaration",
														"kind": 2048,
														"flags": {},
														"sources": [
															{
																"fileName": "lib/KeyValue/typings/type.ts",
																"line": 33,
																"character": 23,
																"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/type.ts#L33"
															}
														],
														"signatures": [
															{
																"id": 647,
																"name": "toJSON",
																"variant": "signature",
																"kind": 4096,
																"flags": {},
																"sources": [
																	{
																		"fileName": "lib/KeyValue/typings/type.ts",
																		"line": 33,
																		"character": 23,
																		"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/type.ts#L33"
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 641,
																	"name": "ValidJSON",
																	"package": "@akarui/aoi.db"
																}
															}
														]
													}
												],
												"groups": [
													{
														"title": "Methods",
														"children": [
															646
														]
													}
												],
												"sources": [
													{
														"fileName": "lib/KeyValue/typings/type.ts",
														"line": 33,
														"character": 21,
														"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/KeyValue/typings/type.ts#L33"
													}
												]
											}
										}
									]
								}
							]
						}
					}
				}
			}
		},
		{
			"id": 2683,
			"name": "Value",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/Remote/typings/type.ts",
					"line": 10,
					"character": 12,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/Remote/typings/type.ts#L10"
				}
			],
			"typeParameters": [
				{
					"id": 2684,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 2685,
						"name": "PossibleDatabaseTypes",
						"package": "@akarui/aoi.db"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": -1,
					"name": "Type",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "literal",
					"value": "KeyValue"
				},
				"trueType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "literal",
						"value": "value"
					},
					"objectType": {
						"type": "reference",
						"target": 85,
						"name": "KeyValueData",
						"package": "@akarui/aoi.db",
						"qualifiedName": "default"
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 1370,
			"name": "WideColumnarDataType",
			"variant": "declaration",
			"kind": 4194304,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/WideColumnar/typings/types.ts",
					"line": 11,
					"character": 16,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/WideColumnar/typings/types.ts#L11"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "object"
					},
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 691,
			"name": "ReferenceConstantSpace",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 35,
					"character": 13,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L35"
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			},
			"defaultValue": "..."
		},
		{
			"id": 670,
			"name": "JSONParser",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 49,
					"character": 16,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L49"
				}
			],
			"signatures": [
				{
					"id": 671,
					"name": "JSONParser",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 49,
							"character": 0,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L49"
						}
					],
					"parameters": [
						{
							"id": 672,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 673,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 674,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/utils.ts",
											"line": 52,
											"character": 6,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L52"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "..."
								},
								{
									"id": 675,
									"name": "isBroken",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "lib/utils.ts",
											"line": 53,
											"character": 6,
											"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L53"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										674,
										675
									]
								}
							],
							"sources": [
								{
									"fileName": "lib/utils.ts",
									"line": 51,
									"character": 11,
									"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L51"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 680,
			"name": "checkIfTargetPresentInBitWiseOr",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 112,
					"character": 16,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L112"
				}
			],
			"signatures": [
				{
					"id": 681,
					"name": "checkIfTargetPresentInBitWiseOr",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 112,
							"character": 0,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L112"
						}
					],
					"parameters": [
						{
							"id": 682,
							"name": "num",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 683,
							"name": "target",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 676,
			"name": "convertV1KeyValuetov2",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 78,
					"character": 22,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L78"
				}
			],
			"signatures": [
				{
					"id": 677,
					"name": "convertV1KeyValuetov2",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 78,
							"character": 0,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L78"
						}
					],
					"parameters": [
						{
							"id": 678,
							"name": "oldDbFolder",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 679,
							"name": "db",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 312,
								"name": "default",
								"package": "@akarui/aoi.db"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 660,
			"name": "createHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 40,
					"character": 16,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L40"
				}
			],
			"signatures": [
				{
					"id": 661,
					"name": "createHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 40,
							"character": 0,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L40"
						}
					],
					"parameters": [
						{
							"id": 662,
							"name": "string",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 663,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 664,
							"name": "iv",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 657,
			"name": "createHashRawString",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 36,
					"character": 16,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L36"
				}
			],
			"signatures": [
				{
					"id": 658,
					"name": "createHashRawString",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 36,
							"character": 0,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L36"
						}
					],
					"parameters": [
						{
							"id": 659,
							"name": "strings",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 665,
			"name": "decodeHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 666,
					"name": "decodeHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 44,
							"character": 0,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L44"
						}
					],
					"parameters": [
						{
							"id": 667,
							"name": "hash",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 668,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 669,
							"name": "iv",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			]
		},
		{
			"id": 653,
			"name": "decrypt",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 20,
					"character": 16,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L20"
				}
			],
			"signatures": [
				{
					"id": 654,
					"name": "decrypt",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 20,
							"character": 0,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L20"
						}
					],
					"parameters": [
						{
							"id": 655,
							"name": "hash",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1,
								"name": "Hash",
								"package": "@akarui/aoi.db"
							}
						},
						{
							"id": 656,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 648,
			"name": "encrypt",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 9,
					"character": 16,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L9"
				}
			],
			"signatures": [
				{
					"id": 649,
					"name": "encrypt",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 9,
							"character": 0,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L9"
						}
					],
					"parameters": [
						{
							"id": 650,
							"name": "string",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 651,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 652,
							"name": "iV",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 1,
						"name": "Hash",
						"package": "@akarui/aoi.db"
					}
				}
			]
		},
		{
			"id": 687,
			"name": "parse",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 125,
					"character": 16,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L125"
				}
			],
			"signatures": [
				{
					"id": 688,
					"name": "parse",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 125,
							"character": 0,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L125"
						}
					],
					"parameters": [
						{
							"id": 689,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 690,
							"name": "type",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1369,
								"name": "ColumnType",
								"package": "@akarui/aoi.db"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 684,
			"name": "stringify",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "lib/utils.ts",
					"line": 116,
					"character": 16,
					"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L116"
				}
			],
			"signatures": [
				{
					"id": 685,
					"name": "stringify",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "lib/utils.ts",
							"line": 116,
							"character": 0,
							"url": "https://github.com/akaruidevelopment/aoi.db/blob/3b8dba5/lib/utils.ts#L116"
						}
					],
					"parameters": [
						{
							"id": 686,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				7,
				32,
				14,
				2699,
				2692,
				48,
				2686
			]
		},
		{
			"title": "Classes",
			"children": [
				312,
				51,
				85,
				508,
				105,
				1284,
				1371,
				1176,
				1624,
				692,
				940,
				1071,
				1087
			]
		},
		{
			"title": "Interfaces",
			"children": [
				628,
				1,
				1942,
				602,
				588,
				614,
				599,
				592,
				624,
				582,
				612,
				619,
				1329,
				1922,
				1904,
				1939,
				1915,
				1931,
				1881,
				1911,
				1361,
				1324,
				1346,
				1336,
				1355,
				1353,
				1340,
				1357
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				1369,
				2679,
				637,
				2681,
				640,
				639,
				4,
				2685,
				641,
				2683,
				1370
			]
		},
		{
			"title": "Variables",
			"children": [
				691
			]
		},
		{
			"title": "Functions",
			"children": [
				670,
				680,
				676,
				660,
				657,
				665,
				653,
				648,
				687,
				684
			]
		}
	],
	"packageName": "@akarui/aoi.db",
	"readme": [
		{
			"kind": "text",
			"text": "<p align=\"center\">\n  <a href=\"https://aoi.js.org\">\n    <img width=\"100\" src=\"https://github.com/aoijs/website/blob/master/assets/images/aoidb.png?raw=true\" alt=\"aoi.db\">\n  </a>\n</p>\n\n<h1 align=\"center\">@akarui/aoi.db</h1>\n\n<div align=\"center\">\n\n[![Discord Server](https://img.shields.io/discord/773352845738115102?color=5865F2&logo=discord&logoColor=white)](https://discord.com/invite/HMUfMXDQsV)\n[![NPM Downloads](https://img.shields.io/npm/dt/aoi.db.svg?maxAge=3600)](https://www.npmjs.com/package/aoi.db)\n[![NPM Version](https://img.shields.io/npm/v/aoi.db.svg?maxAge=3600)](https://www.npmjs.com/package/aoi.db)\n\n</div>\n\n## Table Of Contents\n\n- [Table Of Contents](#table-of-contents)\n- [About](#about)\n- [Installation](#installation)\n- [Types](#types)\n- [Setups](#setups)\n  - [KeyValue](#keyvalue)\n  - [WideColumn](#widecolumn)\n  - [Remote](#remote)\n    - [Setting up the database server](#setting-up-the-database-server)\n    - [Setting up the client](#setting-up-the-client)\n- [Links](#links)\n\n## About\n\nAoi.db is a collection of various database types to handle various types of data requirements!\n\n## Installation\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\n#npm\nnpm i @akarui/aoi.db\n\n#yarn\nyarn add @akarui/aoi.db\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Types\n\n> - KeyValue - A simple database that stores key value pairs\n>   - Usage: general purpose\n\n> - WideColumn - A database that stores data in a column\n>   - Usage: good for getting separate columns related to a primary column\n\n> - Remote - A database that stores data in a remote server\n>   - Usage: good for separating database extensive usage from main project/process\n\n## Setups\n\n### KeyValue\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\nconst { KeyValue } = require(\"@akarui/aoi.db\"); //commonjs\n// or\nimport { KeyValue } from \"@akarui/aoi.db\"; //esm\n\n// Basic Setup\nconst db = new KeyValue({\n  dataConfig: { path: \"./database\" },\n  encryptionConfig: {\n    encriptData: false,\n    securityKey: \"a-32-characters-long-string-here\",\n  },\n  debug: true,\n});\n\ndb.on(\"ready\", () => {\n  console.log(\"Database is ready!\");\n});\n\ndb.connect();\n```"
		},
		{
			"kind": "text",
			"text": "\n\nReference: [KeyValue](https://akaruidevelopment.github.io/aoi.db/classes/KeyValue.html)\n\n### WideColumn\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\nconst { WideColumn, Column } = require(\"@akarui/aoi.db\"); //commonjs\n// or\nimport { WideColumn, Column } from \"@akarui/aoi.db\"; //esm\n\n// Basic Setup\n\nconst prime = new Column({\n  name: \"id\",\n  primary: true,\n  type: \"bigint\",\n  default: 0n,\n});\nconst xp = new Column({\n  name: \"xp\",\n  type: \"number\",\n  primary: false,\n  sortOrder: \"DESC\",\n  default: 0,\n});\n\nconst db = new WideColumn({\n  path: \"./path/\",\n  encryptionConfig: {\n    securityKey: \"a-32-characters-long-string-here\",\n  },\n  tables: [\n    {\n      name: \"main\",\n      columns: [prime, xp],\n    },\n  ],\n});\n\ndb.on(\"ready\", () => {\n  console.log(\"Database is ready!\");\n});\n\ndb.connect();\n```"
		},
		{
			"kind": "text",
			"text": "\n\nReference: [WideColumn](https://akaruidevelopment.github.io/aoi.db/classes/WideColumn.html)\n\n### Remote\n\n#### Setting up the database server\n\n"
		},
		{
			"kind": "code",
			"text": "```js\nconst { Receiver } = require(\"@akarui/aoi.db\"); //commonjs\n// or\nimport { Receiver } from \"@akarui/aoi.db\"; //esm\n\nconst rec = new Receiver({\n  logEncrypt: \"a-32-characters-long-string-here\",\n  logPath: \"./logPath/\",\n  wsOptions: {\n    port: portNo, // 443 for ssl wss and 80 for ws\n    clientTracking: true,\n  },\n  whitelistedIps: \"*\",\n});\n\nrec.on(\"connect\", () => {\n  console.log(\"connected\");\n});\n\nrec.connect();\n```"
		},
		{
			"kind": "text",
			"text": "\n\nReference: [Receiver](https://akaruidevelopment.github.io/aoi.db/classes/Receiver.html)\n\n#### Setting up the client\n\n"
		},
		{
			"kind": "code",
			"text": "```js\nconst { Transmitter, TransmitterFlags } = require(\"@akarui/aoi.db\"); //commonjs\n// or\nimport { Transmitter, DatabaseEvents } from \"@akarui/aoi.db\"; //esm\n\ncconst db = Transmitter.createConnection({\n    path: `aoidb://usersatoshi:123456@localhost:8080`,\n    dbOptions: {\n        type: \"KeyValue\",\n        options: {\n            dataConfig: {\n                path: \"./database\",\n            },\n            encryptionConfig: {\n                securityKey: \"a-32-characters-long-string-here\"\n            }\n        }\n    }\n})\n\n//or \n\nconst db = new Transmitter({\n    dbOptions: {\n        type: \"KeyValue\",\n        options: {\n            dataConfig: {\n                path: \"database\",\n            },\n            encryptionConfig: {\n                securityKey: \"a-32-characters-long-string-here\"\n            }\n        }\n    },\n    username: \"username\",\n    password: \"password\",\n})\n\n\n\ndb.on(DatabaseEvents.Connect, () => console.log(\"Connected\"));\ndb.on(DatabaseEvents.Disconnect, () => console.log(\"Disconnected\"));\ndb.connect();\n```"
		},
		{
			"kind": "text",
			"text": "\n\nReference: [Transmitter](https://akaruidevelopment.github.io/aoi.db/classes/Transmitter.html)\n\n## Links\n\n- [Documentation](https://akaruidevelopment.github.io/aoi.db/)\n- [Discord Server](https://discord.com/invite/HMUfMXDQsV)\n- [NPM](https://www.npmjs.com/package/@akarui/aoi.db)\n- [Github](https://github.com/Akaruidevelopment/aoi.db)"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "lib/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "lib/typings/interface.ts",
			"qualifiedName": "Hash"
		},
		"2": {
			"sourceFileName": "lib/typings/interface.ts",
			"qualifiedName": "Hash.iv"
		},
		"3": {
			"sourceFileName": "lib/typings/interface.ts",
			"qualifiedName": "Hash.data"
		},
		"4": {
			"sourceFileName": "lib/typings/type.ts",
			"qualifiedName": "Optional"
		},
		"5": {
			"sourceFileName": "lib/typings/type.ts",
			"qualifiedName": "T"
		},
		"6": {
			"sourceFileName": "lib/typings/type.ts",
			"qualifiedName": "K"
		},
		"7": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType"
		},
		"8": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType.LRU"
		},
		"9": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType.MRU"
		},
		"10": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType.LFU"
		},
		"11": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType.MFU"
		},
		"12": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType.FIFO"
		},
		"13": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "CacheType.FILO"
		},
		"14": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod"
		},
		"15": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Set"
		},
		"16": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Delete"
		},
		"17": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Flush"
		},
		"18": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Clear"
		},
		"19": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Replicate"
		},
		"20": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Backup"
		},
		"21": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Restore"
		},
		"22": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.NewFile"
		},
		"23": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Ping"
		},
		"24": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Get"
		},
		"25": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.All"
		},
		"26": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Has"
		},
		"27": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.NOOP"
		},
		"28": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.FindOne"
		},
		"29": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.FindMany"
		},
		"30": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.DeleteMany"
		},
		"31": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseMethod.Analyze"
		},
		"32": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents"
		},
		"33": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Connect"
		},
		"34": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Error"
		},
		"35": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Set"
		},
		"36": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Get"
		},
		"37": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Delete"
		},
		"38": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Flush"
		},
		"39": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Clear"
		},
		"40": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Replicate"
		},
		"41": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Backup"
		},
		"42": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Restore"
		},
		"43": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Disconnect"
		},
		"44": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.TableReady"
		},
		"45": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Debug"
		},
		"46": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Connection"
		},
		"47": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "DatabaseEvents.Data"
		},
		"48": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "ReferenceType"
		},
		"49": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "ReferenceType.Cache"
		},
		"50": {
			"sourceFileName": "lib/typings/enum.ts",
			"qualifiedName": "ReferenceType.File"
		},
		"51": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache"
		},
		"52": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.__constructor"
		},
		"53": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache"
		},
		"54": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "capacity"
		},
		"55": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.capacity"
		},
		"56": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.cache"
		},
		"57": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.queue"
		},
		"58": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.get"
		},
		"59": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.get"
		},
		"60": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "key"
		},
		"61": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.put"
		},
		"62": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.put"
		},
		"63": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "key"
		},
		"64": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "value"
		},
		"65": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.has"
		},
		"66": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.has"
		},
		"67": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "key"
		},
		"68": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.updatePriority"
		},
		"69": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.updatePriority"
		},
		"70": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "key"
		},
		"71": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "timestamp"
		},
		"72": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.remove"
		},
		"73": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.remove"
		},
		"74": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "key"
		},
		"75": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.clear"
		},
		"76": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.clear"
		},
		"77": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.all"
		},
		"78": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.all"
		},
		"79": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.findOne"
		},
		"80": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "LRUCache.findOne"
		},
		"81": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "query"
		},
		"82": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "__type"
		},
		"83": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "__type"
		},
		"84": {
			"sourceFileName": "lib/KeyValue/src/LRUcache.ts",
			"qualifiedName": "data"
		},
		"85": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default"
		},
		"86": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.emptyData"
		},
		"87": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.emptyData"
		},
		"88": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.__constructor"
		},
		"89": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default"
		},
		"90": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "data"
		},
		"91": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.file"
		},
		"92": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.key"
		},
		"93": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.value"
		},
		"94": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.type"
		},
		"95": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.#getType"
		},
		"96": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.#getType"
		},
		"97": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "value"
		},
		"98": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.#parseValue"
		},
		"99": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.#parseValue"
		},
		"100": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "data"
		},
		"101": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.toJSON"
		},
		"102": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.toJSON"
		},
		"103": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.size"
		},
		"104": {
			"sourceFileName": "lib/KeyValue/src/data.ts",
			"qualifiedName": "default.size"
		},
		"105": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default"
		},
		"106": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"107": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"108": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"109": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"110": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"111": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"112": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"113": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"114": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"115": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"116": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"117": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"118": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"119": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"120": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"121": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"122": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"123": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"124": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"125": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"126": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"127": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "name"
		},
		"128": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"129": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"130": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"131": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"132": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"133": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"134": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventTargets"
		},
		"135": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"136": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"137": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "signal"
		},
		"138": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "resource"
		},
		"139": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"140": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"141": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"142": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.errorMonitor"
		},
		"143": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejectionSymbol"
		},
		"144": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejections"
		},
		"145": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.defaultMaxListeners"
		},
		"146": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.__constructor"
		},
		"147": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default"
		},
		"148": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "options"
		},
		"149": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "db"
		},
		"150": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.#options"
		},
		"151": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.#db"
		},
		"152": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.#fileManager"
		},
		"153": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.locked"
		},
		"154": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.isFlushing"
		},
		"155": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.paths"
		},
		"156": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type"
		},
		"157": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type.log"
		},
		"158": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type.table"
		},
		"159": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.logData"
		},
		"160": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type"
		},
		"161": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type.fd"
		},
		"162": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type.size"
		},
		"163": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type.fileSize"
		},
		"164": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type.logIV"
		},
		"165": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.readyAt"
		},
		"166": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.options"
		},
		"167": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.options"
		},
		"168": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.db"
		},
		"169": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.db"
		},
		"170": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.fileManager"
		},
		"171": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.fileManager"
		},
		"172": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.initialize"
		},
		"173": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.initialize"
		},
		"174": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.#getPaths"
		},
		"175": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.#getPaths"
		},
		"176": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.#getLogData"
		},
		"177": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.#getLogData"
		},
		"178": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.getLogs"
		},
		"179": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.getLogs"
		},
		"180": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.#syncWithLog"
		},
		"181": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.#syncWithLog"
		},
		"182": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.#wal"
		},
		"183": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.#wal"
		},
		"184": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "data"
		},
		"185": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "method"
		},
		"186": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.wal"
		},
		"187": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.wal"
		},
		"188": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "data"
		},
		"189": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "method"
		},
		"190": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.set"
		},
		"191": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.set"
		},
		"192": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "key"
		},
		"193": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "value"
		},
		"194": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "type"
		},
		"195": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.get"
		},
		"196": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.get"
		},
		"197": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "key"
		},
		"198": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.delete"
		},
		"199": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.delete"
		},
		"200": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "key"
		},
		"201": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.clear"
		},
		"202": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.clear"
		},
		"203": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.has"
		},
		"204": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.has"
		},
		"205": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "key"
		},
		"206": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.all"
		},
		"207": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.all"
		},
		"208": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "query"
		},
		"209": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type"
		},
		"210": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type"
		},
		"211": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "d"
		},
		"212": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "limit"
		},
		"213": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "order"
		},
		"214": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.findOne"
		},
		"215": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.findOne"
		},
		"216": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "query"
		},
		"217": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type"
		},
		"218": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type"
		},
		"219": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "d"
		},
		"220": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.findMany"
		},
		"221": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.findMany"
		},
		"222": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "query"
		},
		"223": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type"
		},
		"224": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type"
		},
		"225": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "d"
		},
		"226": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.removeMany"
		},
		"227": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.removeMany"
		},
		"228": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "query"
		},
		"229": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type"
		},
		"230": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "__type"
		},
		"231": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "d"
		},
		"232": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.ping"
		},
		"233": {
			"sourceFileName": "lib/KeyValue/src/Table.ts",
			"qualifiedName": "default.ping"
		},
		"234": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"235": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"236": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "error"
		},
		"237": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"238": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"239": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"240": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"241": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"242": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"243": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"244": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"245": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"246": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"247": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"248": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"249": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"250": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"251": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"252": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"253": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"254": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"255": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"256": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"257": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"258": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"259": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"260": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"261": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"262": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"263": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"264": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"265": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"266": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"267": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"268": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"269": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"270": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"271": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"272": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"273": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"274": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"275": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"276": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"277": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"278": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"279": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"280": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"281": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"282": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"283": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"284": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"285": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"286": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"287": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"288": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"289": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"290": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"291": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"292": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"293": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"294": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"295": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"296": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"297": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"298": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"299": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"300": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"301": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"302": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"303": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"304": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"305": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"306": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"307": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"308": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"309": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"310": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"311": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"312": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default"
		},
		"313": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.defaultOptions"
		},
		"314": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.defaultOptions"
		},
		"315": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"316": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"317": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"318": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"319": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"320": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"321": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"322": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"323": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"324": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"325": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"326": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"327": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"328": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"329": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"330": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"331": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"332": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"333": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"334": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"335": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"336": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "name"
		},
		"337": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"338": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"339": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"340": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"341": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"342": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"343": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventTargets"
		},
		"344": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"345": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"346": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "signal"
		},
		"347": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "resource"
		},
		"348": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"349": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"350": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"351": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.errorMonitor"
		},
		"352": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejectionSymbol"
		},
		"353": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejections"
		},
		"354": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.defaultMaxListeners"
		},
		"355": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.__constructor"
		},
		"356": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default"
		},
		"357": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "options"
		},
		"358": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.#options"
		},
		"359": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.tables"
		},
		"360": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"361": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type.table"
		},
		"362": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type.ready"
		},
		"363": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.readyAt"
		},
		"364": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.#finalizeOptions"
		},
		"365": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.#finalizeOptions"
		},
		"366": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "options"
		},
		"367": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.connect"
		},
		"368": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.connect"
		},
		"369": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.options"
		},
		"370": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.options"
		},
		"371": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.set"
		},
		"372": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.set"
		},
		"373": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"374": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "key"
		},
		"375": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "value"
		},
		"376": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.get"
		},
		"377": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.get"
		},
		"378": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"379": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "key"
		},
		"380": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.delete"
		},
		"381": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.delete"
		},
		"382": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"383": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "key"
		},
		"384": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.clear"
		},
		"385": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.clear"
		},
		"386": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"387": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.has"
		},
		"388": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.has"
		},
		"389": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"390": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "key"
		},
		"391": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.clearAll"
		},
		"392": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.clearAll"
		},
		"393": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.findOne"
		},
		"394": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.findOne"
		},
		"395": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"396": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "query"
		},
		"397": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"398": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"399": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "value"
		},
		"400": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.findMany"
		},
		"401": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.findMany"
		},
		"402": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"403": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "query"
		},
		"404": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"405": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"406": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "value"
		},
		"407": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.all"
		},
		"408": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.all"
		},
		"409": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"410": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "query"
		},
		"411": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"412": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"413": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "value"
		},
		"414": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "limit"
		},
		"415": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "order"
		},
		"416": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.backup"
		},
		"417": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.backup"
		},
		"418": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.deleteMany"
		},
		"419": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.deleteMany"
		},
		"420": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"421": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "query"
		},
		"422": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"423": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "__type"
		},
		"424": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "value"
		},
		"425": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.ping"
		},
		"426": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.ping"
		},
		"427": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "table"
		},
		"428": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.avgPing"
		},
		"429": {
			"sourceFileName": "lib/KeyValue/src/database.ts",
			"qualifiedName": "default.avgPing"
		},
		"430": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"431": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"432": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "error"
		},
		"433": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"434": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"435": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"436": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"437": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"438": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"439": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"440": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"441": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"442": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"443": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"444": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"445": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"446": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"447": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"448": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"449": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"450": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"451": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"452": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"453": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"454": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"455": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"456": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"457": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"458": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"459": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"460": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"461": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"462": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"463": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"464": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"465": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"466": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"467": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"468": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"469": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"470": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"471": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"472": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"473": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"474": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"475": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"476": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"477": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"478": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"479": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"480": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"481": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"482": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"483": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"484": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"485": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"486": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"487": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"488": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"489": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"490": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"491": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"492": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"493": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"494": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"495": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"496": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"497": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"498": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"499": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"500": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"501": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"502": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"503": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"504": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"505": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"506": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"507": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"508": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default"
		},
		"509": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.__constructor"
		},
		"510": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default"
		},
		"511": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "maxSize"
		},
		"512": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "hashSize"
		},
		"513": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "table"
		},
		"514": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.#maxSize"
		},
		"515": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.#hashSize"
		},
		"516": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.#array"
		},
		"517": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.#table"
		},
		"518": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.#rehashing"
		},
		"519": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.initialize"
		},
		"520": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.initialize"
		},
		"521": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.maxHashArraySize"
		},
		"522": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.maxHashArraySize"
		},
		"523": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.hashSize"
		},
		"524": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.hashSize"
		},
		"525": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.#hash"
		},
		"526": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.#hash"
		},
		"527": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "key"
		},
		"528": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.add"
		},
		"529": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.add"
		},
		"530": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "data"
		},
		"531": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.#getHashIndex"
		},
		"532": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.#getHashIndex"
		},
		"533": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "hash"
		},
		"534": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.#rehash"
		},
		"535": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.#rehash"
		},
		"536": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.remove"
		},
		"537": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.remove"
		},
		"538": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "data"
		},
		"539": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.get"
		},
		"540": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.get"
		},
		"541": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "key"
		},
		"542": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.clear"
		},
		"543": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.clear"
		},
		"544": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.has"
		},
		"545": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.has"
		},
		"546": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "key"
		},
		"547": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.all"
		},
		"548": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.all"
		},
		"549": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "query"
		},
		"550": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "__type"
		},
		"551": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "__type"
		},
		"552": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "d"
		},
		"553": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "limit"
		},
		"554": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "order"
		},
		"555": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.findOne"
		},
		"556": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.findOne"
		},
		"557": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "query"
		},
		"558": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "__type"
		},
		"559": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "__type"
		},
		"560": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "d"
		},
		"561": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.findMany"
		},
		"562": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.findMany"
		},
		"563": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "query"
		},
		"564": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "__type"
		},
		"565": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "__type"
		},
		"566": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "d"
		},
		"567": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.getFirstN"
		},
		"568": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.getFirstN"
		},
		"569": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "query"
		},
		"570": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "__type"
		},
		"571": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "__type"
		},
		"572": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "d"
		},
		"573": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "limit"
		},
		"574": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.removeMany"
		},
		"575": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.removeMany"
		},
		"576": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "query"
		},
		"577": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "__type"
		},
		"578": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "__type"
		},
		"579": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "d"
		},
		"580": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.ping"
		},
		"581": {
			"sourceFileName": "lib/KeyValue/src/FileManager.ts",
			"qualifiedName": "default.ping"
		},
		"582": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueOptions"
		},
		"583": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueOptions.dataConfig"
		},
		"584": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueOptions.fileConfig"
		},
		"585": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueOptions.encryptionConfig"
		},
		"586": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueOptions.cacheConfig"
		},
		"587": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueOptions.debug"
		},
		"588": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataConfig"
		},
		"589": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataConfig.path"
		},
		"590": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataConfig.tables"
		},
		"591": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataConfig.referencePath"
		},
		"592": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueFileConfig"
		},
		"593": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueFileConfig.extension"
		},
		"594": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueFileConfig.transactionLogPath"
		},
		"595": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueFileConfig.maxSize"
		},
		"596": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueFileConfig.reHashOnStartup"
		},
		"597": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueFileConfig.staticRehash"
		},
		"598": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueFileConfig.minFileCount"
		},
		"599": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueEncryptionConfig"
		},
		"600": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueEncryptionConfig.securityKey"
		},
		"601": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueEncryptionConfig.encriptData"
		},
		"602": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueCacheConfig"
		},
		"603": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueCacheConfig.cache"
		},
		"604": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueCacheConfig.reference"
		},
		"605": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueCacheConfig.limit"
		},
		"606": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueCacheConfig.sorted"
		},
		"607": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueCacheConfig.sortFunction"
		},
		"608": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"609": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"610": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "a"
		},
		"611": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "b"
		},
		"612": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueTableOptions"
		},
		"613": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueTableOptions.name"
		},
		"614": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataInterface"
		},
		"615": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataInterface.file"
		},
		"616": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataInterface.value"
		},
		"617": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataInterface.key"
		},
		"618": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueDataInterface.type"
		},
		"619": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "LogBlock"
		},
		"620": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "LogBlock.key"
		},
		"621": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "LogBlock.value"
		},
		"622": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "LogBlock.type"
		},
		"623": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "LogBlock.method"
		},
		"624": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueJSONOption"
		},
		"625": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueJSONOption.value"
		},
		"626": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueJSONOption.key"
		},
		"627": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "KeyValueJSONOption.type"
		},
		"628": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "CacherOptions"
		},
		"629": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "CacherOptions.cache"
		},
		"630": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "CacherOptions.limit"
		},
		"631": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "CacherOptions.sorted"
		},
		"632": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "CacherOptions.sortFunction"
		},
		"633": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"634": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"635": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "a"
		},
		"636": {
			"sourceFileName": "lib/KeyValue/typings/interface.ts",
			"qualifiedName": "b"
		},
		"637": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "DeepRequired"
		},
		"638": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "T"
		},
		"639": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "KeyValueTypeList"
		},
		"640": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "KeyValueDataValueType"
		},
		"641": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "ValidJSON"
		},
		"642": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "__type"
		},
		"643": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "__type.__index"
		},
		"645": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "__type"
		},
		"646": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "__type.toJSON"
		},
		"647": {
			"sourceFileName": "lib/KeyValue/typings/type.ts",
			"qualifiedName": "__type.toJSON"
		},
		"648": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "encrypt"
		},
		"649": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "encrypt"
		},
		"650": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "string"
		},
		"651": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "key"
		},
		"652": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "iV"
		},
		"653": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "decrypt"
		},
		"654": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "decrypt"
		},
		"655": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "hash"
		},
		"656": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "key"
		},
		"657": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "createHashRawString"
		},
		"658": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "createHashRawString"
		},
		"659": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "strings"
		},
		"660": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "createHash"
		},
		"661": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "createHash"
		},
		"662": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "string"
		},
		"663": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "key"
		},
		"664": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "iv"
		},
		"665": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "decodeHash"
		},
		"666": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "decodeHash"
		},
		"667": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "hash"
		},
		"668": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "key"
		},
		"669": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "iv"
		},
		"670": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "JSONParser"
		},
		"671": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "JSONParser"
		},
		"672": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "data"
		},
		"673": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "__object"
		},
		"674": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "__object.data"
		},
		"675": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "__object.isBroken"
		},
		"676": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "convertV1KeyValuetov2"
		},
		"677": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "convertV1KeyValuetov2"
		},
		"678": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "oldDbFolder"
		},
		"679": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "db"
		},
		"680": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "checkIfTargetPresentInBitWiseOr"
		},
		"681": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "checkIfTargetPresentInBitWiseOr"
		},
		"682": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "num"
		},
		"683": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "target"
		},
		"684": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "stringify"
		},
		"685": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "stringify"
		},
		"686": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "data"
		},
		"687": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "parse"
		},
		"688": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "parse"
		},
		"689": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "data"
		},
		"690": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "type"
		},
		"691": {
			"sourceFileName": "lib/utils.ts",
			"qualifiedName": "ReferenceConstantSpace"
		},
		"692": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default"
		},
		"693": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.defaultOptions"
		},
		"694": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"695": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"696": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"697": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"698": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"699": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"700": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"701": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"702": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"703": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"704": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"705": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"706": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"707": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"708": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"709": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"710": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"711": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"712": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"713": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"714": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"715": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "name"
		},
		"716": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"717": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"718": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"719": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"720": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"721": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"722": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventTargets"
		},
		"723": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"724": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"725": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "signal"
		},
		"726": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "resource"
		},
		"727": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"728": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"729": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"730": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.errorMonitor"
		},
		"731": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejectionSymbol"
		},
		"732": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejections"
		},
		"733": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.defaultMaxListeners"
		},
		"734": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.__constructor"
		},
		"735": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default"
		},
		"736": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "options"
		},
		"737": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.tables"
		},
		"738": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"739": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type.__index"
		},
		"741": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"742": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type.ready"
		},
		"743": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type.table"
		},
		"744": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.#options"
		},
		"745": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.readyAt"
		},
		"746": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.options"
		},
		"747": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.options"
		},
		"748": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.#finalizeOptions"
		},
		"749": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.#finalizeOptions"
		},
		"750": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "options"
		},
		"751": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object"
		},
		"752": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.dataConfig"
		},
		"753": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object"
		},
		"754": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.path"
		},
		"755": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.tables"
		},
		"756": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"757": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "__type.name"
		},
		"758": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "__type.columns"
		},
		"759": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.referencePath"
		},
		"760": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.cacheConfig"
		},
		"761": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object"
		},
		"762": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.limit"
		},
		"763": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.sortFunction"
		},
		"764": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"765": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"766": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "a"
		},
		"767": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "b"
		},
		"768": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.referenceType"
		},
		"769": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.encryptionConfig"
		},
		"770": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object"
		},
		"771": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.securityKey"
		},
		"772": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.fileConfig"
		},
		"773": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object"
		},
		"774": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.extension"
		},
		"775": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__object.debug"
		},
		"776": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.connect"
		},
		"777": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.connect"
		},
		"778": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.getTable"
		},
		"779": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.getTable"
		},
		"780": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "name"
		},
		"781": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.set"
		},
		"782": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.set"
		},
		"783": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "table"
		},
		"784": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "column"
		},
		"785": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"786": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type.name"
		},
		"787": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type.value"
		},
		"788": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "primary"
		},
		"789": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"790": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type.name"
		},
		"791": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type.value"
		},
		"792": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.get"
		},
		"793": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.get"
		},
		"794": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "table"
		},
		"795": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "columnName"
		},
		"796": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "primary"
		},
		"797": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.delete"
		},
		"798": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.delete"
		},
		"799": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "table"
		},
		"800": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "columnName"
		},
		"801": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "primary"
		},
		"802": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.all"
		},
		"803": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.all"
		},
		"804": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "table"
		},
		"805": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "columnName"
		},
		"806": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "query"
		},
		"807": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"808": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"809": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "data"
		},
		"810": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.allColumns"
		},
		"811": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.allColumns"
		},
		"812": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "table"
		},
		"813": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "query"
		},
		"814": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"815": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"816": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "data"
		},
		"817": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.allTable"
		},
		"818": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.allTable"
		},
		"819": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "query"
		},
		"820": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"821": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"822": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "data"
		},
		"823": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.clear"
		},
		"824": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.clear"
		},
		"825": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "table"
		},
		"826": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.clearAll"
		},
		"827": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.clearAll"
		},
		"828": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.deleteMany"
		},
		"829": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.deleteMany"
		},
		"830": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "table"
		},
		"831": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "columnName"
		},
		"832": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "query"
		},
		"833": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"834": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"835": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "data"
		},
		"836": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.findMany"
		},
		"837": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.findMany"
		},
		"838": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "table"
		},
		"839": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "columnName"
		},
		"840": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "query"
		},
		"841": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"842": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"843": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "data"
		},
		"844": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.findOne"
		},
		"845": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.findOne"
		},
		"846": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "table"
		},
		"847": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "columnName"
		},
		"848": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "query"
		},
		"849": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"850": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "__type"
		},
		"851": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "data"
		},
		"852": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.has"
		},
		"853": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.has"
		},
		"854": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "table"
		},
		"855": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "columnName"
		},
		"856": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "primary"
		},
		"857": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.fullRepair"
		},
		"858": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.fullRepair"
		},
		"859": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "table"
		},
		"860": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.backup"
		},
		"861": {
			"sourceFileName": "lib/WideColumnar/src/Database.ts",
			"qualifiedName": "default.backup"
		},
		"862": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"863": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"864": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "error"
		},
		"865": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"866": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"867": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"868": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"869": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"870": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"871": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"872": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"873": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"874": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"875": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"876": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"877": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"878": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"879": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"880": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"881": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"882": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"883": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"884": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"885": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"886": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"887": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"888": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"889": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"890": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"891": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"892": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"893": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"894": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"895": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"896": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"897": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"898": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"899": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"900": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"901": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"902": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"903": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"904": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"905": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"906": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"907": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"908": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"909": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"910": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"911": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"912": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"913": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"914": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"915": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"916": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"917": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"918": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"919": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"920": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"921": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"922": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"923": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"924": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"925": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"926": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"927": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"928": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"929": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"930": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"931": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"932": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"933": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"934": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"935": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"936": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"937": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"938": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"939": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"940": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default"
		},
		"941": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.__constructor"
		},
		"942": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default"
		},
		"943": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "options"
		},
		"944": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.name"
		},
		"945": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.primaryKey"
		},
		"946": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.default"
		},
		"947": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.type"
		},
		"948": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.path"
		},
		"949": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.files"
		},
		"950": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.table"
		},
		"951": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.memMap"
		},
		"952": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#log"
		},
		"953": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"954": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type.iv"
		},
		"955": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type.writer"
		},
		"956": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type.path"
		},
		"957": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type.fullWriter"
		},
		"958": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type.ivFull"
		},
		"959": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.referencer"
		},
		"960": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.repairMode"
		},
		"961": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.setPath"
		},
		"962": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.setPath"
		},
		"963": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "path"
		},
		"964": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.setFiles"
		},
		"965": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.setFiles"
		},
		"966": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.setTable"
		},
		"967": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.setTable"
		},
		"968": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "table"
		},
		"969": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#getFiles"
		},
		"970": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#getFiles"
		},
		"971": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.initialize"
		},
		"972": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.initialize"
		},
		"973": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#initalize"
		},
		"974": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#initalize"
		},
		"975": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#readIvfromLog"
		},
		"976": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#readIvfromLog"
		},
		"977": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#readIvfromFullLog"
		},
		"978": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#readIvfromFullLog"
		},
		"979": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#getLogInfo"
		},
		"980": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#getLogInfo"
		},
		"981": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#syncWithLogs"
		},
		"982": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#syncWithLogs"
		},
		"983": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#createNewLogCycle"
		},
		"984": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#createNewLogCycle"
		},
		"985": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#wal"
		},
		"986": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#wal"
		},
		"987": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "data"
		},
		"988": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "method"
		},
		"989": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.flush"
		},
		"990": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.flush"
		},
		"991": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "data"
		},
		"992": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.set"
		},
		"993": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.set"
		},
		"994": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "primary"
		},
		"995": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "value"
		},
		"996": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.get"
		},
		"997": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.get"
		},
		"998": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "primary"
		},
		"999": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#get"
		},
		"1000": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#get"
		},
		"1001": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "primary"
		},
		"1002": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#fetchLine"
		},
		"1003": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#fetchLine"
		},
		"1004": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "file"
		},
		"1005": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "index"
		},
		"1006": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.has"
		},
		"1007": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.has"
		},
		"1008": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "primary"
		},
		"1009": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#has"
		},
		"1010": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#has"
		},
		"1011": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "primary"
		},
		"1012": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.delete"
		},
		"1013": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.delete"
		},
		"1014": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "primary"
		},
		"1015": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#delete"
		},
		"1016": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#delete"
		},
		"1017": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "primary"
		},
		"1018": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#flushFile"
		},
		"1019": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#flushFile"
		},
		"1020": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "file"
		},
		"1021": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "data"
		},
		"1022": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.clear"
		},
		"1023": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.clear"
		},
		"1024": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.getHeap"
		},
		"1025": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.getHeap"
		},
		"1026": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.findOne"
		},
		"1027": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.findOne"
		},
		"1028": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "query"
		},
		"1029": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"1030": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"1031": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "data"
		},
		"1032": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#fetchFile"
		},
		"1033": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#fetchFile"
		},
		"1034": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "file"
		},
		"1035": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#findOne"
		},
		"1036": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#findOne"
		},
		"1037": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "query"
		},
		"1038": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"1039": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"1040": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "data"
		},
		"1041": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.findMany"
		},
		"1042": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.findMany"
		},
		"1043": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "query"
		},
		"1044": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"1045": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"1046": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "data"
		},
		"1047": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#findMany"
		},
		"1048": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#findMany"
		},
		"1049": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "query"
		},
		"1050": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"1051": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"1052": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "data"
		},
		"1053": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.deleteMany"
		},
		"1054": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.deleteMany"
		},
		"1055": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "query"
		},
		"1056": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"1057": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"1058": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "data"
		},
		"1059": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#bulkDelete"
		},
		"1060": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.#bulkDelete"
		},
		"1061": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "data"
		},
		"1062": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.all"
		},
		"1063": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.all"
		},
		"1064": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "query"
		},
		"1065": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"1066": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "__type"
		},
		"1067": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "data"
		},
		"1068": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "limit"
		},
		"1069": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.fullRepair"
		},
		"1070": {
			"sourceFileName": "lib/WideColumnar/src/Column.ts",
			"qualifiedName": "default.fullRepair"
		},
		"1071": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "default"
		},
		"1072": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "default.__constructor"
		},
		"1073": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "default"
		},
		"1074": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "data"
		},
		"1075": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "__type"
		},
		"1076": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "__type.primary"
		},
		"1077": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "__type.column"
		},
		"1078": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "default.primary"
		},
		"1079": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "default.column"
		},
		"1080": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "default.toString"
		},
		"1081": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "default.toString"
		},
		"1082": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "default.toJSON"
		},
		"1083": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "default.toJSON"
		},
		"1084": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "__object"
		},
		"1085": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "__object.primary"
		},
		"1086": {
			"sourceFileName": "lib/WideColumnar/src/Data.ts",
			"qualifiedName": "__object.column"
		},
		"1087": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default"
		},
		"1088": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.__constructor"
		},
		"1089": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default"
		},
		"1090": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "options"
		},
		"1091": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.name"
		},
		"1092": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.columns"
		},
		"1093": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.#db"
		},
		"1094": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.#primary"
		},
		"1095": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1096": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type.name"
		},
		"1097": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type.type"
		},
		"1098": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.options"
		},
		"1099": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.#parseColumns"
		},
		"1100": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.#parseColumns"
		},
		"1101": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "columns"
		},
		"1102": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.db"
		},
		"1103": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.db"
		},
		"1104": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.connect"
		},
		"1105": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.connect"
		},
		"1106": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.primary"
		},
		"1107": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.primary"
		},
		"1108": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1109": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type.name"
		},
		"1110": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type.type"
		},
		"1111": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.set"
		},
		"1112": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.set"
		},
		"1113": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "column"
		},
		"1114": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1115": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type.name"
		},
		"1116": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type.value"
		},
		"1117": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "primary"
		},
		"1118": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1119": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type.name"
		},
		"1120": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type.value"
		},
		"1121": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.get"
		},
		"1122": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.get"
		},
		"1123": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "columnName"
		},
		"1124": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "primary"
		},
		"1125": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.delete"
		},
		"1126": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.delete"
		},
		"1127": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "columnName"
		},
		"1128": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "primary"
		},
		"1129": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.all"
		},
		"1130": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.all"
		},
		"1131": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "columnName"
		},
		"1132": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "query"
		},
		"1133": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1134": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1135": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "row"
		},
		"1136": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "limit"
		},
		"1137": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.allColumns"
		},
		"1138": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.allColumns"
		},
		"1139": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "query"
		},
		"1140": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1141": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1142": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "row"
		},
		"1143": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "limit"
		},
		"1144": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.findMany"
		},
		"1145": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.findMany"
		},
		"1146": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "columnName"
		},
		"1147": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "query"
		},
		"1148": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1149": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1150": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "row"
		},
		"1151": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.findOne"
		},
		"1152": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.findOne"
		},
		"1153": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "columnName"
		},
		"1154": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "query"
		},
		"1155": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1156": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1157": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "row"
		},
		"1158": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.deleteMany"
		},
		"1159": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.deleteMany"
		},
		"1160": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "columnName"
		},
		"1161": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "query"
		},
		"1162": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1163": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "__type"
		},
		"1164": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "row"
		},
		"1165": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.has"
		},
		"1166": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.has"
		},
		"1167": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "columnName"
		},
		"1168": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "primary"
		},
		"1169": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.clear"
		},
		"1170": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.clear"
		},
		"1171": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.clearColumn"
		},
		"1172": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.clearColumn"
		},
		"1173": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "columnName"
		},
		"1174": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.fullRepair"
		},
		"1175": {
			"sourceFileName": "lib/WideColumnar/src/Table.ts",
			"qualifiedName": "default.fullRepair"
		},
		"1176": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default"
		},
		"1177": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.__constructor"
		},
		"1178": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default"
		},
		"1179": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "path"
		},
		"1180": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "maxSize"
		},
		"1181": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "type"
		},
		"1182": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "column"
		},
		"1183": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.cache"
		},
		"1184": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type"
		},
		"1185": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.file"
		},
		"1186": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.referenceFile"
		},
		"1187": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.index"
		},
		"1188": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.files"
		},
		"1189": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type"
		},
		"1190": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.name"
		},
		"1191": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.size"
		},
		"1192": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.writer"
		},
		"1193": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.index"
		},
		"1194": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#column"
		},
		"1195": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.initialize"
		},
		"1196": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.initialize"
		},
		"1197": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#syncReference"
		},
		"1198": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#syncReference"
		},
		"1199": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#getReference"
		},
		"1200": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#getReference"
		},
		"1201": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type"
		},
		"1202": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.file"
		},
		"1203": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.referenceFile"
		},
		"1204": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.index"
		},
		"1205": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#getIndex"
		},
		"1206": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#getIndex"
		},
		"1207": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "file"
		},
		"1208": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#saveReference"
		},
		"1209": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#saveReference"
		},
		"1210": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "key"
		},
		"1211": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "file"
		},
		"1212": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.setReference"
		},
		"1213": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.setReference"
		},
		"1214": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "key"
		},
		"1215": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "file"
		},
		"1216": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#currentFile"
		},
		"1217": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#currentFile"
		},
		"1218": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type"
		},
		"1219": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.name"
		},
		"1220": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.size"
		},
		"1221": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.writer"
		},
		"1222": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.index"
		},
		"1223": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#createFile"
		},
		"1224": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.#createFile"
		},
		"1225": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.getReference"
		},
		"1226": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "default.getReference"
		},
		"1227": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type"
		},
		"1228": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.file"
		},
		"1229": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.referenceFile"
		},
		"1230": {
			"sourceFileName": "lib/WideColumnar/src/Referencer.ts",
			"qualifiedName": "__type.index"
		},
		"1231": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.cacheSize"
		},
		"1232": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#path"
		},
		"1233": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.maxSize"
		},
		"1234": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.type"
		},
		"1235": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.path"
		},
		"1236": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.path"
		},
		"1237": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#getReference"
		},
		"1238": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#getReference"
		},
		"1239": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "__type"
		},
		"1240": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "__type.file"
		},
		"1241": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "__type.referenceFile"
		},
		"1242": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#saveReference"
		},
		"1243": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#saveReference"
		},
		"1244": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "key"
		},
		"1245": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "file"
		},
		"1246": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#currentFile"
		},
		"1247": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#currentFile"
		},
		"1248": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "__type"
		},
		"1249": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "__type.name"
		},
		"1250": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "__type.size"
		},
		"1251": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "__type.writer"
		},
		"1252": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#createFile"
		},
		"1253": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#createFile"
		},
		"1254": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.deleteReference"
		},
		"1255": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.deleteReference"
		},
		"1256": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "key"
		},
		"1257": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#deleteReference"
		},
		"1258": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#deleteReference"
		},
		"1259": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "key"
		},
		"1260": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "file"
		},
		"1261": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#getFileReference"
		},
		"1262": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#getFileReference"
		},
		"1263": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "file"
		},
		"1264": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.clear"
		},
		"1265": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.clear"
		},
		"1266": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.open"
		},
		"1267": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.open"
		},
		"1268": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.bulkDeleteReference"
		},
		"1269": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.bulkDeleteReference"
		},
		"1270": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "keys"
		},
		"1271": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#bulkDeleteReference"
		},
		"1272": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.#bulkDeleteReference"
		},
		"1273": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "keys"
		},
		"1274": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "file"
		},
		"1275": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.restart"
		},
		"1276": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.restart"
		},
		"1277": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.bulkSetReference"
		},
		"1278": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.bulkSetReference"
		},
		"1279": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "reference"
		},
		"1280": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.sync"
		},
		"1281": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "default.sync"
		},
		"1282": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "files"
		},
		"1283": {
			"sourceFileName": "lib/global/referencer.ts",
			"qualifiedName": "table"
		},
		"1284": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default"
		},
		"1285": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.__constructor"
		},
		"1286": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default"
		},
		"1287": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "options"
		},
		"1288": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "Column"
		},
		"1289": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.heap"
		},
		"1290": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.#options"
		},
		"1291": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.#column"
		},
		"1292": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.set"
		},
		"1293": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.set"
		},
		"1294": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "data"
		},
		"1295": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.get"
		},
		"1296": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.get"
		},
		"1297": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "primary"
		},
		"1298": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.has"
		},
		"1299": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.has"
		},
		"1300": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "primary"
		},
		"1301": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.delete"
		},
		"1302": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.delete"
		},
		"1303": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "primary"
		},
		"1304": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.getHeap"
		},
		"1305": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.getHeap"
		},
		"1306": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.getOptions"
		},
		"1307": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.getOptions"
		},
		"1308": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.getSize"
		},
		"1309": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.getSize"
		},
		"1310": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.flush"
		},
		"1311": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.flush"
		},
		"1312": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.findOne"
		},
		"1313": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.findOne"
		},
		"1314": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "query"
		},
		"1315": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "__type"
		},
		"1316": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "__type"
		},
		"1317": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "data"
		},
		"1318": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.findMany"
		},
		"1319": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "default.findMany"
		},
		"1320": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "query"
		},
		"1321": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "__type"
		},
		"1322": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "__type"
		},
		"1323": {
			"sourceFileName": "lib/WideColumnar/src/MemMap.ts",
			"qualifiedName": "data"
		},
		"1324": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarColumnOptions"
		},
		"1325": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarColumnOptions.name"
		},
		"1326": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarColumnOptions.primaryKey"
		},
		"1327": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarColumnOptions.default"
		},
		"1328": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarColumnOptions.type"
		},
		"1329": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "MemMapOptions"
		},
		"1330": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "MemMapOptions.limit"
		},
		"1331": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "MemMapOptions.sortFunction"
		},
		"1332": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"1333": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"1334": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "a"
		},
		"1335": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "b"
		},
		"1336": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarDataInterface"
		},
		"1337": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarDataInterface.name"
		},
		"1338": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarDataInterface.value"
		},
		"1339": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarDataInterface.type"
		},
		"1340": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarOptions"
		},
		"1341": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarOptions.dataConfig"
		},
		"1342": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarOptions.fileConfig"
		},
		"1343": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarOptions.encryptionConfig"
		},
		"1344": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarOptions.cacheConfig"
		},
		"1345": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarOptions.debug"
		},
		"1346": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarDataConfig"
		},
		"1347": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarDataConfig.path"
		},
		"1348": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarDataConfig.tables"
		},
		"1349": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"1350": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "__type.name"
		},
		"1351": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "__type.columns"
		},
		"1352": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarDataConfig.referencePath"
		},
		"1353": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarFileConfig"
		},
		"1354": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarFileConfig.extension"
		},
		"1355": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarEncryptionConfig"
		},
		"1356": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarEncryptionConfig.securityKey"
		},
		"1357": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarTableOptions"
		},
		"1358": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarTableOptions.name"
		},
		"1359": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarTableOptions.columns"
		},
		"1360": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarTableOptions.db"
		},
		"1361": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarCacheConfig"
		},
		"1362": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "WideColumnarCacheConfig.referenceType"
		},
		"1363": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "MemMapOptions.limit"
		},
		"1364": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "MemMapOptions.sortFunction"
		},
		"1365": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"1366": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"1367": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "a"
		},
		"1368": {
			"sourceFileName": "lib/WideColumnar/typings/interface.ts",
			"qualifiedName": "b"
		},
		"1369": {
			"sourceFileName": "lib/WideColumnar/typings/types.ts",
			"qualifiedName": "ColumnType"
		},
		"1370": {
			"sourceFileName": "lib/WideColumnar/typings/types.ts",
			"qualifiedName": "WideColumnarDataType"
		},
		"1371": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default"
		},
		"1372": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"1373": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"1374": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"1375": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1376": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"1377": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"1378": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"1379": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1380": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"1381": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"1382": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"1383": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"1384": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1385": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"1386": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"1387": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"1388": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"1389": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1390": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"1391": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"1392": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"1393": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "name"
		},
		"1394": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"1395": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"1396": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"1397": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"1398": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"1399": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"1400": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventTargets"
		},
		"1401": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"1402": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"1403": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "signal"
		},
		"1404": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "resource"
		},
		"1405": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1406": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1407": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"1408": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.errorMonitor"
		},
		"1409": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejectionSymbol"
		},
		"1410": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejections"
		},
		"1411": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.defaultMaxListeners"
		},
		"1412": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.__constructor"
		},
		"1413": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default"
		},
		"1414": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "options"
		},
		"1415": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.server"
		},
		"1416": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#options"
		},
		"1417": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.allowList"
		},
		"1418": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.clients"
		},
		"1419": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.usersMap"
		},
		"1420": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.allowAddress"
		},
		"1421": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.allowAddress"
		},
		"1422": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "address"
		},
		"1423": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#init"
		},
		"1424": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#init"
		},
		"1425": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "options"
		},
		"1426": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#createKeyValue"
		},
		"1427": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#createKeyValue"
		},
		"1428": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "options"
		},
		"1429": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.isAllowed"
		},
		"1430": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.isAllowed"
		},
		"1431": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "address"
		},
		"1432": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#bindEvents"
		},
		"1433": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#bindEvents"
		},
		"1434": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleClose"
		},
		"1435": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleClose"
		},
		"1436": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1437": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleError"
		},
		"1438": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleError"
		},
		"1439": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "err"
		},
		"1440": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1441": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleConnect"
		},
		"1442": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleConnect"
		},
		"1443": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1444": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleData"
		},
		"1445": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleData"
		},
		"1446": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "data"
		},
		"1447": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1448": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleConnectRequest"
		},
		"1449": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleConnectRequest"
		},
		"1450": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1451": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1452": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handlePingRequest"
		},
		"1453": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handlePingRequest"
		},
		"1454": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1455": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1456": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleDisconnectRequest"
		},
		"1457": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleDisconnectRequest"
		},
		"1458": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1459": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1460": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationRequest"
		},
		"1461": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationRequest"
		},
		"1462": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1463": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1464": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleUnknownRequest"
		},
		"1465": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleUnknownRequest"
		},
		"1466": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1467": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1468": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationSet"
		},
		"1469": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationSet"
		},
		"1470": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1471": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1472": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationGet"
		},
		"1473": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationGet"
		},
		"1474": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1475": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1476": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationDelete"
		},
		"1477": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationDelete"
		},
		"1478": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1479": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1480": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationAll"
		},
		"1481": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationAll"
		},
		"1482": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1483": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1484": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationFindMany"
		},
		"1485": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationFindMany"
		},
		"1486": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1487": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1488": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationFindOne"
		},
		"1489": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationFindOne"
		},
		"1490": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1491": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1492": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationHas"
		},
		"1493": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationHas"
		},
		"1494": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1495": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1496": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationDeleteMany"
		},
		"1497": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationDeleteMany"
		},
		"1498": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1499": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1500": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationClear"
		},
		"1501": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#handleOperationClear"
		},
		"1502": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "dataFormat"
		},
		"1503": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1504": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#sendResponse"
		},
		"1505": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#sendResponse"
		},
		"1506": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "data"
		},
		"1507": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type"
		},
		"1508": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.op"
		},
		"1509": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.method"
		},
		"1510": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.seq"
		},
		"1511": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.data"
		},
		"1512": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.cost"
		},
		"1513": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.hash"
		},
		"1514": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.session"
		},
		"1515": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "socket"
		},
		"1516": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#createDebug"
		},
		"1517": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#createDebug"
		},
		"1518": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "data"
		},
		"1519": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type"
		},
		"1520": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.op"
		},
		"1521": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.method"
		},
		"1522": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.seq"
		},
		"1523": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.data"
		},
		"1524": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.cost"
		},
		"1525": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.hash"
		},
		"1526": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.session"
		},
		"1527": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#createData"
		},
		"1528": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.#createData"
		},
		"1529": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "data"
		},
		"1530": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.sendDataFormat"
		},
		"1531": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.sendDataFormat"
		},
		"1532": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__0"
		},
		"1533": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type"
		},
		"1534": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.op"
		},
		"1535": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.method"
		},
		"1536": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.seq"
		},
		"1537": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.data"
		},
		"1538": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.cost"
		},
		"1539": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.hash"
		},
		"1540": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "__type.session"
		},
		"1541": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.transmitterDataFormat"
		},
		"1542": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.transmitterDataFormat"
		},
		"1543": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "buffer"
		},
		"1544": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.connect"
		},
		"1545": {
			"sourceFileName": "lib/Remote/src/receiver.ts",
			"qualifiedName": "default.connect"
		},
		"1546": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"1547": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"1548": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "error"
		},
		"1549": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"1550": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1551": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"1552": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"1553": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1554": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1555": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1556": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1557": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1558": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"1559": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"1560": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1561": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1562": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1563": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1564": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1565": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"1566": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"1567": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1568": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1569": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1570": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1571": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1572": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"1573": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"1574": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1575": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1576": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1577": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1578": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1579": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"1580": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"1581": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1582": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1583": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1584": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1585": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1586": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"1587": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"1588": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"1589": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"1590": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"1591": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"1592": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"1593": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"1594": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"1595": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"1596": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1597": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"1598": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"1599": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1600": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"1601": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"1602": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1603": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1604": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"1605": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"1606": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1607": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1608": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"1609": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"1610": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1611": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1612": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1613": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1614": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1615": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"1616": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"1617": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1618": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1619": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1620": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1621": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1622": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"1623": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"1624": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default"
		},
		"1625": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.createConnection"
		},
		"1626": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.createConnection"
		},
		"1627": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "Type"
		},
		"1628": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "options"
		},
		"1629": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"1630": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"1631": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"1632": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1633": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"1634": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"1635": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"1636": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1637": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"1638": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"1639": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"1640": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"1641": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1642": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"1643": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"1644": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"1645": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"1646": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1647": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"1648": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"1649": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"1650": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "name"
		},
		"1651": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"1652": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"1653": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"1654": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"1655": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"1656": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"1657": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventTargets"
		},
		"1658": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"1659": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"1660": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "signal"
		},
		"1661": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "resource"
		},
		"1662": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1663": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1664": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"1665": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.errorMonitor"
		},
		"1666": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejectionSymbol"
		},
		"1667": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejections"
		},
		"1668": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.defaultMaxListeners"
		},
		"1669": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.__constructor"
		},
		"1670": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default"
		},
		"1671": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.Type"
		},
		"1672": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "options"
		},
		"1673": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.client"
		},
		"1674": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.options"
		},
		"1675": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.data"
		},
		"1676": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object"
		},
		"1677": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.seq"
		},
		"1678": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.lastPingTimestamp"
		},
		"1679": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.ping"
		},
		"1680": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.pingInterval"
		},
		"1681": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.readyAt"
		},
		"1682": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.session"
		},
		"1683": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#maxRetries"
		},
		"1684": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#retries"
		},
		"1685": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#waitTime"
		},
		"1686": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#createDebug"
		},
		"1687": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#createDebug"
		},
		"1688": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "data"
		},
		"1689": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#createData"
		},
		"1690": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#createData"
		},
		"1691": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "data"
		},
		"1692": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#bindEvents"
		},
		"1693": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#bindEvents"
		},
		"1694": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#reconnect"
		},
		"1695": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#reconnect"
		},
		"1696": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.connect"
		},
		"1697": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.connect"
		},
		"1698": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.receiveDataFormat"
		},
		"1699": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.receiveDataFormat"
		},
		"1700": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "buffer"
		},
		"1701": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.sendDataFormat"
		},
		"1702": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.sendDataFormat"
		},
		"1703": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "op"
		},
		"1704": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "method"
		},
		"1705": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "timestamp"
		},
		"1706": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "seq"
		},
		"1707": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "data"
		},
		"1708": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.ping"
		},
		"1709": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.ping"
		},
		"1710": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#req"
		},
		"1711": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#req"
		},
		"1712": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "op"
		},
		"1713": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "method"
		},
		"1714": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "data"
		},
		"1715": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.get"
		},
		"1716": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.get"
		},
		"1717": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "table"
		},
		"1718": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "key"
		},
		"1719": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.set"
		},
		"1720": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.set"
		},
		"1721": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "table"
		},
		"1722": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "key"
		},
		"1723": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "value"
		},
		"1724": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.delete"
		},
		"1725": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.delete"
		},
		"1726": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "table"
		},
		"1727": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "key"
		},
		"1728": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.clear"
		},
		"1729": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.clear"
		},
		"1730": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "table"
		},
		"1731": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.all"
		},
		"1732": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.all"
		},
		"1733": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "table"
		},
		"1734": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "query"
		},
		"1735": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__type"
		},
		"1736": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__type"
		},
		"1737": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "data"
		},
		"1738": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "limit"
		},
		"1739": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.has"
		},
		"1740": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.has"
		},
		"1741": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "table"
		},
		"1742": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "key"
		},
		"1743": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.findOne"
		},
		"1744": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.findOne"
		},
		"1745": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "table"
		},
		"1746": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "query"
		},
		"1747": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__type"
		},
		"1748": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__type"
		},
		"1749": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "data"
		},
		"1750": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.findMany"
		},
		"1751": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.findMany"
		},
		"1752": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "table"
		},
		"1753": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "query"
		},
		"1754": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__type"
		},
		"1755": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__type"
		},
		"1756": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "data"
		},
		"1757": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.deleteMany"
		},
		"1758": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.deleteMany"
		},
		"1759": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "table"
		},
		"1760": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "query"
		},
		"1761": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__type"
		},
		"1762": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__type"
		},
		"1763": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "data"
		},
		"1764": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.analyze"
		},
		"1765": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.analyze"
		},
		"1766": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "table"
		},
		"1767": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "data"
		},
		"1768": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object"
		},
		"1769": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.opCode"
		},
		"1770": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.method"
		},
		"1771": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.timestamp"
		},
		"1772": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.seq"
		},
		"1773": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.data"
		},
		"1774": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object"
		},
		"1775": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.value"
		},
		"1776": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.delay"
		},
		"1777": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object"
		},
		"1778": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.toServer"
		},
		"1779": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.toClient"
		},
		"1780": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.ping"
		},
		"1781": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.cost"
		},
		"1782": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.hash"
		},
		"1783": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#formatAnalyzeData"
		},
		"1784": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.#formatAnalyzeData"
		},
		"1785": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "data"
		},
		"1786": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "sednD"
		},
		"1787": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object"
		},
		"1788": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.opCode"
		},
		"1789": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.method"
		},
		"1790": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.timestamp"
		},
		"1791": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.seq"
		},
		"1792": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.data"
		},
		"1793": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object"
		},
		"1794": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.value"
		},
		"1795": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.delay"
		},
		"1796": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object"
		},
		"1797": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.toServer"
		},
		"1798": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.toClient"
		},
		"1799": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.ping"
		},
		"1800": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.cost"
		},
		"1801": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "__object.hash"
		},
		"1802": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"1803": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"1804": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "error"
		},
		"1805": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"1806": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1807": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"1808": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"1809": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1810": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1811": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1812": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1813": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1814": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"1815": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"1816": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1817": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1818": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1819": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1820": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1821": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"1822": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"1823": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1824": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1825": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1826": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1827": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1828": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"1829": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"1830": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1831": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1832": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1833": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1834": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1835": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"1836": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"1837": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1838": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1839": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1840": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1841": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1842": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"1843": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"1844": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"1845": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"1846": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"1847": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"1848": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"1849": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"1850": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"1851": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"1852": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1853": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"1854": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"1855": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1856": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"1857": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"1858": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1859": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1860": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"1861": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"1862": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1863": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1864": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"1865": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"1866": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1867": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1868": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1869": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1870": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1871": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"1872": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"1873": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"1874": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"1875": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1876": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"1877": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"1878": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"1879": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"1880": {
			"sourceFileName": "lib/Remote/src/transmitter.ts",
			"qualifiedName": "default.Type"
		},
		"1881": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterOptions"
		},
		"1882": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterOptions.username"
		},
		"1883": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterOptions.password"
		},
		"1884": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpNetConnectOpts.timeout"
		},
		"1885": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpSocketConnectOpts.port"
		},
		"1886": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpSocketConnectOpts.host"
		},
		"1887": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpSocketConnectOpts.localAddress"
		},
		"1888": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpSocketConnectOpts.localPort"
		},
		"1889": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpSocketConnectOpts.hints"
		},
		"1890": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpSocketConnectOpts.family"
		},
		"1891": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpSocketConnectOpts.lookup"
		},
		"1892": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpSocketConnectOpts.noDelay"
		},
		"1893": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpSocketConnectOpts.keepAlive"
		},
		"1894": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpSocketConnectOpts.keepAliveInitialDelay"
		},
		"1895": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpSocketConnectOpts.autoSelectFamily"
		},
		"1896": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".TcpSocketConnectOpts.autoSelectFamilyAttemptTimeout"
		},
		"1897": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".ConnectOpts.onread"
		},
		"1898": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".SocketConstructorOpts.fd"
		},
		"1899": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".SocketConstructorOpts.allowHalfOpen"
		},
		"1900": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".SocketConstructorOpts.readable"
		},
		"1901": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".SocketConstructorOpts.writable"
		},
		"1902": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".SocketConstructorOpts.signal"
		},
		"1903": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterOptions.Type"
		},
		"1904": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverOptions"
		},
		"1905": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverOptions.host"
		},
		"1906": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverOptions.port"
		},
		"1907": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverOptions.backlog"
		},
		"1908": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverOptions.databaseType"
		},
		"1909": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverOptions.databaseOptions"
		},
		"1910": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverOptions.userConfig"
		},
		"1911": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "UserConfig"
		},
		"1912": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "UserConfig.username"
		},
		"1913": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "UserConfig.permissions"
		},
		"1914": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "UserConfig.password"
		},
		"1915": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterCreateOptions"
		},
		"1916": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterCreateOptions.path"
		},
		"1917": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterCreateOptions.dbOptions"
		},
		"1918": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"1919": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "__type.type"
		},
		"1920": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "__type.options"
		},
		"1921": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterCreateOptions.Type"
		},
		"1922": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverDataFormat"
		},
		"1923": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverDataFormat.op"
		},
		"1924": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverDataFormat.m"
		},
		"1925": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverDataFormat.t"
		},
		"1926": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverDataFormat.s"
		},
		"1927": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverDataFormat.d"
		},
		"1928": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverDataFormat.c"
		},
		"1929": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverDataFormat.h"
		},
		"1930": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ReceiverDataFormat.se"
		},
		"1931": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterDataFormat"
		},
		"1932": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterDataFormat.op"
		},
		"1933": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterDataFormat.m"
		},
		"1934": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterDataFormat.t"
		},
		"1935": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterDataFormat.s"
		},
		"1936": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterDataFormat.d"
		},
		"1937": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterDataFormat.h"
		},
		"1938": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterDataFormat.se"
		},
		"1939": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterAnaylzeDataFormat"
		},
		"1940": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterAnaylzeDataFormat.method"
		},
		"1941": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "TransmitterAnaylzeDataFormat.data"
		},
		"1942": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ISocket"
		},
		"1943": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "ISocket.userData"
		},
		"1944": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "__type"
		},
		"1945": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "__type.username"
		},
		"1946": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "__type.session"
		},
		"1947": {
			"sourceFileName": "lib/Remote/typings/interface.ts",
			"qualifiedName": "__type.permissions"
		},
		"1948": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.destroySoon"
		},
		"1949": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.destroySoon"
		},
		"1950": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.write"
		},
		"1951": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.write"
		},
		"1952": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "buffer"
		},
		"1953": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "cb"
		},
		"1954": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"1955": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"1956": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"1957": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.write"
		},
		"1958": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "str"
		},
		"1959": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "encoding"
		},
		"1960": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "cb"
		},
		"1961": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"1962": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"1963": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"1964": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.connect"
		},
		"1965": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.connect"
		},
		"1966": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "options"
		},
		"1967": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "connectionListener"
		},
		"1968": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"1969": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"1970": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.connect"
		},
		"1971": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "port"
		},
		"1972": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "host"
		},
		"1973": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "connectionListener"
		},
		"1974": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"1975": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"1976": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.connect"
		},
		"1977": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "port"
		},
		"1978": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "connectionListener"
		},
		"1979": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"1980": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"1981": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.connect"
		},
		"1982": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "path"
		},
		"1983": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "connectionListener"
		},
		"1984": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"1985": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"1986": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.setEncoding"
		},
		"1987": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.setEncoding"
		},
		"1988": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "encoding"
		},
		"1989": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.pause"
		},
		"1990": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.pause"
		},
		"1991": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.resetAndDestroy"
		},
		"1992": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.resetAndDestroy"
		},
		"1993": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.resume"
		},
		"1994": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.resume"
		},
		"1995": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.setTimeout"
		},
		"1996": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.setTimeout"
		},
		"1997": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "timeout"
		},
		"1998": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "callback"
		},
		"1999": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2000": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2001": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.setNoDelay"
		},
		"2002": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.setNoDelay"
		},
		"2003": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "noDelay"
		},
		"2004": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.setKeepAlive"
		},
		"2005": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.setKeepAlive"
		},
		"2006": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "enable"
		},
		"2007": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "initialDelay"
		},
		"2008": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.address"
		},
		"2009": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.address"
		},
		"2010": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"2011": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.unref"
		},
		"2012": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.unref"
		},
		"2013": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.ref"
		},
		"2014": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.ref"
		},
		"2015": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.autoSelectFamilyAttemptedAddresses"
		},
		"2016": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.bufferSize"
		},
		"2017": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.bytesRead"
		},
		"2018": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.bytesWritten"
		},
		"2019": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.connecting"
		},
		"2020": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.pending"
		},
		"2021": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.destroyed"
		},
		"2022": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.localAddress"
		},
		"2023": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.localPort"
		},
		"2024": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.localFamily"
		},
		"2025": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.readyState"
		},
		"2026": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.remoteAddress"
		},
		"2027": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.remoteFamily"
		},
		"2028": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.remotePort"
		},
		"2029": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.timeout"
		},
		"2030": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.end"
		},
		"2031": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.end"
		},
		"2032": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "callback"
		},
		"2033": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2034": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2035": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.end"
		},
		"2036": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "buffer"
		},
		"2037": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "callback"
		},
		"2038": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2039": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2040": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.end"
		},
		"2041": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "str"
		},
		"2042": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "encoding"
		},
		"2043": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "callback"
		},
		"2044": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2045": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2046": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.addListener"
		},
		"2047": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.addListener"
		},
		"2048": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2049": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2050": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2051": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2052": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "args"
		},
		"2053": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.addListener"
		},
		"2054": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2055": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2056": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2057": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2058": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "hadError"
		},
		"2059": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.addListener"
		},
		"2060": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2061": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2062": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2063": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2064": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.addListener"
		},
		"2065": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2066": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2067": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2068": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2069": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "data"
		},
		"2070": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.addListener"
		},
		"2071": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2072": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2073": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2074": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2075": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.addListener"
		},
		"2076": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2077": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2078": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2079": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2080": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.addListener"
		},
		"2081": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2082": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2083": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2084": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2085": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"2086": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.addListener"
		},
		"2087": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2088": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2089": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2090": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2091": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"2092": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "address"
		},
		"2093": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "family"
		},
		"2094": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "host"
		},
		"2095": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.addListener"
		},
		"2096": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2097": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2098": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2099": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2100": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.addListener"
		},
		"2101": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2102": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2103": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2104": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2105": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.emit"
		},
		"2106": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.emit"
		},
		"2107": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2108": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "args"
		},
		"2109": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.emit"
		},
		"2110": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2111": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "hadError"
		},
		"2112": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.emit"
		},
		"2113": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2114": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.emit"
		},
		"2115": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2116": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "data"
		},
		"2117": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.emit"
		},
		"2118": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2119": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.emit"
		},
		"2120": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2121": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.emit"
		},
		"2122": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2123": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"2124": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.emit"
		},
		"2125": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2126": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"2127": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "address"
		},
		"2128": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "family"
		},
		"2129": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "host"
		},
		"2130": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.emit"
		},
		"2131": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2132": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.emit"
		},
		"2133": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2134": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.on"
		},
		"2135": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.on"
		},
		"2136": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2137": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2138": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2139": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2140": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "args"
		},
		"2141": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.on"
		},
		"2142": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2143": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2144": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2145": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2146": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "hadError"
		},
		"2147": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.on"
		},
		"2148": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2149": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2150": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2151": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2152": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.on"
		},
		"2153": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2154": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2155": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2156": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2157": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "data"
		},
		"2158": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.on"
		},
		"2159": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2160": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2161": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2162": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2163": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.on"
		},
		"2164": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2165": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2166": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2167": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2168": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.on"
		},
		"2169": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2170": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2171": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2172": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2173": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"2174": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.on"
		},
		"2175": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2176": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2177": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2178": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2179": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"2180": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "address"
		},
		"2181": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "family"
		},
		"2182": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "host"
		},
		"2183": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.on"
		},
		"2184": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2185": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2186": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2187": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2188": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.on"
		},
		"2189": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2190": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2191": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2192": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2193": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.once"
		},
		"2194": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.once"
		},
		"2195": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2196": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2197": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2198": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2199": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "args"
		},
		"2200": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.once"
		},
		"2201": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2202": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2203": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2204": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2205": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "hadError"
		},
		"2206": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.once"
		},
		"2207": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2208": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2209": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2210": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2211": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.once"
		},
		"2212": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2213": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2214": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2215": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2216": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "data"
		},
		"2217": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.once"
		},
		"2218": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2219": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2220": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2221": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2222": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.once"
		},
		"2223": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2224": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2225": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2226": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2227": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.once"
		},
		"2228": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2229": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2230": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2231": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2232": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"2233": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.once"
		},
		"2234": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2235": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2236": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2237": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2238": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"2239": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "address"
		},
		"2240": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "family"
		},
		"2241": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "host"
		},
		"2242": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.once"
		},
		"2243": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2244": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2245": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2246": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2247": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.once"
		},
		"2248": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2249": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2250": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2251": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2252": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependListener"
		},
		"2253": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependListener"
		},
		"2254": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2255": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2256": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2257": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2258": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "args"
		},
		"2259": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependListener"
		},
		"2260": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2261": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2262": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2263": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2264": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "hadError"
		},
		"2265": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependListener"
		},
		"2266": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2267": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2268": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2269": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2270": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependListener"
		},
		"2271": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2272": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2273": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2274": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2275": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "data"
		},
		"2276": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependListener"
		},
		"2277": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2278": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2279": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2280": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2281": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependListener"
		},
		"2282": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2283": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2284": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2285": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2286": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependListener"
		},
		"2287": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2288": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2289": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2290": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2291": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"2292": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependListener"
		},
		"2293": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2294": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2295": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2296": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2297": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"2298": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "address"
		},
		"2299": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "family"
		},
		"2300": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "host"
		},
		"2301": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependListener"
		},
		"2302": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2303": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2304": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2305": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2306": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependListener"
		},
		"2307": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2308": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2309": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2310": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2311": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependOnceListener"
		},
		"2312": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependOnceListener"
		},
		"2313": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2314": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2315": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2316": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2317": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "args"
		},
		"2318": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependOnceListener"
		},
		"2319": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2320": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2321": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2322": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2323": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "hadError"
		},
		"2324": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependOnceListener"
		},
		"2325": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2326": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2327": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2328": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2329": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependOnceListener"
		},
		"2330": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2331": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2332": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2333": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2334": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "data"
		},
		"2335": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependOnceListener"
		},
		"2336": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2337": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2338": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2339": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2340": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependOnceListener"
		},
		"2341": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2342": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2343": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2344": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2345": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependOnceListener"
		},
		"2346": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2347": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2348": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2349": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2350": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"2351": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependOnceListener"
		},
		"2352": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2353": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2354": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2355": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2356": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "err"
		},
		"2357": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "address"
		},
		"2358": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "family"
		},
		"2359": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "host"
		},
		"2360": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependOnceListener"
		},
		"2361": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2362": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2363": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2364": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2365": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "\"net\".Socket.prependOnceListener"
		},
		"2366": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "event"
		},
		"2367": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "listener"
		},
		"2368": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2369": {
			"sourceFileName": "node_modules/@types/node/net.d.ts",
			"qualifiedName": "__type"
		},
		"2370": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.writable"
		},
		"2371": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.writableEnded"
		},
		"2372": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.writableFinished"
		},
		"2373": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.writableHighWaterMark"
		},
		"2374": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.writableLength"
		},
		"2375": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.writableObjectMode"
		},
		"2376": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.writableCorked"
		},
		"2377": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.writableNeedDrain"
		},
		"2378": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.closed"
		},
		"2379": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.errored"
		},
		"2380": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.allowHalfOpen"
		},
		"2381": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex._write"
		},
		"2382": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex._write"
		},
		"2383": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "chunk"
		},
		"2384": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "encoding"
		},
		"2385": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "callback"
		},
		"2386": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2387": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2388": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "error"
		},
		"2389": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex._writev"
		},
		"2390": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex._writev"
		},
		"2391": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "chunks"
		},
		"2392": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2393": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type.chunk"
		},
		"2394": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type.encoding"
		},
		"2395": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "callback"
		},
		"2396": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2397": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2398": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "error"
		},
		"2399": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex._destroy"
		},
		"2400": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex._destroy"
		},
		"2401": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "error"
		},
		"2402": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "callback"
		},
		"2403": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2404": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2405": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "error"
		},
		"2406": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex._final"
		},
		"2407": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex._final"
		},
		"2408": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "callback"
		},
		"2409": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2410": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2411": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "error"
		},
		"2412": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.setDefaultEncoding"
		},
		"2413": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.setDefaultEncoding"
		},
		"2414": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "encoding"
		},
		"2415": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.cork"
		},
		"2416": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.cork"
		},
		"2417": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.uncork"
		},
		"2418": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.uncork"
		},
		"2419": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2420": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2421": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "event"
		},
		"2422": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "listener"
		},
		"2423": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2424": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2425": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2426": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "event"
		},
		"2427": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "listener"
		},
		"2428": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2429": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2430": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "chunk"
		},
		"2431": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2432": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "event"
		},
		"2433": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "listener"
		},
		"2434": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2435": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2436": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2437": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "event"
		},
		"2438": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "listener"
		},
		"2439": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2440": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2441": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2442": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "event"
		},
		"2443": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "listener"
		},
		"2444": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2445": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2446": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "err"
		},
		"2447": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2448": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "event"
		},
		"2449": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "listener"
		},
		"2450": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2451": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2452": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2453": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "event"
		},
		"2454": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "listener"
		},
		"2455": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2456": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2457": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2458": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "event"
		},
		"2459": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "listener"
		},
		"2460": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2461": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2462": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "src"
		},
		"2463": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2464": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "event"
		},
		"2465": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "listener"
		},
		"2466": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2467": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2468": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2469": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "event"
		},
		"2470": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "listener"
		},
		"2471": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2472": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2473": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2474": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "event"
		},
		"2475": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "listener"
		},
		"2476": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2477": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2478": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "src"
		},
		"2479": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.Duplex.removeListener"
		},
		"2480": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "event"
		},
		"2481": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "listener"
		},
		"2482": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2483": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2484": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "args"
		},
		"2485": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.readableAborted"
		},
		"2486": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.readable"
		},
		"2487": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.readableDidRead"
		},
		"2488": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.readableEncoding"
		},
		"2489": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.readableEnded"
		},
		"2490": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.readableFlowing"
		},
		"2491": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.readableHighWaterMark"
		},
		"2492": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.readableLength"
		},
		"2493": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.readableObjectMode"
		},
		"2494": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase._construct"
		},
		"2495": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase._construct"
		},
		"2496": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "callback"
		},
		"2497": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2498": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2499": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "error"
		},
		"2500": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase._read"
		},
		"2501": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase._read"
		},
		"2502": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "size"
		},
		"2503": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.read"
		},
		"2504": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.read"
		},
		"2505": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "size"
		},
		"2506": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.isPaused"
		},
		"2507": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.isPaused"
		},
		"2508": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.unpipe"
		},
		"2509": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.unpipe"
		},
		"2510": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "destination"
		},
		"2511": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.unshift"
		},
		"2512": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.unshift"
		},
		"2513": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "chunk"
		},
		"2514": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "encoding"
		},
		"2515": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.wrap"
		},
		"2516": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.wrap"
		},
		"2517": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "stream"
		},
		"2518": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.push"
		},
		"2519": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.push"
		},
		"2520": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "chunk"
		},
		"2521": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "encoding"
		},
		"2522": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.iterator"
		},
		"2523": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.iterator"
		},
		"2524": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2525": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2526": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type.destroyOnReturn"
		},
		"2527": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.map"
		},
		"2528": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.map"
		},
		"2529": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "fn"
		},
		"2530": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2531": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2532": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "data"
		},
		"2533": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2534": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2535": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.filter"
		},
		"2536": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.filter"
		},
		"2537": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "fn"
		},
		"2538": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2539": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2540": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "data"
		},
		"2541": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2542": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2543": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.forEach"
		},
		"2544": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.forEach"
		},
		"2545": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "fn"
		},
		"2546": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2547": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2548": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "data"
		},
		"2549": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2550": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2551": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.toArray"
		},
		"2552": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.toArray"
		},
		"2553": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2554": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.some"
		},
		"2555": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.some"
		},
		"2556": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "fn"
		},
		"2557": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2558": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2559": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "data"
		},
		"2560": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2561": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2562": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.find"
		},
		"2563": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.find"
		},
		"2564": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "T"
		},
		"2565": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "fn"
		},
		"2566": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2567": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2568": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "data"
		},
		"2569": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2570": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2571": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.find"
		},
		"2572": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "fn"
		},
		"2573": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2574": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2575": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "data"
		},
		"2576": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2577": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2578": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.every"
		},
		"2579": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.every"
		},
		"2580": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "fn"
		},
		"2581": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2582": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2583": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "data"
		},
		"2584": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2585": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2586": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.flatMap"
		},
		"2587": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.flatMap"
		},
		"2588": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "fn"
		},
		"2589": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2590": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2591": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "data"
		},
		"2592": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2593": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2594": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.drop"
		},
		"2595": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.drop"
		},
		"2596": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "limit"
		},
		"2597": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2598": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.take"
		},
		"2599": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.take"
		},
		"2600": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "limit"
		},
		"2601": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2602": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.asIndexedPairs"
		},
		"2603": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.asIndexedPairs"
		},
		"2604": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2605": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.reduce"
		},
		"2606": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.reduce"
		},
		"2607": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "T"
		},
		"2608": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "fn"
		},
		"2609": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2610": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2611": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "previous"
		},
		"2612": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "data"
		},
		"2613": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2614": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "initial"
		},
		"2615": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2616": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.reduce"
		},
		"2617": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "T"
		},
		"2618": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "fn"
		},
		"2619": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2620": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2621": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "previous"
		},
		"2622": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "data"
		},
		"2623": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2624": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "initial"
		},
		"2625": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2626": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.destroy"
		},
		"2627": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.destroy"
		},
		"2628": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "error"
		},
		"2629": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.[asyncIterator]"
		},
		"2630": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.[asyncIterator]"
		},
		"2631": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.[asyncDispose]"
		},
		"2632": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "ReadableBase.[asyncDispose]"
		},
		"2633": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.pipe"
		},
		"2634": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.pipe"
		},
		"2635": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "T"
		},
		"2636": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "destination"
		},
		"2637": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2638": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2639": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type.end"
		},
		"2640": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.compose"
		},
		"2641": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "internal.compose"
		},
		"2642": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "T"
		},
		"2643": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "stream"
		},
		"2644": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "options"
		},
		"2645": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type"
		},
		"2646": {
			"sourceFileName": "node_modules/@types/node/stream.d.ts",
			"qualifiedName": "__type.signal"
		},
		"2647": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"2648": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.[captureRejectionSymbol]"
		},
		"2649": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "error"
		},
		"2650": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"2651": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"2652": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"2653": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"2654": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"2655": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"2656": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"2657": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"2658": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"2659": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"2660": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"2661": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"2662": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"2663": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"2664": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"2665": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"2666": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"2667": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"2668": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"2669": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"2670": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"2671": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"2672": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"2673": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"2674": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"2675": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"2676": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"2677": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"2678": {
			"sourceFileName": "node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"2679": {
			"sourceFileName": "lib/Remote/typings/type.ts",
			"qualifiedName": "DatabaseOptions"
		},
		"2680": {
			"sourceFileName": "lib/Remote/typings/type.ts",
			"qualifiedName": "Type"
		},
		"2681": {
			"sourceFileName": "lib/Remote/typings/type.ts",
			"qualifiedName": "Key"
		},
		"2682": {
			"sourceFileName": "lib/Remote/typings/type.ts",
			"qualifiedName": "Type"
		},
		"2683": {
			"sourceFileName": "lib/Remote/typings/type.ts",
			"qualifiedName": "Value"
		},
		"2684": {
			"sourceFileName": "lib/Remote/typings/type.ts",
			"qualifiedName": "Type"
		},
		"2685": {
			"sourceFileName": "lib/Remote/typings/type.ts",
			"qualifiedName": "PossibleDatabaseTypes"
		},
		"2686": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "TransmitterOpCodes"
		},
		"2687": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "TransmitterOpCodes.Connect"
		},
		"2688": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "TransmitterOpCodes.Ping"
		},
		"2689": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "TransmitterOpCodes.Operation"
		},
		"2690": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "TransmitterOpCodes.Analyze"
		},
		"2691": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "TransmitterOpCodes.Disconnect"
		},
		"2692": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "ReceiverOpCodes"
		},
		"2693": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "ReceiverOpCodes.AckConnect"
		},
		"2694": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "ReceiverOpCodes.Pong"
		},
		"2695": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "ReceiverOpCodes.ConnectionDenied"
		},
		"2696": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "ReceiverOpCodes.AckOperation"
		},
		"2697": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "ReceiverOpCodes.AckAnalyze"
		},
		"2698": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "ReceiverOpCodes.AckDisconnect"
		},
		"2699": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "Permissions"
		},
		"2700": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "Permissions.ROnly"
		},
		"2701": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "Permissions.WOnly"
		},
		"2702": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "Permissions.RW"
		},
		"2703": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "Permissions.Manage"
		},
		"2704": {
			"sourceFileName": "lib/Remote/typings/enum.ts",
			"qualifiedName": "Permissions.Admin"
		}
	}
}